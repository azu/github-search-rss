{
    "version": "https://jsonfeed.org/version/1",
    "title": "Fyrd/caniuse Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/caniuse.json",
    "feed_url": "https://azu.github.io/github-search-rss/caniuse.json",
    "description": "Fyrd/caniuse Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/60073468?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">These are two new options that the CSS property <code class=\"notranslate\">word-break</code> supports now.<br>\nThey are in this Editor's Draft:<br>\n<code class=\"notranslate\">manual</code>: <a href=\"https://drafts.csswg.org/css-text-4/#valdef-word-break-manual\" rel=\"nofollow\">https://drafts.csswg.org/css-text-4/#valdef-word-break-manual</a><br>\n<code class=\"notranslate\">auto-phrase</code>: <a href=\"https://drafts.csswg.org/css-text-4/#valdef-word-break-auto-phrase\" rel=\"nofollow\">https://drafts.csswg.org/css-text-4/#valdef-word-break-auto-phrase</a></p>\n<p dir=\"auto\">Currently, <code class=\"notranslate\">auto-phrase</code> is supported in Chromium since version 119 (for Japanese only, if indicated by a <code class=\"notranslate\">lang</code> attribute) and <code class=\"notranslate\">manual</code> seems to not be supported in any browser.<br>\nSafari also seems to be working on implementing <code class=\"notranslate\">auto-phrase</code>.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6922",
            "title": "CSS word-break: 'auto-phrase' and 'manual'",
            "date_modified": "2023-12-25T10:08:12.000Z",
            "date_published": "2023-12-14T23:13:26.000Z",
            "author": {
                "name": "Psychpsyo",
                "url": "https://github.com/Psychpsyo"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/52511672?u=c4f75b6033d102831f98f3bc55c3b1c584469dc1&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Add support of webkitAudioDecodedByteCount</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6920",
            "title": "Support of webkitAudioDecodedByteCount",
            "date_modified": "2023-12-21T06:30:05.000Z",
            "date_published": "2023-12-12T15:30:00.000Z",
            "author": {
                "name": "eldardada",
                "url": "https://github.com/eldardada"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/9144099?u=ba1431730c15a417972fa1f5c7e15b3fed52bc83&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Picking up off of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1962050123\" data-permission-text=\"Title is private\" data-url=\"https://github.com/Fyrd/caniuse/issues/6872\" data-hovercard-type=\"issue\" data-hovercard-url=\"/Fyrd/caniuse/issues/6872/hovercard\" href=\"https://github.com/Fyrd/caniuse/issues/6872\">#6872</a>, Managed Media Source support has landed in Safariâ€”it would be great to add a page showing support of this new API.</p>\n<p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1730349777\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/media-source/issues/320\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/media-source/issues/320/hovercard\" href=\"https://github.com/w3c/media-source/issues/320\">w3c/media-source#320</a><br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1958102749\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/media-source/issues/329\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/w3c/media-source/pull/329/hovercard\" href=\"https://github.com/w3c/media-source/pull/329\">w3c/media-source#329</a></p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6890",
            "title": "Adding Managed Media Source",
            "date_modified": "2023-11-08T06:13:45.000Z",
            "date_published": "2023-11-07T21:32:40.000Z",
            "author": {
                "name": "WilliamChiu",
                "url": "https://github.com/WilliamChiu"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1172424?u=807ec746eb19edf69a4d9fea3eb115aa3017000d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">HTML spec: <a href=\"https://html.spec.whatwg.org/#the-details-element\" rel=\"nofollow\">https://html.spec.whatwg.org/#the-details-element</a></p>\n<p dir=\"auto\">Explainer: <a href=\"https://open-ui.org/components/accordion.explainer/\" rel=\"nofollow\">https://open-ui.org/components/accordion.explainer/</a></p>\n<p dir=\"auto\">Chrome status: <a href=\"https://chromestatus.com/feature/6710427028815872\" rel=\"nofollow\">https://chromestatus.com/feature/6710427028815872</a></p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6889",
            "title": "Support 'name' attribute on <details> (\"Accordion pattern using name attribute on <details> elements\")",
            "date_modified": "2023-11-08T06:13:59.000Z",
            "date_published": "2023-11-07T04:33:20.000Z",
            "author": {
                "name": "michaelcpuckett",
                "url": "https://github.com/michaelcpuckett"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/86165318?u=e38faa89ff6584f321dbd8682d20379c0128464c&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">I assumed using WebP or AVIF for favicons would be completely unsupported in browsers, however, it turns out Firefox 119.0 handles them just fine.</p>\n<p dir=\"auto\">I don't know how widely supported this is, searching for <code class=\"notranslate\">favicon.webp</code> returns <em>very</em> limited results unfortunately. My initial guess is that any browser that supports these image formats overall would support them as favicons, but I doubt this is always true across all browsers.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6880",
            "title": "WebP & AVIF favicons",
            "date_modified": "2023-11-08T06:14:11.000Z",
            "date_published": "2023-10-30T15:15:01.000Z",
            "author": {
                "name": "Winterhuman",
                "url": "https://github.com/Winterhuman"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2644614?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><ul dir=\"auto\">\n<li>Spec:\n<ul dir=\"auto\">\n<li><a href=\"https://open-ui.org/components/invokers.explainer/\" rel=\"nofollow\">https://open-ui.org/components/invokers.explainer/</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1932098948\" data-permission-text=\"Title is private\" data-url=\"https://github.com/whatwg/html/issues/9841\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/whatwg/html/pull/9841/hovercard\" href=\"https://github.com/whatwg/html/pull/9841\">whatwg/html#9841</a></li>\n</ul>\n</li>\n<li>Chrome:\n<ul dir=\"auto\">\n<li>Intent to Prototype: <a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/tDanwUCp2cg/m/IPc9hvHcFAAJ\" rel=\"nofollow\">https://groups.google.com/a/chromium.org/g/blink-dev/c/tDanwUCp2cg/m/IPc9hvHcFAAJ</a></li>\n<li><a href=\"https://chromestatus.com/feature/5142517058371584\" rel=\"nofollow\">https://chromestatus.com/feature/5142517058371584</a></li>\n</ul>\n</li>\n<li>Firefox:\n<ul dir=\"auto\">\n<li>Position request: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1932100066\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mozilla/standards-positions/issues/902\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mozilla/standards-positions/issues/902/hovercard\" href=\"https://github.com/mozilla/standards-positions/issues/902\">mozilla/standards-positions#902</a></li>\n<li><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1856430\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1856430</a></li>\n</ul>\n</li>\n<li>WebKit:\n<ul dir=\"auto\">\n<li>Position request: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1932098986\" data-permission-text=\"Title is private\" data-url=\"https://github.com/WebKit/standards-positions/issues/264\" data-hovercard-type=\"issue\" data-hovercard-url=\"/WebKit/standards-positions/issues/264/hovercard\" href=\"https://github.com/WebKit/standards-positions/issues/264\">WebKit/standards-positions#264</a></li>\n<li><a href=\"https://bugs.webkit.org/show_bug.cgi?id=262840\" rel=\"nofollow\">https://bugs.webkit.org/show_bug.cgi?id=262840</a></li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p dir=\"auto\">Adding invoketarget and invokeaction attributes to &lt;button&gt; and &lt;input type=\"button\"&gt; / &lt;input type=\"reset\"&gt; elements would allow authors to assign behaviour to buttons in a more accessible and declarative way, while reducing bugs and simplifying the amount of JavaScript pages are required to ship for interactivity. Buttons with invoketarget will - when clicked, touched, or enacted via keypress - dispatch an InvokeEvent on the element referenced by invoketarget, with some default behaviours.</p>\n</blockquote>\n<p dir=\"auto\">ðŸ¤©</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6856",
            "title": "Add Invokers, currently `invoketarget` & `invokeaction`",
            "date_modified": "2023-10-13T05:28:03.000Z",
            "date_published": "2023-10-10T19:12:09.000Z",
            "author": {
                "name": "Schweinepriester",
                "url": "https://github.com/Schweinepriester"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2644614?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><ul dir=\"auto\">\n<li>Spec:\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1727729022\" data-permission-text=\"Title is private\" data-url=\"https://github.com/whatwg/html/issues/9341\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/whatwg/html/pull/9341/hovercard\" href=\"https://github.com/whatwg/html/pull/9341\">whatwg/html#9341</a></li>\n<li><a href=\"https://html.spec.whatwg.org/#attr-source-media\" rel=\"nofollow\">https://html.spec.whatwg.org/#attr-source-media</a></li>\n</ul>\n</li>\n<li><a href=\"https://mastodon.social/@scottjehl@mstdn.social/111144562009519375\" rel=\"nofollow\">https://mastodon.social/@scottjehl@mstdn.social/111144562009519375</a></li>\n<li><a href=\"https://scottjehl.com/posts/responsive-video/\" rel=\"nofollow\">https://scottjehl.com/posts/responsive-video/</a></li>\n<li>Tests (mentioned there^)\n<ul dir=\"auto\">\n<li><a href=\"https://www.zachleat.com/test/media-on-video/video-media.html\" rel=\"nofollow\">https://www.zachleat.com/test/media-on-video/video-media.html</a></li>\n<li><a href=\"https://scottjehl.com/sandbox/video-media/\" rel=\"nofollow\">https://scottjehl.com/sandbox/video-media/</a></li>\n</ul>\n</li>\n<li>Safari: \"Safari hung onto their support\"</li>\n<li>Firefox: <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1836128\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1836128</a></li>\n<li>Chrome: <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1450316\" rel=\"nofollow\">https://bugs.chromium.org/p/chromium/issues/detail?id=1450316</a></li>\n</ul>\n<p dir=\"auto\">Like so (stolen from the blog post):</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"&lt;video controls autoplay loop&gt;\n    &lt;source src=&quot;large.mp4&quot; type=&quot;video/mp4&quot; media=&quot;(min-width: 600px)&quot;&gt;\n    &lt;source src=&quot;small.mp4&quot; type=&quot;video/mp4&quot;&gt;\n&lt;/video&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">&lt;video controls autoplay loop&gt;\n    &lt;source src=\"large.mp4\" type=\"video/mp4\" media=\"(min-width: 600px)\"&gt;\n    &lt;source src=\"small.mp4\" type=\"video/mp4\"&gt;\n&lt;/video&gt;\n</code></pre></div>",
            "url": "https://github.com/Fyrd/caniuse/issues/6845",
            "title": "Add \"Responsive Video\" aka. `media` attribute for `<source>` element in `<video>`",
            "date_modified": "2023-10-05T19:47:25.000Z",
            "date_published": "2023-09-29T09:09:44.000Z",
            "author": {
                "name": "Schweinepriester",
                "url": "https://github.com/Schweinepriester"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/17821843?u=a5d6a64ef397e100677d088fbb6e5783cb99636a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Scoped Custom Element Registry is now behind an experimental feature flag within Chrome.</p>\n<p dir=\"auto\">Additionally, the spec has moved <a href=\"https://github.com/WICG/webcomponents/issues/1026\" data-hovercard-type=\"issue\" data-hovercard-url=\"/WICG/webcomponents/issues/1026/hovercard\">another step forward</a> towards its final form with <a href=\"https://www.w3.org/2023/09/TPAC/\" rel=\"nofollow\">W3C's TPAC 2023</a> annual event having occurred in September.</p>\n<p dir=\"auto\">Can we add this feature to caniuse at this point?</p>\n<ul dir=\"auto\">\n<li>Original proposal: <a href=\"https://github.com/WICG/webcomponents/blob/gh-pages/proposals/Scoped-Custom-Element-Registries.md\">https://github.com/WICG/webcomponents/blob/gh-pages/proposals/Scoped-Custom-Element-Registries.md</a></li>\n<li>Ongoing discussion: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"280602178\" data-permission-text=\"Title is private\" data-url=\"https://github.com/WICG/webcomponents/issues/716\" data-hovercard-type=\"issue\" data-hovercard-url=\"/WICG/webcomponents/issues/716/hovercard\" href=\"https://github.com/WICG/webcomponents/issues/716\">WICG/webcomponents#716</a></li>\n<li>Chrome feature status: <a href=\"https://chromestatus.com/feature/5090435261792256\" rel=\"nofollow\">https://chromestatus.com/feature/5090435261792256</a></li>\n</ul>",
            "url": "https://github.com/Fyrd/caniuse/issues/6834",
            "title": "Add \"Scoped Custom Element Registry\" as it is now behind an experimental feature flag in Chrome",
            "date_modified": "2023-10-02T18:39:58.000Z",
            "date_published": "2023-09-19T10:58:49.000Z",
            "author": {
                "name": "danwulff",
                "url": "https://github.com/danwulff"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/14237?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/tc39/proposal-explicit-resource-management\">Explicit Resource Management</a> is a Stage 3 proposal.</p>\n<p dir=\"auto\">TypeScript 5.2 has added <a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-5-2/#using-declarations-and-explicit-resource-management\" rel=\"nofollow\">support for it</a>. There is a <a href=\"https://babeljs.io/docs/babel-plugin-proposal-explicit-resource-management\" rel=\"nofollow\">Babel plugin</a> to parse and transform the syntax as well.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6830",
            "title": "Add tracking for Explicit Resource Management (`using` and `await using`)",
            "date_modified": "2023-10-02T05:31:30.000Z",
            "date_published": "2023-09-13T17:07:06.000Z",
            "author": {
                "name": "jtbandes",
                "url": "https://github.com/jtbandes"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2644614?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1869035304\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/csswg-drafts/issues/9251\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/w3c/csswg-drafts/pull/9251/hovercard\" href=\"https://github.com/w3c/csswg-drafts/pull/9251\">w3c/csswg-drafts#9251</a></li>\n<li><a href=\"https://botsin.space/@intenttoship/110987203053231471\" rel=\"nofollow\">https://botsin.space/@intenttoship/110987203053231471</a></li>\n<li>Chrome: Intent to prototype: <a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/cA-cmgrA_QE/m/6uF_LYq4AAAJ\" rel=\"nofollow\">https://groups.google.com/a/chromium.org/g/blink-dev/c/cA-cmgrA_QE/m/6uF_LYq4AAAJ</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1809167033\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mozilla/standards-positions/issues/849\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mozilla/standards-positions/issues/849/hovercard\" href=\"https://github.com/mozilla/standards-positions/issues/849\">mozilla/standards-positions#849</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1809178637\" data-permission-text=\"Title is private\" data-url=\"https://github.com/WebKit/standards-positions/issues/231\" data-hovercard-type=\"issue\" data-hovercard-url=\"/WebKit/standards-positions/issues/231/hovercard\" href=\"https://github.com/WebKit/standards-positions/issues/231\">WebKit/standards-positions#231</a></li>\n</ul>",
            "url": "https://github.com/Fyrd/caniuse/issues/6818",
            "title": "Add CSS `field-sizing` (previously `form-sizing`)",
            "date_modified": "2023-10-23T15:46:09.000Z",
            "date_published": "2023-09-01T07:29:08.000Z",
            "author": {
                "name": "Schweinepriester",
                "url": "https://github.com/Schweinepriester"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/6459309?u=812e983886561a6c2a3d5cb9ec70e7fc1300c3d6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Opus has an <a href=\"https://opus-codec.org/docs/opus_in_isobmff.html\" rel=\"nofollow\">ISOBMFF (MP4) encapsulation</a> defined in 2016. There may be differences in supporting the base Ogg format, in WebM container, and in the MP4/M4A container. MP4 can reasonably used in the &lt;audio&gt; tag: M4A/AAC files are an example.</p>\n<p dir=\"auto\">I know that Opus WebM with up to 2 channels is okay in safari, but Opus Ogg is not okay in Safari at all.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6805",
            "title": "Opus: Need data for MP4 and WebM containers",
            "date_modified": "2023-11-22T15:57:46.000Z",
            "date_published": "2023-08-18T08:04:20.000Z",
            "author": {
                "name": "Artoria2e5",
                "url": "https://github.com/Artoria2e5"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2784308?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">We already have the <a href=\"https://github.com/Fyrd/caniuse/blob/main/features-json/font-variant-alternates.json\"><code class=\"notranslate\">font-variant-alternates</code></a> property, but the <code class=\"notranslate\">@font-feature-values</code> associated with it is missing. In CSS, the two need to work together.</p>\n<ul dir=\"auto\">\n<li>Safari 16.2 <a href=\"https://webkit.org/blog/13591/webkit-features-in-safari-16-2/#:~:text=Interop%202022%20score.-,font%20features,-Safari%2016.2%20adds\" rel=\"nofollow\">https://webkit.org/blog/13591/webkit-features-in-safari-16-2/#:~:text=Interop%202022%20score.-,font%20features,-Safari%2016.2%20adds</a></li>\n<li>Chrome 111 <a href=\"https://chromestatus.com/feature/5070560260784128\" rel=\"nofollow\">https://chromestatus.com/feature/5070560260784128</a></li>\n<li>Firefox 34 <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=975744\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=975744</a></li>\n<li>Demo: <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-alternates#examples\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-alternates#examples</a></li>\n</ul>",
            "url": "https://github.com/Fyrd/caniuse/issues/6804",
            "title": "Add `@font-feature-values`",
            "date_modified": "2023-08-19T18:14:32.000Z",
            "date_published": "2023-08-18T06:51:56.000Z",
            "author": {
                "name": "yisibl",
                "url": "https://github.com/yisibl"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/376895?u=72be7f23ca11de60505428efaf103a9e115cfb17&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">The @starting-style rule will be shipping with Chrome 117 stable next month and will be tremendously helpful against a minor but irritating CSS headache. It will finally allow you to use CSS transitions with elements that are going to or from display:none. No more hacks needed!</p>\n<p dir=\"auto\">Spec: <a href=\"https://drafts.csswg.org/css-transitions-2/#defining-before-change-style-the-starting-style-rule\" rel=\"nofollow\">https://drafts.csswg.org/css-transitions-2/#defining-before-change-style-the-starting-style-rule</a><br>\nChrome notes: <a href=\"https://chromestatus.com/feature/4515377717968896\" rel=\"nofollow\">https://chromestatus.com/feature/4515377717968896</a><br>\nExample1: <a href=\"https://www.bram.us/2023/05/24/the-yellow-fade-technique-with-modern-css-using-starting-style/\" rel=\"nofollow\">https://www.bram.us/2023/05/24/the-yellow-fade-technique-with-modern-css-using-starting-style/</a><br>\nExample2: <a href=\"https://codepen.io/callmetimm/pen/ExOqbBe\" rel=\"nofollow\">https://codepen.io/callmetimm/pen/ExOqbBe</a></p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6800",
            "title": "Add support for @starting-style rule",
            "date_modified": "2023-09-18T12:32:13.000Z",
            "date_published": "2023-08-14T14:22:47.000Z",
            "author": {
                "name": "timmhayes",
                "url": "https://github.com/timmhayes"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18301034?u=6a537d5456c904e3b674aeaaf91dca3ab34f042f&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/WebAssembly/memory64/blob/main/proposals/memory64/Overview.md\">https://github.com/WebAssembly/memory64/blob/main/proposals/memory64/Overview.md</a></p>\n<p dir=\"auto\">Seems to be done in Chrome (V8), Firefox.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6799",
            "title": "Add Memory64 browser feature",
            "date_modified": "2023-08-19T18:10:25.000Z",
            "date_published": "2023-08-14T08:20:04.000Z",
            "author": {
                "name": "AGraber",
                "url": "https://github.com/AGraber"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/378375?u=a6567c93c92392d74ca0dfaa4ca1124f223090d3&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Spec: <a href=\"https://drafts.csswg.org/css-variables-2/#variable-units\" rel=\"nofollow\">https://drafts.csswg.org/css-variables-2/#variable-units</a></p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6792",
            "title": "Add variable units",
            "date_modified": "2023-08-19T18:08:27.000Z",
            "date_published": "2023-08-05T12:38:16.000Z",
            "author": {
                "name": "dpk",
                "url": "https://github.com/dpk"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5131513?u=9c8c6b27565acddaba9b02f6ed26a19f79e35ebd&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">I need to know which browsers/version support modules in service workers. Chrome does, but it seems like Firefox does not.</p>\n<p dir=\"auto\">Background: I use Svelte and SvelteKit. They give an example service-worker.js file, but specify that the example will only work in a browser that supports modules in service workers.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6786",
            "title": "modules in service workers",
            "date_modified": "2023-08-19T18:06:09.000Z",
            "date_published": "2023-07-16T11:45:11.000Z",
            "author": {
                "name": "johndeighan",
                "url": "https://github.com/johndeighan"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2968077?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">ASTC is a hardware compression format for textures in WebGPU and WebGL.</p>\n<p dir=\"auto\">The problem is that it is implemented in hardware which is kinda orhtogonal to the browser version. Not sure if it can be added at all.</p>\n<p dir=\"auto\">But anyway to track it you'll need to create webgl2 context, request an extension called <code class=\"notranslate\">WEBGL_compressed_texture_astc</code>, and then call <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_compressed_texture_astc/getSupportedProfiles\" rel=\"nofollow\"><code class=\"notranslate\">getSupportedProfiles()</code></a> on the extension. It will return an array with one or two strings. One of which will probably be \"ldr\", and another \"hdr\". So if hdr is present - it means that hdr profile is supported.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6780",
            "title": "Add tracking for ASTC hdr profile",
            "date_modified": "2023-08-19T18:01:42.000Z",
            "date_published": "2023-07-07T13:36:48.000Z",
            "author": {
                "name": "mixtur",
                "url": "https://github.com/mixtur"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/22725671?u=eb52d0f2d4c07b9e1825e861be2ff50abeefdf8b&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">According to the spec, <code class=\"notranslate\">new Intl.DateTimeFormat().resolvedOptions()</code> should return an object with <code class=\"notranslate\">hour12</code> in it.<br>\nBut this is unset in all browsers.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/22725671/251476664-a375cbbb-9b08-4492-8c9f-96da5eb75cfc.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDM4NjIzODIsIm5iZiI6MTcwMzg2MjA4MiwicGF0aCI6Ii8yMjcyNTY3MS8yNTE0NzY2NjQtYTM3NWNiYmItOWIwOC00NDkyLThjOWYtOTZkYTVlYjc1Y2ZjLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyMzEyMjklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjMxMjI5VDE1MDEyMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTEwNDdlMTljNWJkNzg3ZDAxYjc2Nzk0NzY5NmFhMzZiN2M2MWI3MDAyNzM1ZWE5N2FkZTdlMWRiODQ1MDAzMjAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.lX5xoZo-skDDtWQjN2s3ta3kox5xRu-lzKHSklzPHRI\"><img src=\"https://private-user-images.githubusercontent.com/22725671/251476664-a375cbbb-9b08-4492-8c9f-96da5eb75cfc.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MDM4NjIzODIsIm5iZiI6MTcwMzg2MjA4MiwicGF0aCI6Ii8yMjcyNTY3MS8yNTE0NzY2NjQtYTM3NWNiYmItOWIwOC00NDkyLThjOWYtOTZkYTVlYjc1Y2ZjLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyMzEyMjklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjMxMjI5VDE1MDEyMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTEwNDdlMTljNWJkNzg3ZDAxYjc2Nzk0NzY5NmFhMzZiN2M2MWI3MDAyNzM1ZWE5N2FkZTdlMWRiODQ1MDAzMjAmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.lX5xoZo-skDDtWQjN2s3ta3kox5xRu-lzKHSklzPHRI\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Should we add a section about this in caniuse?</p>\n<p dir=\"auto\">Cf <a href=\"https://twitter.com/BenJ_Ayc0/status/1669609549622394880?s=20\" rel=\"nofollow\">https://twitter.com/BenJ_Ayc0/status/1669609549622394880?s=20</a></p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6779",
            "title": "Add `new Intl.DateTimeFormat().resolvedOptions().hour12`",
            "date_modified": "2023-08-19T18:01:27.000Z",
            "date_published": "2023-07-06T14:09:52.000Z",
            "author": {
                "name": "Ayc0",
                "url": "https://github.com/Ayc0"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1171825?u=4cc10c3a6461b31bb363107df943844c8c839771&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><strong>status:</strong> <code class=\"notranslate\">wd</code></p>\n<p dir=\"auto\"><strong>description:</strong></p>\n<blockquote>\n<p dir=\"auto\">When applied to a <a href=\"https://drafts.csswg.org/css-display-4/#block-container\" rel=\"nofollow\">block container</a> that establishes an <a href=\"https://drafts.csswg.org/css-display-4/#inline-formatting-context\" rel=\"nofollow\">inline formatting context</a>, specifies the UA should bias for better layout over speed, and is expected to consider multiple lines, when making break decisions. Otherwise equivalent to <a href=\"https://drafts.csswg.org/css-text-4/#valdef-text-wrap-wrap\" rel=\"nofollow\">wrap</a>,</p>\n</blockquote>\n<p dir=\"auto\"><strong>links:</strong></p>\n<ol dir=\"auto\">\n<li><a href=\"https://www.w3.org/TR/css-text-4/#valdef-text-wrap-pretty\" rel=\"nofollow\">working draft</a></li>\n<li><a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1432798\" rel=\"nofollow\">chrome support bug</a></li>\n<li><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=630181\" rel=\"nofollow\">firefox support bug</a></li>\n</ol>",
            "url": "https://github.com/Fyrd/caniuse/issues/6776",
            "title": "Add text-wrap: pretty",
            "date_modified": "2023-08-19T18:00:27.000Z",
            "date_published": "2023-07-05T16:50:25.000Z",
            "author": {
                "name": "danini-the-panini",
                "url": "https://github.com/danini-the-panini"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/64932474?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">HDR image support is growing on the web and it will be important to understand which browsers and how widespread support is for HDR images.</p>\n<p dir=\"auto\">Chrome Canary (on desktop and Android 14) now offer support for a gain map standard for HDR images as \"<strong>Ultra HDR JPG</strong>\". This format includes a secondary image and metadata to allow a single file to display in an optimal way on both SDR (standard dynamic rang) and HDR (high dynamic range) displays.  <a href=\"https://developer.android.com/guide/topics/media/hdr-image-format\" rel=\"nofollow\">https://developer.android.com/guide/topics/media/hdr-image-format</a><br>\nAdobe has published sample JPG gain map images at <a href=\"https://helpx.adobe.com/camera-raw/using/gain-map.html\" rel=\"nofollow\">https://helpx.adobe.com/camera-raw/using/gain-map.html</a></p>\n<p dir=\"auto\">This format is inherently backwards compatible with any browser which supports JPG, but only one which supports both HDR and the new gain map standard will be able to properly display the HDR content. I would propose tracking a list of browsers which properly interpret the gain map.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6759",
            "title": "Add tracking for \"Ultra HDR JPG\"",
            "date_modified": "2023-08-19T17:59:38.000Z",
            "date_published": "2023-06-16T22:26:57.000Z",
            "author": {
                "name": "gregbenz",
                "url": "https://github.com/gregbenz"
            }
        }
    ]
}