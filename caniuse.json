{
    "version": "https://jsonfeed.org/version/1",
    "title": "Fyrd/caniuse Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/caniuse.json",
    "feed_url": "https://azu.github.io/github-search-rss/caniuse.json",
    "description": "Fyrd/caniuse Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2644614?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1869035304\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/csswg-drafts/issues/9251\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/w3c/csswg-drafts/pull/9251/hovercard\" href=\"https://github.com/w3c/csswg-drafts/pull/9251\">w3c/csswg-drafts#9251</a></li>\n<li><a href=\"https://botsin.space/@intenttoship/110987203053231471\" rel=\"nofollow\">https://botsin.space/@intenttoship/110987203053231471</a></li>\n<li>Chrome: Intent to prototype: <a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/cA-cmgrA_QE/m/6uF_LYq4AAAJ\" rel=\"nofollow\">https://groups.google.com/a/chromium.org/g/blink-dev/c/cA-cmgrA_QE/m/6uF_LYq4AAAJ</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1809167033\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mozilla/standards-positions/issues/849\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mozilla/standards-positions/issues/849/hovercard\" href=\"https://github.com/mozilla/standards-positions/issues/849\">mozilla/standards-positions#849</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1809178637\" data-permission-text=\"Title is private\" data-url=\"https://github.com/WebKit/standards-positions/issues/231\" data-hovercard-type=\"issue\" data-hovercard-url=\"/WebKit/standards-positions/issues/231/hovercard\" href=\"https://github.com/WebKit/standards-positions/issues/231\">WebKit/standards-positions#231</a></li>\n</ul>",
            "url": "https://github.com/Fyrd/caniuse/issues/6818",
            "title": "Add CSS `form-sizing`",
            "date_modified": "2023-09-28T17:42:30.000Z",
            "date_published": "2023-09-01T07:29:08.000Z",
            "author": {
                "name": "Schweinepriester",
                "url": "https://github.com/Schweinepriester"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/6459309?u=812e983886561a6c2a3d5cb9ec70e7fc1300c3d6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Opus has an <a href=\"https://opus-codec.org/docs/opus_in_isobmff.html\" rel=\"nofollow\">ISOBMFF (MP4) encapsulation</a> defined in 2016. There may be differences in supporting the base Ogg format, in WebM container, and in the MP4/M4A container. MP4 can reasonably used in the &lt;audio&gt; tag: M4A/AAC files are an example.</p>\n<p dir=\"auto\">I know that Opus WebM with up to 2 channels is okay in safari, but Opus Ogg is not okay in Safari at all.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6805",
            "title": "Opus: Need data for MP4 and WebM containers",
            "date_modified": "2023-08-19T18:14:41.000Z",
            "date_published": "2023-08-18T08:04:20.000Z",
            "author": {
                "name": "Artoria2e5",
                "url": "https://github.com/Artoria2e5"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2784308?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">We already have the <a href=\"https://github.com/Fyrd/caniuse/blob/main/features-json/font-variant-alternates.json\"><code class=\"notranslate\">font-variant-alternates</code></a> property, but the <code class=\"notranslate\">@font-feature-values</code> associated with it is missing. In CSS, the two need to work together.</p>\n<ul dir=\"auto\">\n<li>Safari 16.2 <a href=\"https://webkit.org/blog/13591/webkit-features-in-safari-16-2/#:~:text=Interop%202022%20score.-,font%20features,-Safari%2016.2%20adds\" rel=\"nofollow\">https://webkit.org/blog/13591/webkit-features-in-safari-16-2/#:~:text=Interop%202022%20score.-,font%20features,-Safari%2016.2%20adds</a></li>\n<li>Chrome 111 <a href=\"https://chromestatus.com/feature/5070560260784128\" rel=\"nofollow\">https://chromestatus.com/feature/5070560260784128</a></li>\n<li>Firefox 34 <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=975744\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=975744</a></li>\n<li>Demo: <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-alternates#examples\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant-alternates#examples</a></li>\n</ul>",
            "url": "https://github.com/Fyrd/caniuse/issues/6804",
            "title": "Add `@font-feature-values`",
            "date_modified": "2023-08-19T18:14:32.000Z",
            "date_published": "2023-08-18T06:51:56.000Z",
            "author": {
                "name": "yisibl",
                "url": "https://github.com/yisibl"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/376895?u=72be7f23ca11de60505428efaf103a9e115cfb17&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">The @starting-style rule will be shipping with Chrome 117 stable next month and will be tremendously helpful against a minor but irritating CSS headache. It will finally allow you to use CSS transitions with elements that are going to or from display:none. No more hacks needed!</p>\n<p dir=\"auto\">Spec: <a href=\"https://drafts.csswg.org/css-transitions-2/#defining-before-change-style-the-starting-style-rule\" rel=\"nofollow\">https://drafts.csswg.org/css-transitions-2/#defining-before-change-style-the-starting-style-rule</a><br>\nChrome notes: <a href=\"https://chromestatus.com/feature/4515377717968896\" rel=\"nofollow\">https://chromestatus.com/feature/4515377717968896</a><br>\nExample1: <a href=\"https://www.bram.us/2023/05/24/the-yellow-fade-technique-with-modern-css-using-starting-style/\" rel=\"nofollow\">https://www.bram.us/2023/05/24/the-yellow-fade-technique-with-modern-css-using-starting-style/</a><br>\nExample2: <a href=\"https://codepen.io/callmetimm/pen/ExOqbBe\" rel=\"nofollow\">https://codepen.io/callmetimm/pen/ExOqbBe</a></p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6800",
            "title": "Add support for @starting-style rule",
            "date_modified": "2023-09-18T12:32:13.000Z",
            "date_published": "2023-08-14T14:22:47.000Z",
            "author": {
                "name": "timmhayes",
                "url": "https://github.com/timmhayes"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18301034?u=6a537d5456c904e3b674aeaaf91dca3ab34f042f&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/WebAssembly/memory64/blob/main/proposals/memory64/Overview.md\">https://github.com/WebAssembly/memory64/blob/main/proposals/memory64/Overview.md</a></p>\n<p dir=\"auto\">Seems to be done in Chrome (V8), Firefox.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6799",
            "title": "Add Memory64 browser feature",
            "date_modified": "2023-08-19T18:10:25.000Z",
            "date_published": "2023-08-14T08:20:04.000Z",
            "author": {
                "name": "AGraber",
                "url": "https://github.com/AGraber"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/378375?u=153c817e485fee5c09a8f12c846e190e59905b8f&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Spec: <a href=\"https://drafts.csswg.org/css-variables-2/#variable-units\" rel=\"nofollow\">https://drafts.csswg.org/css-variables-2/#variable-units</a></p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6792",
            "title": "Add variable units",
            "date_modified": "2023-08-19T18:08:27.000Z",
            "date_published": "2023-08-05T12:38:16.000Z",
            "author": {
                "name": "dpk",
                "url": "https://github.com/dpk"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5131513?u=9c8c6b27565acddaba9b02f6ed26a19f79e35ebd&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">I need to know which browsers/version support modules in service workers. Chrome does, but it seems like Firefox does not.</p>\n<p dir=\"auto\">Background: I use Svelte and SvelteKit. They give an example service-worker.js file, but specify that the example will only work in a browser that supports modules in service workers.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6786",
            "title": "modules in service workers",
            "date_modified": "2023-08-19T18:06:09.000Z",
            "date_published": "2023-07-16T11:45:11.000Z",
            "author": {
                "name": "johndeighan",
                "url": "https://github.com/johndeighan"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2968077?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">ASTC is a hardware compression format for textures in WebGPU and WebGL.</p>\n<p dir=\"auto\">The problem is that it is implemented in hardware which is kinda orhtogonal to the browser version. Not sure if it can be added at all.</p>\n<p dir=\"auto\">But anyway to track it you'll need to create webgl2 context, request an extension called <code class=\"notranslate\">WEBGL_compressed_texture_astc</code>, and then call <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/WEBGL_compressed_texture_astc/getSupportedProfiles\" rel=\"nofollow\"><code class=\"notranslate\">getSupportedProfiles()</code></a> on the extension. It will return an array with one or two strings. One of which will probably be \"ldr\", and another \"hdr\". So if hdr is present - it means that hdr profile is supported.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6780",
            "title": "Add tracking for ASTC hdr profile",
            "date_modified": "2023-08-19T18:01:42.000Z",
            "date_published": "2023-07-07T13:36:48.000Z",
            "author": {
                "name": "mixtur",
                "url": "https://github.com/mixtur"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/22725671?u=eb52d0f2d4c07b9e1825e861be2ff50abeefdf8b&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">According to the spec, <code class=\"notranslate\">new Intl.DateTimeFormat().resolvedOptions()</code> should return an object with <code class=\"notranslate\">hour12</code> in it.<br>\nBut this is unset in all browsers.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/22725671/251476664-a375cbbb-9b08-4492-8c9f-96da5eb75cfc.png\"><img src=\"https://user-images.githubusercontent.com/22725671/251476664-a375cbbb-9b08-4492-8c9f-96da5eb75cfc.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Should we add a section about this in caniuse?</p>\n<p dir=\"auto\">Cf <a href=\"https://twitter.com/BenJ_Ayc0/status/1669609549622394880?s=20\" rel=\"nofollow\">https://twitter.com/BenJ_Ayc0/status/1669609549622394880?s=20</a></p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6779",
            "title": "Add `new Intl.DateTimeFormat().resolvedOptions().hour12`",
            "date_modified": "2023-08-19T18:01:27.000Z",
            "date_published": "2023-07-06T14:09:52.000Z",
            "author": {
                "name": "Ayc0",
                "url": "https://github.com/Ayc0"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1171825?u=4cc10c3a6461b31bb363107df943844c8c839771&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><strong>status:</strong> <code class=\"notranslate\">wd</code></p>\n<p dir=\"auto\"><strong>description:</strong></p>\n<blockquote>\n<p dir=\"auto\">When applied to a <a href=\"https://drafts.csswg.org/css-display-4/#block-container\" rel=\"nofollow\">block container</a> that establishes an <a href=\"https://drafts.csswg.org/css-display-4/#inline-formatting-context\" rel=\"nofollow\">inline formatting context</a>, specifies the UA should bias for better layout over speed, and is expected to consider multiple lines, when making break decisions. Otherwise equivalent to <a href=\"https://drafts.csswg.org/css-text-4/#valdef-text-wrap-wrap\" rel=\"nofollow\">wrap</a>,</p>\n</blockquote>\n<p dir=\"auto\"><strong>links:</strong></p>\n<ol dir=\"auto\">\n<li><a href=\"https://www.w3.org/TR/css-text-4/#valdef-text-wrap-pretty\" rel=\"nofollow\">working draft</a></li>\n<li><a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1432798\" rel=\"nofollow\">chrome support bug</a></li>\n<li><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=630181\" rel=\"nofollow\">firefox support bug</a></li>\n</ol>",
            "url": "https://github.com/Fyrd/caniuse/issues/6776",
            "title": "Add text-wrap: pretty",
            "date_modified": "2023-08-19T18:00:27.000Z",
            "date_published": "2023-07-05T16:50:25.000Z",
            "author": {
                "name": "danini-the-panini",
                "url": "https://github.com/danini-the-panini"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/64932474?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">HDR image support is growing on the web and it will be important to understand which browsers and how widespread support is for HDR images.</p>\n<p dir=\"auto\">Chrome Canary (on desktop and Android 14) now offer support for a gain map standard for HDR images as \"<strong>Ultra HDR JPG</strong>\". This format includes a secondary image and metadata to allow a single file to display in an optimal way on both SDR (standard dynamic rang) and HDR (high dynamic range) displays.  <a href=\"https://developer.android.com/guide/topics/media/hdr-image-format\" rel=\"nofollow\">https://developer.android.com/guide/topics/media/hdr-image-format</a><br>\nAdobe has published sample JPG gain map images at <a href=\"https://helpx.adobe.com/camera-raw/using/gain-map.html\" rel=\"nofollow\">https://helpx.adobe.com/camera-raw/using/gain-map.html</a></p>\n<p dir=\"auto\">This format is inherently backwards compatible with any browser which supports JPG, but only one which supports both HDR and the new gain map standard will be able to properly display the HDR content. I would propose tracking a list of browsers which properly interpret the gain map.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6759",
            "title": "Add tracking for \"Ultra HDR JPG\"",
            "date_modified": "2023-08-19T17:59:38.000Z",
            "date_published": "2023-06-16T22:26:57.000Z",
            "author": {
                "name": "gregbenz",
                "url": "https://github.com/gregbenz"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2644614?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><ul dir=\"auto\">\n<li>Spec: <a href=\"https://url.spec.whatwg.org/#dom-url-canparse\" rel=\"nofollow\">https://url.spec.whatwg.org/#dom-url-canparse</a></li>\n<li>Firefox:\n<ul dir=\"auto\">\n<li><a href=\"https://twitter.com/intenttoship/status/1664044932946882561\" rel=\"nofollow\">https://twitter.com/intenttoship/status/1664044932946882561</a></li>\n<li><a href=\"https://groups.google.com/a/mozilla.org/g/dev-platform/c/BWLpi4dqZOE/m/v8-T7FYlAwAJ\" rel=\"nofollow\">https://groups.google.com/a/mozilla.org/g/dev-platform/c/BWLpi4dqZOE/m/v8-T7FYlAwAJ</a></li>\n</ul>\n</li>\n<li>Safari:\n<ul dir=\"auto\">\n<li>\"Shipped in Safari TP 168\"</li>\n<li>Shipping in Safari 17: <a href=\"https://developer.apple.com/documentation/safari-release-notes/safari-17-release-notes\" rel=\"nofollow\">https://developer.apple.com/documentation/safari-release-notes/safari-17-release-notes</a>\n<blockquote>\n<p dir=\"auto\">Added support for URL.canParse(). (106934916)</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>Chrome: <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1425839\" rel=\"nofollow\">https://bugs.chromium.org/p/chromium/issues/detail?id=1425839</a></li>\n</ul>\n<p dir=\"auto\">Likely to come via MDN, I feel like.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6740",
            "title": "Add URL.canParse()",
            "date_modified": "2023-09-02T13:22:25.000Z",
            "date_published": "2023-06-05T22:57:12.000Z",
            "author": {
                "name": "Schweinepriester",
                "url": "https://github.com/Schweinepriester"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/54318714?u=5f4cf6e431d927932ac212b930ee87d0d9ce5576&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h1 dir=\"auto\">ES Pipe operator (|&gt;)</h1>\n<h2 dir=\"auto\">Introduction</h2>\n<p dir=\"auto\">The proposed ES Pipe Operator in 2021 is (as of writing, 6/3/23) in Stage 2 Draft, and is available for experimental usage.<br>\n<a href=\"https://tc39.es/proposal-pipeline-operator/\" rel=\"nofollow\">https://tc39.es/proposal-pipeline-operator/</a></p>\n<h2 dir=\"auto\">Argument for Support</h2>\n<p dir=\"auto\">This proposal is the second most starred proposal (second to the repository listing all of the proposal statuses -- so I consider it the top-most starred proposal. Based on the following search for ECMA proposals: <a href=\"https://github.com/orgs/tc39/repositories?q=proposal-&amp;type=all&amp;language=&amp;sort=stargazers\">https://github.com/orgs/tc39/repositories?q=proposal-&amp;type=all&amp;language=&amp;sort=stargazers</a>).</p>\n<p dir=\"auto\">As of writing this (6/3/23), the proposal has 6,996 stars: <a href=\"https://github.com/tc39/proposal-pipeline-operator\">https://github.com/tc39/proposal-pipeline-operator</a></p>\n<p dir=\"auto\">I believe there is enough interest in this (currently experimental) functionality that it warrants tracking its support across different browsers, as <em>Can I Use?</em> does.</p>\n<h2 dir=\"auto\">Related existing case</h2>\n<p dir=\"auto\">Functionality: Optional chaining operator (?.)<br>\nVisible at: <a href=\"https://caniuse.com/?search=optional%20chaining\" rel=\"nofollow\">https://caniuse.com/?search=optional%20chaining</a><br>\nProposal: <a href=\"https://github.com/tc39/proposal-optional-chaining\">https://github.com/tc39/proposal-optional-chaining</a><br>\nStars: 4,965</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6735",
            "title": "Support Experimental \"ES Pipe Operator (|>)\"",
            "date_modified": "2023-06-09T16:45:23.000Z",
            "date_published": "2023-06-03T17:37:12.000Z",
            "author": {
                "name": "lcpichette",
                "url": "https://github.com/lcpichette"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67234356?u=102884bd1307dd93c19b14e0653eaf1bbcdbaaa3&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Now allowed by Chrome and other major browsers, DoH greatly increases the security and privacy. Cloudflare and other major DNS services already offer DoH servers that can be used on browsers as preset drop-down choices.</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6732",
            "title": "DNS-over-HTTPS (DoH)",
            "date_modified": "2023-06-09T16:43:06.000Z",
            "date_published": "2023-06-01T01:36:13.000Z",
            "author": {
                "name": "beatquantum",
                "url": "https://github.com/beatquantum"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/53049?u=58cff116733c11c9ecc8ece860e6fc811e677b61&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a href=\"https://github.com/WebAssembly/gc\">https://github.com/WebAssembly/gc</a><br>\n<a href=\"https://chromestatus.com/feature/6062715726462976\" rel=\"nofollow\">https://chromestatus.com/feature/6062715726462976</a><br>\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1774825\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1774825</a></p>\n<p dir=\"auto\">High-level languages that will make use of this proposal inlude Kotlin [1] and Dart (Flutter) [2]. Probably others as well.</p>\n<p dir=\"auto\">[1] <a href=\"https://kotlinlang.org/docs/wasm-overview.html\" rel=\"nofollow\">https://kotlinlang.org/docs/wasm-overview.html</a><br>\n[2] <a href=\"https://docs.flutter.dev/platform-integration/web/wasm\" rel=\"nofollow\">https://docs.flutter.dev/platform-integration/web/wasm</a></p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6723",
            "title": "Add: Webassembly Garbage Collection",
            "date_modified": "2023-06-09T16:39:24.000Z",
            "date_published": "2023-05-26T19:55:23.000Z",
            "author": {
                "name": "rocketraman",
                "url": "https://github.com/rocketraman"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1759620?u=4c0d2f551cd07721210441d94817a7e3ad3f8560&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">The passwordrules attribute can be used to customize passwords generated by password managers to ensure they meet a site's requirements. It has been supported in Safari since 2018.</p>\n<p dir=\"auto\"><a href=\"https://developer.apple.com/password-rules/\" rel=\"nofollow\">https://developer.apple.com/password-rules/</a></p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6705",
            "title": "Add support for passwordrules input attribute",
            "date_modified": "2023-06-09T16:25:58.000Z",
            "date_published": "2023-05-10T21:54:12.000Z",
            "author": {
                "name": "ericestes",
                "url": "https://github.com/ericestes"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2644614?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><ul dir=\"auto\">\n<li><a href=\"https://w3c.github.io/webdriver-bidi/\" rel=\"nofollow\">https://w3c.github.io/webdriver-bidi/</a></li>\n<li><a href=\"https://github.com/w3c/webdriver-bidi\">https://github.com/w3c/webdriver-bidi</a></li>\n<li><a href=\"https://developer.chrome.com/articles/webdriver-bidi/\" rel=\"nofollow\">https://developer.chrome.com/articles/webdriver-bidi/</a></li>\n</ul>\n<p dir=\"auto\">(Not the same as WebDriver via <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"173526877\" data-permission-text=\"Title is private\" data-url=\"https://github.com/Fyrd/caniuse/issues/2757\" data-hovercard-type=\"issue\" data-hovercard-url=\"/Fyrd/caniuse/issues/2757/hovercard\" href=\"https://github.com/Fyrd/caniuse/issues/2757\">#2757</a>)</p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6687",
            "title": "Add WebDriver BiDi",
            "date_modified": "2023-06-09T02:52:42.000Z",
            "date_published": "2023-04-19T15:47:16.000Z",
            "author": {
                "name": "Schweinepriester",
                "url": "https://github.com/Schweinepriester"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5255292?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">On <a href=\"https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/r\" rel=\"nofollow\">MDN</a>, it reads:</p>\n<blockquote>\n<p dir=\"auto\">Note: Starting with SVG2, <code class=\"notranslate\">r</code> is a Geometry Property meaning this attribute can also be used as a CSS property for circles.</p>\n</blockquote>\n<p dir=\"auto\">This already works on latest Chromium/Edge/Firefox.</p>\n<p dir=\"auto\">Related: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"75456054\" data-permission-text=\"Title is private\" data-url=\"https://github.com/Fyrd/caniuse/issues/1143\" data-hovercard-type=\"issue\" data-hovercard-url=\"/Fyrd/caniuse/issues/1143/hovercard\" href=\"https://github.com/Fyrd/caniuse/issues/1143\">#1143</a></p>",
            "url": "https://github.com/Fyrd/caniuse/issues/6680",
            "title": "Support for Geometry Property (SVG 2.0) `r` in CSS",
            "date_modified": "2023-04-19T04:33:50.000Z",
            "date_published": "2023-04-13T06:50:12.000Z",
            "author": {
                "name": "danvim",
                "url": "https://github.com/danvim"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/946421?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>",
            "url": "https://github.com/Fyrd/caniuse/issues/6678",
            "title": "List support for HTTP/2's PUSH_PROMISE frame",
            "date_modified": "2023-04-19T04:35:17.000Z",
            "date_published": "2023-04-10T05:33:32.000Z",
            "author": {
                "name": "KingMob",
                "url": "https://github.com/KingMob"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/29130894?u=87a72a6f6f3c619a66619f2c5b4290e586af449f&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">\"<a href=\"https://github.com/tc39/proposal-change-array-by-copy\">Change Array by Copy</a>\" is a <a href=\"https://tc39.es/process-document/\" rel=\"nofollow\">stage 4 proposal</a>, which means it's ready to come out in the next edition of the ECMAScript standard and is in the current draft. It brings along four new methods for <code class=\"notranslate\">Array.prototype</code>:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">Array.prototype.toReversed() -&gt; Array</code>, returns a reversed version of a shallow copy of the array, leaving the original array intact</li>\n<li><code class=\"notranslate\">Array.prototype.toSorted(compareFn) -&gt; Array</code>, returns a sorted version of a shallow copy of the array, leaving the original array intact</li>\n<li><code class=\"notranslate\">Array.prototype.toSpliced(start, deleteCount, ...items) -&gt; Array</code>, returns a spliced version of a shallow copy of the array, leaving the original array intact</li>\n<li><code class=\"notranslate\">Array.prototype.with(index, value) -&gt; Array</code>, returns a version of a shallow copy of the array, modified at the specific index, leaving the original array intact</li>\n</ul>\n<p dir=\"auto\">as well as three new methods for <code class=\"notranslate\">TypedArray.prototype</code>:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">TypedArray.prototype.toReversed() -&gt; TypedArray</code>, see above</li>\n<li><code class=\"notranslate\">TypedArray.prototype.toSorted(compareFn) -&gt; TypedArray</code>, see above</li>\n<li><code class=\"notranslate\">TypedArray.prototype.with(index, value) -&gt; TypedArray</code>, see above</li>\n</ul>\n<p dir=\"auto\">According to their README.md, it has the following implementations</p>\n<blockquote>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1729563\" rel=\"nofollow\">Firefox/SpiderMonkey</a>, currently flagged</p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://bugs.webkit.org/show_bug.cgi?id=234604\" rel=\"nofollow\">Safari/JavaScriptCore</a>, shipping unflagged since <a href=\"https://developer.apple.com/safari/technology-preview/release-notes/#:~:text=bug%20tracker.-,Release%20146,-Note%3A%20Tab\" rel=\"nofollow\">Safari Tech Preview 146</a></p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://bugs.chromium.org/p/v8/issues/detail?id=12764\" rel=\"nofollow\">Chrome/V8</a>, shipping unflagged since Chrome 110</p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/SerenityOS/serenity/issues/16353\" data-hovercard-type=\"issue\" data-hovercard-url=\"/SerenityOS/serenity/issues/16353/hovercard\">Ladybird/LibJS</a>, shipping unflagged</p>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/zloirock/core-js\">core-js</a></p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/zloirock/core-js#change-array-by-copy\">change-array-by-copy</a></li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"https://github.com/es-shims\">es-shims</a>:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://www.npmjs.com/package/array.prototype.tosorted\" rel=\"nofollow\"><code class=\"notranslate\">array.prototype.tosorted</code></a></li>\n<li><a href=\"https://www.npmjs.com/package/array.prototype.toreversed\" rel=\"nofollow\"><code class=\"notranslate\">array.prototype.toreversed</code></a></li>\n<li><a href=\"https://www.npmjs.com/package/array.prototype.tospliced\" rel=\"nofollow\"><code class=\"notranslate\">array.prototype.tospliced</code></a></li>\n<li><a href=\"https://www.npmjs.com/package/array.prototype.with\" rel=\"nofollow\"><code class=\"notranslate\">array.prototype.with</code></a></li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\"><a href=\"./polyfill.js\">./polyfill.js</a> (minimalist reference implementation)</p>\n</li>\n</ul>\n</blockquote>",
            "url": "https://github.com/Fyrd/caniuse/issues/6670",
            "title": "Add Change Array by Copy methods",
            "date_modified": "2023-04-19T04:35:16.000Z",
            "date_published": "2023-04-06T02:54:52.000Z",
            "author": {
                "name": "Samathingamajig",
                "url": "https://github.com/Samathingamajig"
            }
        }
    ]
}