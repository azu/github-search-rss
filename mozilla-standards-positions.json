{
    "version": "https://jsonfeed.org/version/1",
    "title": "mozilla/standards-positions Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/mozilla-standards-positions.json",
    "feed_url": "https://azu.github.io/github-search-rss/mozilla-standards-positions.json",
    "description": "mozilla/standards-positions Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/248721?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: CSS Display Level 3 (but specifically a question about focusability of display: contents)</li>\n<li>Specification or proposal URL (if available): <a href=\"https://drafts.csswg.org/css-display-3/#box-generation\" rel=\"nofollow\">https://drafts.csswg.org/css-display-3/#box-generation</a> and the discussion in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"319007949\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/csswg-drafts/issues/2632\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/csswg-drafts/issues/2632/hovercard\" href=\"https://github.com/w3c/csswg-drafts/issues/2632\">w3c/csswg-drafts#2632</a></li>\n<li>Explainer URL (if available): none</li>\n<li>Caniuse.com URL (optional): <a href=\"https://caniuse.com/css-display-contents\" rel=\"nofollow\">https://caniuse.com/css-display-contents</a> (note particularly the footnotes that reference bugs on this topic!)</li>\n<li>Bugzilla URL (optional): <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1553549\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1553549</a> and <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1791648\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1791648</a></li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/emilio/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/emilio\">@emilio</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">The discussion in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"319007949\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/csswg-drafts/issues/2632\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/csswg-drafts/issues/2632/hovercard\" href=\"https://github.com/w3c/csswg-drafts/issues/2632\">w3c/csswg-drafts#2632</a> concluded with the spec editors saying that existing specifications require that display:contents elements are focusable just as other elements are, and that no spec changes were needed.  (However, this requires some amount of analysis to determine.)</p>\n<p dir=\"auto\">This conclusion disagrees with behavior that is currently interoperable between browsers.  However, I think this interoperable behavior is problematic (and the issue conclusion was correct) because elements with display:contents are exposed to assistive technology as having their normal roles, and the contract for the meaning of accessibility roles includes support for certain role-specific keyboard interactions which often include focusability.  So I think it's important that the exposure to AT (as agreed in the CSSWG in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"299867471\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/csswg-drafts/issues/2355\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/csswg-drafts/issues/2355/hovercard\" href=\"https://github.com/w3c/csswg-drafts/issues/2355\">w3c/csswg-drafts#2355</a>) match the focusability, which it currently does not.</p>\n<p dir=\"auto\">This issue is currently covered by:<br>\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1553549\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1553549</a><br>\n<a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1791648\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1791648</a><br>\n<a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1366037\" rel=\"nofollow\">https://bugs.chromium.org/p/chromium/issues/detail?id=1366037</a><br>\n<a href=\"https://bugs.webkit.org/show_bug.cgi?id=255149\" rel=\"nofollow\">https://bugs.webkit.org/show_bug.cgi?id=255149</a></p>\n<p dir=\"auto\">I also have a draft Chromium CL to fix this in Chromium (and match what the spec editors believe the specs require):<br>\n<a href=\"https://chromium-review.googlesource.com/c/chromium/src/+/3910374\" rel=\"nofollow\">https://chromium-review.googlesource.com/c/chromium/src/+/3910374</a><br>\nwhich has an automatically-generated PR to WPT that will be merged when/if it lands:<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1644073577\" data-permission-text=\"Title is private\" data-url=\"https://github.com/web-platform-tests/wpt/issues/39247\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/web-platform-tests/wpt/pull/39247/hovercard\" href=\"https://github.com/web-platform-tests/wpt/pull/39247\">web-platform-tests/wpt#39247</a></p>\n<p dir=\"auto\">I think landing this Chromium CL is the right thing to do -- I think the inconsistency between keyboard behavior and what is exposed to assistive technology should be fixed, as I described in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"319007949\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/csswg-drafts/issues/2632\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/csswg-drafts/issues/2632/hovercard?comment_id=1497976046&amp;comment_type=issue_comment\" href=\"https://github.com/w3c/csswg-drafts/issues/2632#issuecomment-1497976046\">w3c/csswg-drafts#2632 (comment)</a>.  However, my main concern is that I had the feeling from that CSSWG issue and from some of the browser bugs that other implementors might be grudgingly accepting the CSSWG resolution without actually planning to follow it.</p>\n<p dir=\"auto\">This isn't a great situation to be in, so I'm attempting to <em>escalate</em> that situation into the standards-positions process to try and get a clearer understanding of other browser positions before we decide whether or not to change Chromium behavior (which, as I said above, I believe is bad but interoperable).</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/772",
            "title": "Request for Mozilla Position: focusability of elements with display:contents",
            "date_modified": "2023-04-07T14:36:54.000Z",
            "date_published": "2023-04-07T14:36:54.000Z",
            "author": {
                "name": "dbaron",
                "url": "https://github.com/dbaron"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/444165?u=3dc9cb928680e07a7275fb9ccbeaf4b84580a912&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Compression Dictionary Transport</li>\n<li>Specification or proposal URL (if available): <a href=\"https://github.com/WICG/compression-dictionary-transport\">https://github.com/WICG/compression-dictionary-transport</a></li>\n<li>Explainer URL (if available): <a href=\"https://github.com/WICG/compression-dictionary-transport/blob/main/README.md\">https://github.com/WICG/compression-dictionary-transport/blob/main/README.md</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Chrome Status Page: <a href=\"https://chromestatus.com/feature/5124977788977152\" rel=\"nofollow\">https://chromestatus.com/feature/5124977788977152</a><br>\nExample compression gains over Brotli: <a href=\"https://github.com/WICG/compression-dictionary-transport/blob/main/examples.md\">https://github.com/WICG/compression-dictionary-transport/blob/main/examples.md</a></p>\n<p dir=\"auto\">It's still very early in the standards process but it will likely span the IETF HTTP working group and WHATWG HTML and Fetch standards and we wanted to bring the relevant parties together sooner rather than later to hash out the designs.</p>\n<p dir=\"auto\">Compression dictionary transport provides a mechanism for websites to use existing resources in their cache as compression dictionaries for future requests. The key points are:</p>\n<ul dir=\"auto\">\n<li>The compression is currently limited to Brotli but the dictionary negotiation is independent of compression protocol.</li>\n<li>The dictionaries must be same-origin as the resources they compress.</li>\n<li>The dictionaries and resources they are applied to are required to be cors-readable from the document (side-channel timing attacks make them effectively readable so the requirement makes it explicit).</li>\n<li>The dictionaries are existing resources in the partitioned caches and cleared when either caches or cookies are cleared.</li>\n</ul>\n<p dir=\"auto\">The flow as it currently stands is (generally):</p>\n<ul dir=\"auto\">\n<li>Fetch response for a cacheable resource includes a <code class=\"notranslate\">use-as-dictionary:</code> response header that specifies the path matching rules for fetches where the dictionary would be applied (either for different versions of the same js/css/wasm/etc resource or a path spec for html pages where a stand-alone dictionary would be applied).</li>\n<li>Future fetches that match the path of a dictionary in cache send a <code class=\"notranslate\">sec-available-dictionary:</code> request header with the hash of the dictionary with the most specific match for the request. It also includes the dictionary compression algorithms it understands. i.e. <code class=\"notranslate\">Accept-Encoding: sbr,...</code>.</li>\n<li>If the server has the requested resource compressed against the dictionary the client advertised (or if it can generate it dynamically), it returns the dictionary-compressed response along with <code class=\"notranslate\">Content-Encoding: sbr</code> and <code class=\"notranslate\">Vary: Accept-Encoding,Sec-Available-Dictionary</code></li>\n</ul>",
            "url": "https://github.com/mozilla/standards-positions/issues/771",
            "title": "Request for Mozilla Position on Compression dictionary transport",
            "date_modified": "2023-03-30T18:16:56.000Z",
            "date_published": "2023-03-30T18:16:56.000Z",
            "author": {
                "name": "pmeenan",
                "url": "https://github.com/pmeenan"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/9709268?u=42ea20b5c823733fe232fd7aaa667a810f0abbdd&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: FLEDGE API</li>\n<li>Specification or proposal URL (if available): Partial spec is <a href=\"https://wicg.github.io/turtledove/\" rel=\"nofollow\">here</a>, but recommend deferring to the explainer.</li>\n<li>Explainer URL (if available): <a href=\"https://github.com/WICG/turtledove/blob/main/FLEDGE.md\">https://github.com/WICG/turtledove/blob/main/FLEDGE.md</a></li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/martinthomson/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinthomson\">@martinthomson</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Chrome status page: <a href=\"https://chromestatus.com/features/5733583115255808\" rel=\"nofollow\">https://chromestatus.com/features/5733583115255808</a><br>\nWe’ve been working on FLEDGE, a privacy advancing API to facilitate advertising based on showing an ad to a potentially-interested person who has previously interacted with the advertiser or ad network.  Historically this has worked by the advertiser recognizing a specific person as they browse across web sites, a core privacy concern with today's web.  Our effort is about offering a new API to address this advertising use case while offering some key privacy advances:</p>\n<ul dir=\"auto\">\n<li>The user’s browser, not the advertiser, holds the information about what the advertiser thinks a person is interested in.</li>\n<li>Advertisers can serve ads based on an interest, but cannot combine that interest with other information about the person — in particular, with who they are or what page they are visiting.</li>\n<li>Web sites the person visits, and the ad networks those sites use, cannot learn about their visitors' ad interests.</li>\n</ul>\n<p dir=\"auto\">FLEDGE is Chrome's first experiment in this direction.  We are currently conducting an Origin Trial with FLEDGE but are open to evolving the API over time and are appreciative of your feedback.</p>\n<p dir=\"auto\">The FLEDGE explainer calls out certain behaviors as temporary. These are design trade-offs that we have chosen in the interest of having an API available in Chrome and adopted by ad techs as soon as possible, since the API is a key piece of our effort to remove third-party cookies. The most useful feedback and position would probably be focused on the long-term goal, rather than the interim compromises that we've made. We remain happy to hear your thoughts about any part of the design, though.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/770",
            "title": "Request for Mozilla Position: FLEDGE API",
            "date_modified": "2023-03-29T17:18:46.000Z",
            "date_published": "2023-03-29T17:10:03.000Z",
            "author": {
                "name": "JensenPaul",
                "url": "https://github.com/JensenPaul"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/77755715?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on Unsanitized HTML read/write in Async Clipboard API</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Unsanitized HTML read/write in Async Clipboard API</li>\n<li>Specification or proposal URL (if available): <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"931865190\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/clipboard-apis/issues/150\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/clipboard-apis/issues/150/hovercard\" href=\"https://github.com/w3c/clipboard-apis/issues/150\">w3c/clipboard-apis#150</a></li>\n<li>Explainer URL (if available): <a href=\"https://github.com/w3c/editing/blob/gh-pages/docs/clipboard-unsanitized/explainer.md\">https://github.com/w3c/editing/blob/gh-pages/docs/clipboard-unsanitized/explainer.md</a></li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/smaug----/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/smaug----\">@smaug----</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/EdgarChen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EdgarChen\">@EdgarChen</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">There was some discussion around the topic in the issue linked above, but we would like to formally request Mozilla's position on reading and writing unsanitized HTML to and from the clipboard.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/769",
            "title": "Request for Mozilla Position on Unsanitized HTML read/write in Async Clipboard API",
            "date_modified": "2023-03-29T17:26:08.000Z",
            "date_published": "2023-03-29T03:53:36.000Z",
            "author": {
                "name": "anaskim",
                "url": "https://github.com/anaskim"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3453258?u=6bf86df40abb9c20b8dda3e89a4689ac1ebec57b&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: [css-overflow-3] Make <code class=\"notranslate\">overflow: overlay</code> a legacy alias of <code class=\"notranslate\">auto</code></li>\n<li>Specification or proposal URL (if available): <a href=\"https://drafts.csswg.org/css-overflow-3/#valdef-overflow-auto\" rel=\"nofollow\">https://drafts.csswg.org/css-overflow-3/#valdef-overflow-auto</a></li>\n<li>Explainer URL (if available): N/A</li>\n<li>Caniuse.com URL (optional):  N/A</li>\n<li>Bugzilla URL (optional): N/A</li>\n<li>Mozillians who can provide input (optional):</li>\n</ul>\n<p dir=\"auto\">CSSWG resolution here: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1445791393\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/csswg-drafts/issues/8063\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/csswg-drafts/issues/8063/hovercard?comment_id=1431620007&amp;comment_type=issue_comment\" href=\"https://github.com/w3c/csswg-drafts/issues/8063#issuecomment-1431620007\">w3c/csswg-drafts#8063 (comment)</a></p>\n<p dir=\"auto\">The needed work in Gecko is to support <code class=\"notranslate\">overlay</code> as a legacy alias of <code class=\"notranslate\">auto</code>.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/768",
            "title": "overflow:overlay aliases overflow:auto",
            "date_modified": "2023-03-29T22:58:31.000Z",
            "date_published": "2023-03-28T22:50:38.000Z",
            "author": {
                "name": "chrishtr",
                "url": "https://github.com/chrishtr"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/666538?u=14c2d8aa2728dc35c43d93ea02484fbce11b51aa&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Report Critical-CH caused restart in NavigationTiming</li>\n<li>Specification or proposal URL (if available): <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1634042439\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/navigation-timing/issues/188\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/w3c/navigation-timing/pull/188/hovercard\" href=\"https://github.com/w3c/navigation-timing/pull/188\">w3c/navigation-timing#188</a></li>\n<li>WebKit Request for Position: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1644440906\" data-permission-text=\"Title is private\" data-url=\"https://github.com/WebKit/standards-positions/issues/156\" data-hovercard-type=\"issue\" data-hovercard-url=\"/WebKit/standards-positions/issues/156/hovercard\" href=\"https://github.com/WebKit/standards-positions/issues/156\">WebKit/standards-positions#156</a></li>\n<li>Chromoium Intent to Ship: <a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/f28WWMD8HVE\" rel=\"nofollow\">https://groups.google.com/a/chromium.org/g/blink-dev/c/f28WWMD8HVE</a></li>\n<li>Chromium Feature: <a href=\"https://chromestatus.com/feature/5140317616996352\" rel=\"nofollow\">https://chromestatus.com/feature/5140317616996352</a></li>\n<li>Chromium Issue: <a href=\"https://crbug.com/1425910\" rel=\"nofollow\">https://crbug.com/1425910</a></li>\n<li>Tag Review: FYI only <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1656016564\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3ctag/design-reviews/issues/833\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3ctag/design-reviews/issues/833/hovercard\" href=\"https://github.com/w3ctag/design-reviews/issues/833\">w3ctag/design-reviews#833</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Websites can indicate that a particular <a href=\"https://wicg.github.io/client-hints-infrastructure/\" rel=\"nofollow\">Client Hint</a> is critical to the page by including it in a <code class=\"notranslate\">Critical-CH</code> HTTP response header. Doing so will trigger a connection restart if the hint listed in the <code class=\"notranslate\">Critical-CH</code> HTTP response header could be (but wasn’t) included in the HTTP request initially sent. We should indicate this has happened in <a href=\"https://github.com/w3c/navigation-timing\">Navigation Timing</a> so that developers can know if a restart occurred and impacted timing.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/767",
            "title": "Report Critical-CH caused restart in NavigationTiming",
            "date_modified": "2023-04-05T17:24:30.000Z",
            "date_published": "2023-03-28T18:06:58.000Z",
            "author": {
                "name": "arichiv",
                "url": "https://github.com/arichiv"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4560413?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Back/forward cache NotRestoredReasons API</li>\n<li>Explainer URL (if available): <a href=\"https://github.com/rubberyuzu/bfcache-not-retored-reason/blob/main/NotRestoredReason.md\">https://github.com/rubberyuzu/bfcache-not-retored-reason/blob/main/NotRestoredReason.md</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Chromium is doing a trial of this feature as part of PerformanceNavigationTiming API.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/766",
            "title": "Request for Mozilla Position on back/forward cache NotRestoredReasons API",
            "date_modified": "2023-03-29T18:17:04.000Z",
            "date_published": "2023-03-27T06:40:03.000Z",
            "author": {
                "name": "rubberyuzu",
                "url": "https://github.com/rubberyuzu"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/19228318?u=684ff597ddc25e7ca89bb504cfe3b536e6a27dbe&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Media Queries Level 5</li>\n<li>Specification or proposal URL: <a href=\"https://www.w3.org/TR/mediaqueries-5/#scripting\" rel=\"nofollow\">https://www.w3.org/TR/mediaqueries-5/#scripting</a></li>\n<li>Caniuse.com URL: <a href=\"https://caniuse.com/mdn-css_at-rules_media_scripting\" rel=\"nofollow\">https://caniuse.com/mdn-css_at-rules_media_scripting</a></li>\n<li>Bugzilla URL: <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1166581\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1166581</a></li>\n<li>Mozillians who can provide input: <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/emilio/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/emilio\">@emilio</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zcorpan/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zcorpan\">@zcorpan</a> (sorry if wrong!)</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Mostly done and accepted patch: <a href=\"https://phabricator.services.mozilla.com/D172995\" rel=\"nofollow\">https://phabricator.services.mozilla.com/D172995</a><br>\nMore as a formality for intents :)</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/765",
            "title": "Request for Mozilla Position: Scripting media feature",
            "date_modified": "2023-03-27T13:36:07.000Z",
            "date_published": "2023-03-25T09:33:00.000Z",
            "author": {
                "name": "CanadaHonk",
                "url": "https://github.com/CanadaHonk"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/7681467?u=7879f080290271128b3b338fe220869f5abc5864&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Transitions on specified discrete properties</li>\n<li>Specification or proposal URL (if available): <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"510755766\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/csswg-drafts/issues/4441\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/csswg-drafts/issues/4441/hovercard\" href=\"https://github.com/w3c/csswg-drafts/issues/4441\">w3c/csswg-drafts#4441</a></li>\n<li>Explainer URL (if available): <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"510755766\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/csswg-drafts/issues/4441\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/csswg-drafts/issues/4441/hovercard?comment_id=1329749962&amp;comment_type=issue_comment\" href=\"https://github.com/w3c/csswg-drafts/issues/4441#issuecomment-1329749962\">w3c/csswg-drafts#4441 (comment)</a></li>\n<li>Caniuse.com URL (optional): none</li>\n<li>Bugzilla URL (optional): none</li>\n<li>Mozillians who can provide input (optional): none</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<ul dir=\"auto\">\n<li>Tag review: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1626348164\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3ctag/design-reviews/issues/825\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3ctag/design-reviews/issues/825/hovercard\" href=\"https://github.com/w3ctag/design-reviews/issues/825\">w3ctag/design-reviews#825</a></li>\n<li>WebKit standards position: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1626355373\" data-permission-text=\"Title is private\" data-url=\"https://github.com/WebKit/standards-positions/issues/148\" data-hovercard-type=\"issue\" data-hovercard-url=\"/WebKit/standards-positions/issues/148/hovercard\" href=\"https://github.com/WebKit/standards-positions/issues/148\">WebKit/standards-positions#148</a></li>\n</ul>\n<p dir=\"auto\">Allows transitions of discrete properties to be started on properties explicitly listed in the transition-property list. These transitions run using the same logic as an animation on those properties performing a flip at 50% by default but can be customized through the use of the transitionstart event and web-animations-1 APIs for modifying transition animations.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/763",
            "title": "Transitions on specified discrete properties",
            "date_modified": "2023-03-24T22:09:58.000Z",
            "date_published": "2023-03-15T22:08:13.000Z",
            "author": {
                "name": "josepharhar",
                "url": "https://github.com/josepharhar"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/7681467?u=7879f080290271128b3b338fe220869f5abc5864&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Display and content-visibility animations</li>\n<li>Specification or proposal URL (if available): <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"938977970\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/csswg-drafts/issues/6429\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/csswg-drafts/issues/6429/hovercard\" href=\"https://github.com/w3c/csswg-drafts/issues/6429\">w3c/csswg-drafts#6429</a></li>\n<li>Explainer URL (if available): <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"938977970\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/csswg-drafts/issues/6429\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/csswg-drafts/issues/6429/hovercard?comment_id=1318933547&amp;comment_type=issue_comment\" href=\"https://github.com/w3c/csswg-drafts/issues/6429#issuecomment-1318933547\">w3c/csswg-drafts#6429 (comment)</a></li>\n<li>Caniuse.com URL (optional): none</li>\n<li>Bugzilla URL (optional): none</li>\n<li>Mozillians who can provide input (optional): none</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<ul dir=\"auto\">\n<li>TAG review: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1626348150\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3ctag/design-reviews/issues/824\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3ctag/design-reviews/issues/824/hovercard\" href=\"https://github.com/w3ctag/design-reviews/issues/824\">w3ctag/design-reviews#824</a></li>\n<li>WebKit standards position: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1626352115\" data-permission-text=\"Title is private\" data-url=\"https://github.com/WebKit/standards-positions/issues/147\" data-hovercard-type=\"issue\" data-hovercard-url=\"/WebKit/standards-positions/issues/147/hovercard\" href=\"https://github.com/WebKit/standards-positions/issues/147\">WebKit/standards-positions#147</a></li>\n</ul>\n<p dir=\"auto\">Support specifying display and content-visibility in animations. This support allows for developers to create exit animations after which the element automatically becomes display: none or content-visibility: hidden without needing to write any javascript to handle that switch after the animation is finished. This allows exit animations for elements to be added purely in CSS.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/762",
            "title": "Display and content-visibility animations",
            "date_modified": "2023-04-07T20:30:14.000Z",
            "date_published": "2023-03-15T22:05:01.000Z",
            "author": {
                "name": "josepharhar",
                "url": "https://github.com/josepharhar"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/19228318?u=684ff597ddc25e7ca89bb504cfe3b536e6a27dbe&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: CSS Cascading and Inheritance Level 4 - import conditions - supports()</li>\n<li>Specification or proposal URL (if available): <a href=\"https://www.w3.org/TR/css-cascade-4/#conditional-import\" rel=\"nofollow\">https://www.w3.org/TR/css-cascade-4/#conditional-import</a></li>\n<li>Bugzilla URL (optional): <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1427715\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1427715</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Blink bug: <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1380321\" rel=\"nofollow\">https://bugs.chromium.org/p/chromium/issues/detail?id=1380321</a> - marked as started<br>\nWeb platform tests: <a href=\"https://wpt.fyi/results/css/css-cascade/import-conditions.html\" rel=\"nofollow\">https://wpt.fyi/results/css/css-cascade/import-conditions.html</a></p>",
            "url": "https://github.com/mozilla/standards-positions/issues/761",
            "title": "Request for Mozilla Position: import conditions - supports()",
            "date_modified": "2023-03-24T15:01:41.000Z",
            "date_published": "2023-03-14T21:08:46.000Z",
            "author": {
                "name": "CanadaHonk",
                "url": "https://github.com/CanadaHonk"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/666538?u=14c2d8aa2728dc35c43d93ea02484fbce11b51aa&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Expanded Wildcards in Permissions Policy Origins</li>\n<li>Specification or proposal URL (if available): <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1301095726\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/webappsec-permissions-policy/issues/479\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/webappsec-permissions-policy/issues/479/hovercard\" href=\"https://github.com/w3c/webappsec-permissions-policy/issues/479\">w3c/webappsec-permissions-policy#479</a></li>\n<li>WebKit Request for Position: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1352552342\" data-permission-text=\"Title is private\" data-url=\"https://github.com/WebKit/standards-positions/issues/51\" data-hovercard-type=\"issue\" data-hovercard-url=\"/WebKit/standards-positions/issues/51/hovercard\" href=\"https://github.com/WebKit/standards-positions/issues/51\">WebKit/standards-positions#51</a></li>\n<li>Chromoium Intent to Ship: <a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/kSknKkiYlZU\" rel=\"nofollow\">https://groups.google.com/a/chromium.org/g/blink-dev/c/kSknKkiYlZU</a></li>\n<li>Chromium Feature: <a href=\"https://chromestatus.com/feature/5101218029895680\" rel=\"nofollow\">https://chromestatus.com/feature/5101218029895680</a></li>\n<li>Chromium Issue: <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1418009\" rel=\"nofollow\">https://bugs.chromium.org/p/chromium/issues/detail?id=1418009</a></li>\n<li>Tag Review: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1344884980\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3ctag/design-reviews/issues/765\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3ctag/design-reviews/issues/765/hovercard\" href=\"https://github.com/w3ctag/design-reviews/issues/765\">w3ctag/design-reviews#765</a></li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/dveditz/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dveditz\">@dveditz</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/martinthomson/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinthomson\">@martinthomson</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/bgrins/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bgrins\">@bgrins</a></li>\n<li>Related position: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1352556299\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mozilla/standards-positions/issues/679\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mozilla/standards-positions/issues/679/hovercard\" href=\"https://github.com/mozilla/standards-positions/issues/679\">#679</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Subdomain wildcards in allowlists provided some valuable flexibility, but differed from existing wildcard parsers and required novel code and spec work. This intent will reduce that overhead by reusing parts of the existing <a href=\"https://www.w3.org/TR/CSP/#framework-directive-source-list\" rel=\"nofollow\">Content Security Policy spec</a> and permitting ‘scheme + wildcard domain’ and ‘wildcard port’ in the allowlist.</p>\n<p dir=\"auto\">Specifically, this intent would adopt the definition of <a href=\"https://www.w3.org/TR/CSP/#grammardef-host-source\" rel=\"nofollow\">host-source</a> and <a href=\"https://www.w3.org/TR/CSP/#grammardef-scheme-source\" rel=\"nofollow\">scheme-source</a> instead of <a href=\"https://www.w3.org/TR/permissions-policy/#allowlists\" rel=\"nofollow\">origin</a> in the Allowlist definition while requiring that the <a href=\"https://www.w3.org/TR/CSP/#grammardef-path-part\" rel=\"nofollow\">path-part</a> is empty (as Permissions Policies apply to matching origins). This would change three things from the prior wildcard implementation (all of which expand the range of allowed wildcards and none of which add new restrictions):</p>\n<p dir=\"auto\">(1) Removing the eTLD+1 requirement for subdomain wildcards<br>\nPreviously, you could not have a subdomain wildcard like “https://*.com” but could have one like “https://*.example.com”.<br>\nNow, you can have subdomain wildcards both like “https://*.com” and “https://*.example.com”.</p>\n<p dir=\"auto\">(2) Allowing scheme restrictions on wildcard domains.<br>\nPreviously, you could allow “*” but not restrict to a specific scheme like “https://*” or “https:”.<br>\nNow, you can still allow “*” but have the option of delegating to just a specific scheme like “https://*” or “https:” (the behavior of these is identical).</p>\n<p dir=\"auto\">(3) Allowing port wildcards.<br>\nPreviously you could delegate to the default https port like “<a href=\"https://example.com%E2%80%9D\" rel=\"nofollow\">https://example.com”</a> or “<a href=\"https://example.com:443%E2%80%9D\" rel=\"nofollow\">https://example.com:443”</a> (the behavior of these is identical), but there was no way to explicitly delegate to all ports like “<a href=\"https://example.com:%5C*%E2%80%9D\" rel=\"nofollow\">https://example.com:\\*”</a>.<br>\nNow, you can still delegate to “<a href=\"https://example.com%E2%80%9D\" rel=\"nofollow\">https://example.com”</a> or “<a href=\"https://example.com:443%E2%80%9D\" rel=\"nofollow\">https://example.com:443”</a> but delegation is also permitted to a wildcard port like “<a href=\"https://example.com:%5C*%E2%80%9D\" rel=\"nofollow\">https://example.com:\\*”</a>.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/760",
            "title": "Expanded Wildcards in Permissions Policy Origins",
            "date_modified": "2023-03-14T14:35:32.000Z",
            "date_published": "2023-03-14T14:23:49.000Z",
            "author": {
                "name": "arichiv",
                "url": "https://github.com/arichiv"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/498917?u=a9115706328a9b324dae9b1f27cbb3bd507a9232&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: URL</li>\n<li>Specification or proposal URL (if available): <a href=\"https://url.spec.whatwg.org/\" rel=\"nofollow\">https://url.spec.whatwg.org/</a></li>\n<li>Explainer URL (if available): N/A</li>\n<li>Caniuse.com URL (optional): N/A</li>\n<li>Bugzilla URL (optional): N/A</li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/martinthomson/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinthomson\">@martinthomson</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zcorpan/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zcorpan\">@zcorpan</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">This is part of Interop 2023 and will result in multiple changes in Chrome. So far we have:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/4Fkgx4rh574/m/iM8b4SRQAwAJ\" rel=\"nofollow\">Intent to Ship: URL Standard-compatible IPv4 embedded IPv6 host parser</a></li>\n<li><a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/xsITedSTDnM/m/ANFrwCN0BgAJ\" rel=\"nofollow\">Intent to Ship: Port overflow check in URL setters</a></li>\n<li><a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/wYuPrIQzDTA/m/uoL4bXR2BgAJ\" rel=\"nofollow\">Intent to Ship: Support URLs with non-special schemes</a></li>\n<li><a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/ZkeDSeuBx0Q/m/DO750FkoBAAJ\" rel=\"nofollow\">Intent to Ship: Forbidden and escaped host characters compliant with the URL standard</a></li>\n</ul>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/zcorpan/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/zcorpan\">@zcorpan</a> suggested that we file positions for changes even if they're part of Interop 2023, so this issue is intended to cover everything in it. In other words, anything that's currently failing in Chrome here:<br>\n<a href=\"https://wpt.fyi/results/url?label=experimental&amp;label=master&amp;product=chrome&amp;product=firefox&amp;product=safari&amp;aligned&amp;view=interop&amp;q=label%3Ainterop-2023-url\" rel=\"nofollow\">https://wpt.fyi/results/url?label=experimental&amp;label=master&amp;product=chrome&amp;product=firefox&amp;product=safari&amp;aligned&amp;view=interop&amp;q=label%3Ainterop-2023-url</a></p>",
            "url": "https://github.com/mozilla/standards-positions/issues/759",
            "title": "URL (part of Interop 2023)",
            "date_modified": "2023-03-14T14:40:59.000Z",
            "date_published": "2023-03-13T09:42:39.000Z",
            "author": {
                "name": "foolip",
                "url": "https://github.com/foolip"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/77755715?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on Delayed Clipboard Rendering</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Delayed clipboard rendering</li>\n<li>Specification or proposal URL (if available): <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1499297997\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/editing/issues/417\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/editing/issues/417/hovercard\" href=\"https://github.com/w3c/editing/issues/417\">w3c/editing#417</a></li>\n<li>Explainer URL (if available): <a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/DelayedClipboard/DelayedClipboardRenderingExplainer.md\">https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/DelayedClipboard/DelayedClipboardRenderingExplainer.md</a></li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/smaug----/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/smaug----\">@smaug----</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/EdgarChen/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/EdgarChen\">@EdgarChen</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Delayed clipboard rendering is a performance improvement for the clipboard. No Web API changes are needed at the moment.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/758",
            "title": "Request for Mozilla Position: Delayed clipboard rendering",
            "date_modified": "2023-03-29T03:50:06.000Z",
            "date_published": "2023-03-03T23:22:50.000Z",
            "author": {
                "name": "anaskim",
                "url": "https://github.com/anaskim"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3136226?u=5d5e6a3ec492970073606b81b1e1f7a307dd1175&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position</h2>\n<ul dir=\"auto\">\n<li>Specification Title: RTCRtpReceiver extensions — <code class=\"notranslate\">playoutDelay</code></li>\n<li>Specification or proposal URL (if available): <a href=\"https://w3c.github.io/webrtc-extensions/#dom-rtcrtpreceiver-playoutdelay\" rel=\"nofollow\">https://w3c.github.io/webrtc-extensions/#dom-rtcrtpreceiver-playoutdelay</a></li>\n<li>Explainer URL (if available): none found</li>\n<li>Caniuse.com URL (optional): none found</li>\n<li>Bugzilla URL (optional): <a href=\"https://bugzil.la/1592988\" rel=\"nofollow\">https://bugzil.la/1592988</a></li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jan-ivar/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jan-ivar\">@jan-ivar</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/padenot/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/padenot\">@padenot</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Chrome shipped <code class=\"notranslate\">playoutDelayHint</code> (old name) in 2019 — Their intent to implement: <a href=\"https://groups.google.com/a/chromium.org/g/blink-dev/c/4W4orKqA3Rs\" rel=\"nofollow\">https://groups.google.com/a/chromium.org/g/blink-dev/c/4W4orKqA3Rs</a></p>\n<p dir=\"auto\">WPT: <a href=\"https://wpt.fyi/results/webrtc-extensions/RTCRtpReceiver-playoutDelayHint.html\" rel=\"nofollow\">https://wpt.fyi/results/webrtc-extensions/RTCRtpReceiver-playoutDelayHint.html</a></p>",
            "url": "https://github.com/mozilla/standards-positions/issues/756",
            "title": "Request for Mozilla Position on RTCRtpReceiver.playoutDelay",
            "date_modified": "2023-02-28T22:17:51.000Z",
            "date_published": "2023-02-28T22:17:25.000Z",
            "author": {
                "name": "jan-ivar",
                "url": "https://github.com/jan-ivar"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1274377?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: CSS Text Level 4</li>\n<li>Specification or proposal URL (if available): <a href=\"https://w3c.github.io/csswg-drafts/css-text-4/#valdef-text-wrap-balance\" rel=\"nofollow\">https://w3c.github.io/csswg-drafts/css-text-4/#valdef-text-wrap-balance</a></li>\n<li>Explainer URL (if available): <a href=\"https://docs.google.com/document/d/16-T9gqCagJxcST6hcnneSb7qGunxXa37_UHYqMqhPL0/edit?usp=sharing\" rel=\"nofollow\">https://docs.google.com/document/d/16-T9gqCagJxcST6hcnneSb7qGunxXa37_UHYqMqhPL0/edit?usp=sharing</a></li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jfkthame/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jfkthame\">@jfkthame</a> ?</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">This covers just the <code class=\"notranslate\">text-wrap</code> property, with values <code class=\"notranslate\">wrap</code> (initial) and <code class=\"notranslate\">balance</code>. Other values need to wait for the spec to complete making the <code class=\"notranslate\">white-space</code> to a shorthand. Please see the <a href=\"https://docs.google.com/document/d/16-T9gqCagJxcST6hcnneSb7qGunxXa37_UHYqMqhPL0/edit#bookmark=id.c0zmfgo8wp8o\" rel=\"nofollow\">\"CSS\" section of the explainer</a>.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/755",
            "title": "Request for Mozilla Position: `text-wrap: balance` CSS property.",
            "date_modified": "2023-04-06T19:30:52.000Z",
            "date_published": "2023-02-28T06:58:44.000Z",
            "author": {
                "name": "kojiishi",
                "url": "https://github.com/kojiishi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67641?u=adea16237836e526afa569daa66747dacb79c56d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Interoperable Private Attribution (IPA)</li>\n<li>Specification or proposal URL (if available):</li>\n<li>Explainer URL (if available): <a href=\"https://github.com/patcg-individual-drafts/ipa/blob/main/IPA-End-to-End.md\">https://github.com/patcg-individual-drafts/ipa/blob/main/IPA-End-to-End.md</a></li>\n<li>Mozillians who can provide input: <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/martinthomson/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinthomson\">@martinthomson</a> (that's me, ヾ(⌐■_■)ノ)</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">IPA proposes a system that enables <em>cross-site attribution</em>. The idea is to provide businesses that use advertising with a way to measure how their advertising is performing without having to rely on tracking.  To do this, IPA assigns users with an identifier - a match key - that cannot be used outside of a multi-party compute (MPC) system.  The MPC system only executes a specific protocol that has been vetted to ensure that it only provides aggregated information.</p>\n<p dir=\"auto\">This is a system that I've been working on for some time, so I might be biased.  I'll ask someone else to post a conclusion or at least ensure that there is independent sign off.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/753",
            "title": "Request for Mozilla Position on Interoperable Private Attribution",
            "date_modified": "2023-02-28T05:35:44.000Z",
            "date_published": "2023-02-28T05:35:44.000Z",
            "author": {
                "name": "martinthomson",
                "url": "https://github.com/martinthomson"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/412941?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Eligibility for autofill</li>\n<li>Specification or proposal URL (if available): <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1561489906\" data-permission-text=\"Title is private\" data-url=\"https://github.com/whatwg/html/issues/8801\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/whatwg/html/pull/8801/hovercard\" href=\"https://github.com/whatwg/html/pull/8801\">whatwg/html#8801</a></li>\n<li>Explainer URL (if available): <a href=\"https://github.com/schwering/shared-autofill\">https://github.com/schwering/shared-autofill</a></li>\n<li>Caniuse.com URL (optional):</li>\n<li>Bugzilla URL (optional):</li>\n<li>Mozillians who can provide input (optional): serg, tgiles, dlee (from <a href=\"https://firefox-source-docs.mozilla.org/mots/index.html#form-autofill\" rel=\"nofollow\">this list</a>)</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">The HTML spec currently does not clarify the necessary conditions when a user agent is allowed to autofill a group of fields. We propose a solution that defines a default grouping concept, and also allows the user agent to safely fill frame-transcending forms which are common with payment forms.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/752",
            "title": "Eligibility for autofill",
            "date_modified": "2023-03-29T16:38:56.000Z",
            "date_published": "2023-02-27T20:33:21.000Z",
            "author": {
                "name": "schwering",
                "url": "https://github.com/schwering"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1572026?u=41f48fd873cb7ed78680f1697e6e72caae825273&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on User Locale Preferences</h2>\n<ul dir=\"auto\">\n<li>Specification Title: User Locale Preferences</li>\n<li>Explainer URL: <a href=\"https://github.com/romulocintra/user-locale-client-hints#explainer--user-locale-preferences\">Explainer</a></li>\n<li>Mozillians who can provide input : <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/dminor/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dminor\">@dminor</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<h2 dir=\"auto\">Introduction</h2>\n<p dir=\"auto\"><em>\"Find a reliable way to access user OS preferences to craft a better user experience, and improve accessibility over the web\"</em></p>\n<p dir=\"auto\">User preferences are often system-wide settings (such as in Android, macOS, or Windows). Operating systems allow the user to specify custom overrides for settings such as:</p>\n<ul dir=\"auto\">\n<li>Hour cycle (24-hour or 12-hour time)</li>\n<li>Calendar system</li>\n<li>Measurement unit preferences (metric or imperial)</li>\n<li>Date/time patterns</li>\n<li>Number separators (comma or period)</li>\n</ul>\n<p dir=\"auto\">However, there’s currently no reliable way to access this information from the Web Platform to help craft better user experiences. Allowing web developers to access this information would allow them to improve the accessibility and usability of their websites, and bring the user experience of web applications closer to that of native applications.</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/romulocintra/user-locale-client-hints#explainer--user-locale-preferences\">Read the complete Explainer</a>.</li>\n<li><a href=\"https://docs.google.com/presentation/d/1REfjL8HBfAQQoXzG69kk43ywuT2hW5SuJCNtYxWPAJk/edit?usp=sharing\" rel=\"nofollow\">Slide Deck About User Locale Preferences</a></li>\n</ul>\n<h2 dir=\"auto\">Feedback</h2>\n<p dir=\"auto\">I welcome feedback in this thread, but encourage you to file bugs against</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/romulocintra/user-locale-client-hints/issues\">Explainer repository</a>.</li>\n<li><a href=\"https://github.com/WICG/proposals/issues/78\" data-hovercard-type=\"issue\" data-hovercard-url=\"/WICG/proposals/issues/78/hovercard\">WICG Thread</a></li>\n</ul>",
            "url": "https://github.com/mozilla/standards-positions/issues/751",
            "title": "Request for Mozilla Position on User Locale Preferences",
            "date_modified": "2023-02-24T21:54:41.000Z",
            "date_published": "2023-02-22T05:46:39.000Z",
            "author": {
                "name": "romulocintra",
                "url": "https://github.com/romulocintra"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2953655?u=48f74ff08bef01dc09e67c731f698e09bdce2d37&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Web Authentication large blob extension</li>\n<li>Specification or proposal URL: <a href=\"https://w3c.github.io/webauthn/#sctn-large-blob-extension\" rel=\"nofollow\">https://w3c.github.io/webauthn/#sctn-large-blob-extension</a></li>\n<li>Explainer URL: <a href=\"https://github.com/w3c/webauthn/wiki/Explainer:-WebAuthn-Large-Blob-Extension\">https://github.com/w3c/webauthn/wiki/Explainer:-WebAuthn-Large-Blob-Extension</a></li>\n<li>Mozillians who can provide input: <a href=\"mailto:dveditz@mozilla.com\">dveditz@mozilla.com</a>, the lovely people working on CTAP 2.1 support <g-emoji class=\"g-emoji\" alias=\"heart\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2764.png\">❤️</g-emoji></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">The Web Authentication Large Blob extension allows relying parties to store small amounts of opaque data associated with a credential on an authenticator. This is useful for authentication schemes involving storing certificates on authenticators.</p>\n<p dir=\"auto\">See also:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/w3ctag/design-reviews/issues/820\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3ctag/design-reviews/issues/820/hovercard\">TAG review</a></li>\n<li><a href=\"https://github.com/w3c/webauthn/wiki/Security-&amp;-privacy-self-review:-WebAuthn-Large-Blob-Extension\">Security &amp; privacy self-review</a>.</li>\n<li><a href=\"https://chromestatus.com/feature/5657899357437952\" rel=\"nofollow\">Chromestatus entry</a></li>\n</ul>",
            "url": "https://github.com/mozilla/standards-positions/issues/750",
            "title": "Request for position on Web Authentication large blob extension",
            "date_modified": "2023-03-27T13:52:49.000Z",
            "date_published": "2023-02-21T23:04:59.000Z",
            "author": {
                "name": "nsatragno",
                "url": "https://github.com/nsatragno"
            }
        }
    ]
}