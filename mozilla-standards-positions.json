{
    "version": "https://jsonfeed.org/version/1",
    "title": "mozilla/standards-positions Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/mozilla-standards-positions.json",
    "feed_url": "https://azu.github.io/github-search-rss/mozilla-standards-positions.json",
    "description": "mozilla/standards-positions Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1274377?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: CSS Text Level 4</li>\n<li>Specification or proposal URL (if available): <a href=\"https://w3c.github.io/csswg-drafts/css-text-4/#valdef-text-wrap-balance\" rel=\"nofollow\">https://w3c.github.io/csswg-drafts/css-text-4/#valdef-text-wrap-balance</a></li>\n<li>Explainer URL (if available): <a href=\"https://docs.google.com/document/d/16-T9gqCagJxcST6hcnneSb7qGunxXa37_UHYqMqhPL0/edit?usp=sharing\" rel=\"nofollow\">https://docs.google.com/document/d/16-T9gqCagJxcST6hcnneSb7qGunxXa37_UHYqMqhPL0/edit?usp=sharing</a></li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jfkthame/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jfkthame\">@jfkthame</a> ?</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">This covers just the <code class=\"notranslate\">text-wrap</code> property, with values <code class=\"notranslate\">wrap</code> (initial) and <code class=\"notranslate\">balance</code>. Other values need to wait for the spec to complete making the <code class=\"notranslate\">white-space</code> to a shorthand. Please see the <a href=\"https://docs.google.com/document/d/16-T9gqCagJxcST6hcnneSb7qGunxXa37_UHYqMqhPL0/edit#bookmark=id.c0zmfgo8wp8o\" rel=\"nofollow\">\"CSS\" section of the explainer</a>.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/755",
            "title": "Request for Mozilla Position: `text-wrap: balance` CSS property.",
            "date_modified": "2023-02-28T06:58:44.000Z",
            "date_published": "2023-02-28T06:58:44.000Z",
            "author": {
                "name": "kojiishi",
                "url": "https://github.com/kojiishi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/87425807?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title:</li>\n<li>Specification or proposal URL (if available):</li>\n<li>Explainer URL (if available):</li>\n<li>Caniuse.com URL (optional):</li>\n<li>Bugzilla URL (optional):</li>\n<li>Mozillians who can provide input (optional):</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>",
            "url": "https://github.com/mozilla/standards-positions/issues/754",
            "title": "Sirws ",
            "date_modified": "2023-02-28T08:55:21.000Z",
            "date_published": "2023-02-28T06:20:43.000Z",
            "author": {
                "name": "Sirwsasady1",
                "url": "https://github.com/Sirwsasady1"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67641?u=adea16237836e526afa569daa66747dacb79c56d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Interoperable Private Attribution (IPA)</li>\n<li>Specification or proposal URL (if available):</li>\n<li>Explainer URL (if available): <a href=\"https://github.com/patcg-individual-drafts/ipa/blob/main/IPA-End-to-End.md\">https://github.com/patcg-individual-drafts/ipa/blob/main/IPA-End-to-End.md</a></li>\n<li>Mozillians who can provide input: <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/martinthomson/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinthomson\">@martinthomson</a> (that's me, ヾ(⌐■_■)ノ)</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">IPA proposes a system that enables <em>cross-site attribution</em>. The idea is to provide businesses that use advertising with a way to measure how their advertising is performing without having to rely on tracking.  To do this, IPA assigns users with an identifier - a match key - that cannot be used outside of a multi-party compute (MPC) system.  The MPC system only executes a specific protocol that has been vetted to ensure that it only provides aggregated information.</p>\n<p dir=\"auto\">This is a system that I've been working on for some time, so I might be biased.  I'll ask someone else to post a conclusion or at least ensure that there is independent sign off.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/753",
            "title": "Request for Mozilla Position on Interoperable Private Attribution",
            "date_modified": "2023-02-28T05:35:44.000Z",
            "date_published": "2023-02-28T05:35:44.000Z",
            "author": {
                "name": "martinthomson",
                "url": "https://github.com/martinthomson"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/412941?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Eligibility for autofill</li>\n<li>Specification or proposal URL (if available): <a aria-label=\"Pull request #8801\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1561489906\" data-permission-text=\"Title is private\" data-url=\"https://github.com/whatwg/html/issues/8801\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/whatwg/html/pull/8801/hovercard\" href=\"https://github.com/whatwg/html/pull/8801\">whatwg/html#8801</a></li>\n<li>Explainer URL (if available): <a href=\"https://github.com/schwering/shared-autofill\">https://github.com/schwering/shared-autofill</a></li>\n<li>Caniuse.com URL (optional):</li>\n<li>Bugzilla URL (optional):</li>\n<li>Mozillians who can provide input (optional): serg, tgiles, dlee (from <a href=\"https://firefox-source-docs.mozilla.org/mots/index.html#form-autofill\" rel=\"nofollow\">this list</a>)</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">The HTML spec currently does not clarify the necessary conditions when a user agent is allowed to autofill a group of fields. We propose a solution that defines a default grouping concept, and also allows the user agent to safely fill frame-transcending forms which are common with payment forms.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/752",
            "title": "Eligibility for autofill",
            "date_modified": "2023-02-27T20:33:21.000Z",
            "date_published": "2023-02-27T20:33:21.000Z",
            "author": {
                "name": "schwering",
                "url": "https://github.com/schwering"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1572026?u=41f48fd873cb7ed78680f1697e6e72caae825273&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on User Locale Preferences</h2>\n<ul dir=\"auto\">\n<li>Specification Title: User Locale Preferences</li>\n<li>Explainer URL: <a href=\"https://github.com/romulocintra/user-locale-client-hints#explainer--user-locale-preferences\">Explainer</a></li>\n<li>Mozillians who can provide input : <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/dminor/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/dminor\">@dminor</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<h2 dir=\"auto\">Introduction</h2>\n<p dir=\"auto\"><em>\"Find a reliable way to access user OS preferences to craft a better user experience, and improve accessibility over the web\"</em></p>\n<p dir=\"auto\">User preferences are often system-wide settings (such as in Android, macOS, or Windows). Operating systems allow the user to specify custom overrides for settings such as:</p>\n<ul dir=\"auto\">\n<li>Hour cycle (24-hour or 12-hour time)</li>\n<li>Calendar system</li>\n<li>Measurement unit preferences (metric or imperial)</li>\n<li>Date/time patterns</li>\n<li>Number separators (comma or period)</li>\n</ul>\n<p dir=\"auto\">However, there’s currently no reliable way to access this information from the Web Platform to help craft better user experiences. Allowing web developers to access this information would allow them to improve the accessibility and usability of their websites, and bring the user experience of web applications closer to that of native applications.</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/romulocintra/user-locale-client-hints#explainer--user-locale-preferences\">Read the complete Explainer</a>.</li>\n<li><a href=\"https://docs.google.com/presentation/d/1REfjL8HBfAQQoXzG69kk43ywuT2hW5SuJCNtYxWPAJk/edit?usp=sharing\" rel=\"nofollow\">Slide Deck About User Locale Preferences</a></li>\n</ul>\n<h2 dir=\"auto\">Feedback</h2>\n<p dir=\"auto\">I welcome feedback in this thread, but encourage you to file bugs against</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/romulocintra/user-locale-client-hints/issues\">Explainer repository</a>.</li>\n<li><a href=\"https://github.com/WICG/proposals/issues/78\" data-hovercard-type=\"issue\" data-hovercard-url=\"/WICG/proposals/issues/78/hovercard\">WICG Thread</a></li>\n</ul>",
            "url": "https://github.com/mozilla/standards-positions/issues/751",
            "title": "Request for Mozilla Position on User Locale Preferences",
            "date_modified": "2023-02-24T21:54:41.000Z",
            "date_published": "2023-02-22T05:46:39.000Z",
            "author": {
                "name": "romulocintra",
                "url": "https://github.com/romulocintra"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2953655?u=48f74ff08bef01dc09e67c731f698e09bdce2d37&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Web Authentication large blob extension</li>\n<li>Specification or proposal URL: <a href=\"https://w3c.github.io/webauthn/#sctn-large-blob-extension\" rel=\"nofollow\">https://w3c.github.io/webauthn/#sctn-large-blob-extension</a></li>\n<li>Explainer URL: <a href=\"https://github.com/w3c/webauthn/wiki/Explainer:-WebAuthn-Large-Blob-Extension\">https://github.com/w3c/webauthn/wiki/Explainer:-WebAuthn-Large-Blob-Extension</a></li>\n<li>Mozillians who can provide input: <a href=\"mailto:dveditz@mozilla.com\">dveditz@mozilla.com</a>, the lovely people working on CTAP 2.1 support <g-emoji class=\"g-emoji\" alias=\"heart\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2764.png\">❤️</g-emoji></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">The Web Authentication Large Blob extension allows relying parties to store small amounts of opaque data associated with a credential on an authenticator. This is useful for authentication schemes involving storing certificates on authenticators.</p>\n<p dir=\"auto\">See also:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://github.com/w3ctag/design-reviews/issues/820\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3ctag/design-reviews/issues/820/hovercard\">TAG review</a></li>\n<li><a href=\"https://github.com/w3c/webauthn/wiki/Security-&amp;-privacy-self-review:-WebAuthn-Large-Blob-Extension\">Security &amp; privacy self-review</a>.</li>\n<li><a href=\"https://chromestatus.com/feature/5657899357437952\" rel=\"nofollow\">Chromestatus entry</a></li>\n</ul>",
            "url": "https://github.com/mozilla/standards-positions/issues/750",
            "title": "Request for position on Web Authentication large blob extension",
            "date_modified": "2023-02-21T23:04:59.000Z",
            "date_published": "2023-02-21T23:04:59.000Z",
            "author": {
                "name": "nsatragno",
                "url": "https://github.com/nsatragno"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/73939538?u=6c9f9375c1e3b0f78cee03ed3880b65de3065633&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: <strong>Document Subtitle</strong></li>\n<li>Explainer URL (if available): <a href=\"https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/DocumentSubtitle/explainer.md\">https://github.com/MicrosoftEdge/MSEdgeExplainers/blob/main/DocumentSubtitle/explainer.md</a></li>\n<li>crbug: <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=1351682\" rel=\"nofollow\">https://bugs.chromium.org/p/chromium/issues/detail?id=1351682</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">We want to enable a way with which web apps (installed or not) can save contextual information about the document/file that is being edited or used at the moment. Titles have become convoluted and are not the best resources to find this information for screen readers, and updating them when a web app is installed or being used from the home screen requires JavaScript and matching to a media query.</p>\n<p dir=\"auto\">This <em>does not</em> involve the creation of a new HTML tag, it will be a standard name value for a meta tag. The HTML standard recommends that if there is processing by the UA (this might happen if this information were to be applied to the title bar of an installed web app or shown in the text in the tab of a browser) it should be then added as a standard value.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/749",
            "title": "Position request for adding a meta tag `name` value of `subtitle` (Document Subtitle)",
            "date_modified": "2023-02-22T17:43:03.000Z",
            "date_published": "2023-02-20T18:23:52.000Z",
            "author": {
                "name": "diekus",
                "url": "https://github.com/diekus"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/7578653?u=7f39a0ad0de2ce948c6f966aae80059bf55e1f4d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><ul dir=\"auto\">\n<li>Specification Title: the linear easing function</li>\n<li>Specification or proposal URL (if available): <a href=\"https://w3c.github.io/csswg-drafts/css-easing/#the-linear-easing-function\" rel=\"nofollow\">https://w3c.github.io/csswg-drafts/css-easing/#the-linear-easing-function</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">I see Firefox has this implemented behind the flag, but the test(<a href=\"https://wpt.fyi/css/css-easing/linear-timing-functions-syntax.tentative.html\" rel=\"nofollow\">https://wpt.fyi/css/css-easing/linear-timing-functions-syntax.tentative.html</a>) says that linear() and linear(0) should set the property, which isn't correct as per spec:</p>\n<blockquote>\n<p dir=\"auto\">If there are less than two <a href=\"https://infra.spec.whatwg.org/#list-item\" rel=\"nofollow\">items</a> in stopList, then return failure.</p>\n</blockquote>\n<p dir=\"auto\">Would you consider fix this? Also, what are your thoughts on the state of the spec?</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/747",
            "title": "Request for linear() easing function",
            "date_modified": "2023-02-16T11:02:56.000Z",
            "date_published": "2023-02-15T15:25:57.000Z",
            "author": {
                "name": "danielsakhapov",
                "url": "https://github.com/danielsakhapov"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/81942?u=284f01ab572101237f97e5e34d855fb580f614f5&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Use <code class=\"notranslate\">v</code> flag instead of <code class=\"notranslate\">u</code> for HTML <code class=\"notranslate\">pattern</code> attribute RegExps</li>\n<li>Specification or proposal URL (if available): <a aria-label=\"Pull request #7908\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1229938684\" data-permission-text=\"Title is private\" data-url=\"https://github.com/whatwg/html/issues/7908\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/whatwg/html/pull/7908/hovercard\" href=\"https://github.com/whatwg/html/pull/7908\">whatwg/html#7908</a></li>\n<li>Explainer URL (if available): <a aria-label=\"Pull request #7908\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1229938684\" data-permission-text=\"Title is private\" data-url=\"https://github.com/whatwg/html/issues/7908\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/whatwg/html/pull/7908/hovercard\" href=\"https://github.com/whatwg/html/pull/7908\">whatwg/html#7908</a></li>\n<li>Caniuse.com URL (optional):</li>\n<li>Bugzilla URL (optional): <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=pattern-v\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=pattern-v</a></li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/codehag/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/codehag\">@codehag</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/iainireland/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/iainireland\">@iainireland</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">The proposed change to the HTML <code class=\"notranslate\">pattern</code> attribute swaps the <code class=\"notranslate\">u</code> RegExp flag for <a href=\"https://github.com/tc39/proposal-regexp-v-flag\">the new <code class=\"notranslate\">v</code> flag</a>, enabling the use of three new features:</p>\n<ul dir=\"auto\">\n<li>set notation</li>\n<li>string literal syntax</li>\n<li>Unicode properties of strings</li>\n</ul>\n<p dir=\"auto\">The spec patch at <a aria-label=\"Pull request #7908\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1229938684\" data-permission-text=\"Title is private\" data-url=\"https://github.com/whatwg/html/issues/7908\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/whatwg/html/pull/7908/hovercard\" href=\"https://github.com/whatwg/html/pull/7908\">whatwg/html#7908</a> lists the potentially breaking changes. Some patterns that previously would compile, now throw an early error with the <code class=\"notranslate\">v</code> flag — specifically those with a character class including either an unescaped special character or a double punctuator.</p>\n<p dir=\"auto\"><strong>We expect such patterns to be rare.</strong> To validate those assumptions we’ve added two use counters to Chromium: <code class=\"notranslate\">V8RegExpUnicodeSetIncompatibilitiesWithUnicodeMode</code> tracks patterns in any JavaScript <code class=\"notranslate\">u</code> RegExps (not just those implicitly generated via the <code class=\"notranslate\">pattern</code> attribute) that would throw if they were used with the <code class=\"notranslate\">v</code> flag, and <code class=\"notranslate\">HTMLPatternRegExpUnicodeSetIncompatibilitiesWithUnicodeMode</code> does the same thing for the smaller &amp; more relevant set of RegExps that are compiled via the HTML <code class=\"notranslate\">pattern</code> attribute.</p>\n<p dir=\"auto\">Importantly, note that throwing patterns result in <code class=\"notranslate\">inputElement.validity.valid === true</code> for any input value (as if the <code class=\"notranslate\">pattern</code> attribute wasn’t present), so the only compatibility risk is that some value/pattern combinations that would previously result in <code class=\"notranslate\">inputElement.validity.valid === false</code> now result in <code class=\"notranslate\">inputElement.validity.valid === true</code>. So even if the UseCounters are non-zero, it could be that there is no actual breakage.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/745",
            "title": "Request for Position: Use `v` flag instead of `u` for HTML `pattern` attribute RegExps",
            "date_modified": "2023-02-24T10:58:56.000Z",
            "date_published": "2023-02-13T12:47:05.000Z",
            "author": {
                "name": "mathiasbynens",
                "url": "https://github.com/mathiasbynens"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/11488631?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: skip service worker no-op fetch handler.</li>\n<li>Specification or proposal URL: <a href=\"https://github.com/yoshisatoyanagisawa/service-worker-skip-no-op-fetch-handler/\">explainer</a></li>\n<li>Caniuse.com URL (optional):</li>\n<li>Bugzilla URL (optional):</li>\n<li>Mozillians who can provide input (optional):</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Some sites have a no-op (no operation) fetch handler (e.g. <code class=\"notranslate\">onfetch = () =&gt; {}</code>).  However, it only brings overheads to start a service worker and execute a no-op handler without bringing any feature benefits like caching or offline capabilities because the code does nothing.  To make the navigation to such pages faster, we would like to omit the service worker start and the handler execution from the navigation critical path if a user agent identifies that the service worker fetch handler is no-op.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/744",
            "title": "Skip service worker no-op fetch handler",
            "date_modified": "2023-02-13T15:06:06.000Z",
            "date_published": "2023-02-07T09:19:32.000Z",
            "author": {
                "name": "yoshisatoyanagisawa",
                "url": "https://github.com/yoshisatoyanagisawa"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/567455?u=c64423c0a5d51a39d1a9f9c61486b2b6a060f92b&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: MathML Core  (mtd@colspan)</li>\n<li>Specification or proposal URL: <a href=\"https://w3c.github.io/mathml-core/#entry-in-table-or-matrix-mtd\" rel=\"nofollow\">https://w3c.github.io/mathml-core/#entry-in-table-or-matrix-mtd</a></li>\n<li>Caniuse.com URL (optional): N/A</li>\n<li>Bugzilla URL (optional): <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1814346\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1814346</a></li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/emilio/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/emilio\">@emilio</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">MathML 3 has an attribute called <code class=\"notranslate\">columspan</code> [1] that is implemented in Firefox relying on the implementation of HTML's <code class=\"notranslate\">colspan</code> attribute [2].</p>\n<p dir=\"auto\">MathML Core instead switches to <code class=\"notranslate\">colspan</code> for consistency with HTML [3] and clarifies things like parsing. In particular this makes things confusing for users who are familiar with HTML and can simplify implementation a bit (because of the name mismatch, we have to do some remapping to <code class=\"notranslate\">colspan</code> or checks on element type in [2]).</p>\n<p dir=\"auto\">Would Mozilla be interested in supporting this name (together with the legacy name <code class=\"notranslate\">columnspan</code>)?</p>\n<p dir=\"auto\">[1] <a href=\"https://www.w3.org/TR/MathML3/chapter3.html#presm.mtdatts\" rel=\"nofollow\">https://www.w3.org/TR/MathML3/chapter3.html#presm.mtdatts</a><br>\n[2] <a href=\"https://searchfox.org/mozilla-central/search?q=columnspan&amp;path=&amp;case=true&amp;regexp=false\" rel=\"nofollow\">https://searchfox.org/mozilla-central/search?q=columnspan&amp;path=&amp;case=true&amp;regexp=false</a><br>\n[3] <a href=\"https://w3c.github.io/mathml-core/#entry-in-table-or-matrix-mtd\" rel=\"nofollow\">https://w3c.github.io/mathml-core/#entry-in-table-or-matrix-mtd</a></p>",
            "url": "https://github.com/mozilla/standards-positions/issues/743",
            "title": "MathML colspan attribute for the `<mtd>` element",
            "date_modified": "2023-02-03T19:50:29.000Z",
            "date_published": "2023-02-01T13:55:33.000Z",
            "author": {
                "name": "fred-wang",
                "url": "https://github.com/fred-wang"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/83420?u=ce16e5323c536a5a1d496210abdfefd840438a51&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">In discussing with <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/tantek/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tantek\">@tantek</a>, it seems like you want Chrome to file standards positions around the time we have IDL and an API shape (which we usually do inside the explainer, roughly during <a href=\"https://www.chromium.org/blink/launching-features/#step-2-prototyping\" rel=\"nofollow\">step 2 of the Blink process</a>), which is often before we write a specification (roughly the <a href=\"https://www.chromium.org/blink/launching-features/#step-4-widen-review\" rel=\"nofollow\">end of step 4 or early in step 5</a>). If that's accurate, this repo's <a href=\"https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/about-issue-and-pull-request-templates\">issue template (or templates)</a> should have a field where we can say whether the URL refers to an explainer or full specification, and probably the rough timeline we expect before we'd want to ship something.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/739",
            "title": "Meta: add issue template fields/templates to explain the maturity of the spec",
            "date_modified": "2023-02-01T15:10:08.000Z",
            "date_published": "2023-01-25T22:40:20.000Z",
            "author": {
                "name": "jyasskin",
                "url": "https://github.com/jyasskin"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/121819828?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: File System Access API</li>\n<li>Specification or proposal URL:  <a href=\"https://fs.spec.whatwg.org/\" rel=\"nofollow\">https://fs.spec.whatwg.org/</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/API/File_System_Access_API</a></li>\n<li>Caniuse.com URL (optional): <a href=\"https://caniuse.com/native-filesystem-api\" rel=\"nofollow\">https://caniuse.com/native-filesystem-api</a></li>\n<li>Bugzilla URL (optional): <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1246236\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1246236</a></li>\n<li>Mozillians who can provide input (optional):</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">This was previously turned down (<a aria-label=\"Issue #154\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"437317241\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mozilla/standards-positions/issues/154\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mozilla/standards-positions/issues/154/hovercard\" href=\"https://github.com/mozilla/standards-positions/issues/154\">#154</a> and <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/Daasin/standards-positions/commit/91a1e8c2e8b3b16a9a166e86bf7fefb787f56502/hovercard\" href=\"https://github.com/Daasin/standards-positions/commit/91a1e8c2e8b3b16a9a166e86bf7fefb787f56502\">Daasin@<tt>91a1e8c</tt></a>), however, I took notice of the \"Mozilla could be supportive of parts\" part. I think that this API could provide some specific very important functionality that is not harmful to the user. Please don't close this issue without reading it thoroughly and considering my case.</p>\n<p dir=\"auto\">I think the primary concern with the API is the <code class=\"notranslate\">window.showDirectoryPicker()</code> method and the associated <code class=\"notranslate\">FileSystemDirectoryHandle</code>. Selecting a directory would allow a website to create and delete any number of files within the directory, and I agree that this is very dangerous, and should not be implemented (or disabled by default).</p>\n<p dir=\"auto\">But I believe that <code class=\"notranslate\">window.showOpenFilePicker()</code> and <code class=\"notranslate\">window.showSaveFilePicker()</code> and the associated <code class=\"notranslate\">FileSystemFileHandle</code> don't create any increased risk to the user than already exists today. This allows only access to one file. Opening and saving files is already possible without this API, but it doesn't provide the same functionality. The only possible problem is a website writing to a file that the user opened, because opening a file traditionally only implies reading, but this can be solved by simply prompting the user. Of course a prompt wouldn't be necessary for files created with showSaveFilePicker, since that already implies writing.</p>\n<p dir=\"auto\">Why I think this is important is because FileSystemFileHandle allows streamed downloads for client-generated files. Currently, doing this requires a hack with service workers, which are not accessible in private mode and require a worker script to be hosted (see <a href=\"https://github.com/jimmywarting/StreamSaver.js\">https://github.com/jimmywarting/StreamSaver.js</a>). Without this you're limited to downloading files that fit within memory. Additionally, it allows seeking within a file and truncating the file.</p>\n<p dir=\"auto\"><strong>TL;DR:</strong> Implement only <code class=\"notranslate\">FileSystemFileHandle</code> and not <code class=\"notranslate\">FileSystemDirectoryHandle</code>.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/738",
            "title": "Implement subset of File System Access API",
            "date_modified": "2023-01-24T04:04:53.000Z",
            "date_published": "2023-01-21T22:48:11.000Z",
            "author": {
                "name": "Zipdox2",
                "url": "https://github.com/Zipdox2"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/90582190?u=6b681f416ff87d275425dfee9b5dcf4bdc65b63d&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Always Partition Storage</li>\n<li>Specification or proposal URL: <a href=\"https://privacycg.github.io/storage-access/#storage\" rel=\"nofollow\">Storage Access API, Section 3.4</a></li>\n<li>Caniuse.com URL (optional):</li>\n<li>Bugzilla URL (optional):</li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/bvandersloot-mozilla/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bvandersloot-mozilla\">@bvandersloot-mozilla</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">The Storage Access API has been formalized to not affect Storage APIs, instead restricting its effects to cookies. This newly written section reflects that. Historically the Gecko implementation has unpartitioned all Storage along with cookies.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/737",
            "title": "Never Unpartition Storage APIs via the Storage Access API",
            "date_modified": "2023-02-02T00:16:15.000Z",
            "date_published": "2023-01-20T18:59:34.000Z",
            "author": {
                "name": "bvandersloot-mozilla",
                "url": "https://github.com/bvandersloot-mozilla"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/17800817?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: requestStorageAccessForOrigin</li>\n<li>Specification or proposal URL: <a href=\"https://github.com/privacycg/requestStorageAccessForOrigin\">https://github.com/privacycg/requestStorageAccessForOrigin</a></li>\n<li>Caniuse.com URL (optional): N/A</li>\n<li>Bugzilla URL (optional): N/A</li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/bvandersloot-mozilla/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bvandersloot-mozilla\">@bvandersloot-mozilla</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/martinthomson/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinthomson\">@martinthomson</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">The proposed <code class=\"notranslate\">requestStorageAccessForOrigin</code> API builds on the Storage Access API to allow non-iframe use. This affords more control for the top-level site as cross-site cookies continue to be phased out; it also allows partial restoration of <a href=\"https://github.com/privacycg/storage-access/issues/3\" data-hovercard-type=\"issue\" data-hovercard-url=\"/privacycg/storage-access/issues/3/hovercard\">the page-level behavior of <code class=\"notranslate\">requestStorageAccess</code></a>, which will be retired in favor of <a href=\"https://github.com/privacycg/storage-access/issues/122\" data-hovercard-type=\"issue\" data-hovercard-url=\"/privacycg/storage-access/issues/122/hovercard\">a per-frame model</a>. Like <code class=\"notranslate\">requestStorageAccess</code>, implementation-defined behavior allows different user agents flexibility to apply policies as they see fit, though the hope is that divergence will be minimized.</p>\n<p dir=\"auto\">Note that this proposal is similar to an internal shim API implemented by both Safari and Firefox.</p>\n<p dir=\"auto\">Prior discussions have surfaced the need for embeddee opt-in, which the API attempts to ensure via requiring invocation of <code class=\"notranslate\">requestStorageAccess</code> for frame-level access (the same way a prior <code class=\"notranslate\">requestStorageAccess</code> grant is proposed to waive the user interaction requirement in <a href=\"https://github.com/privacycg/storage-access/issues/122\" data-hovercard-type=\"issue\" data-hovercard-url=\"/privacycg/storage-access/issues/122/hovercard\">the per-frame <code class=\"notranslate\">requestStorageAccess</code> model</a>); requiring CORS on subresource requests to the embeddee from the top-level site in order for cookies to be included; and applying only to explicitly <code class=\"notranslate\">SameSite=None</code> cookies.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/736",
            "title": "requestStorageAccessForOrigin",
            "date_modified": "2023-02-13T14:37:30.000Z",
            "date_published": "2023-01-19T19:40:49.000Z",
            "author": {
                "name": "mreichhoff",
                "url": "https://github.com/mreichhoff"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/589787?u=9a243bbc55885118db4f1826f5920b4a3447f744&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: The Language Pseudo-class: :lang() (Selectors Level 4)</li>\n<li>Specification or proposal URL: <a href=\"https://www.w3.org/TR/selectors-4/#the-lang-pseudo\" rel=\"nofollow\">https://www.w3.org/TR/selectors-4/#the-lang-pseudo</a></li>\n<li>Caniuse.com URL (optional):</li>\n<li>Bugzilla URL (optional): <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1121792\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1121792</a></li>\n<li>Mozillians who can provide input (optional):</li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Chromium status entry: <a href=\"https://chromestatus.com/feature/5071058079055872\" rel=\"nofollow\">https://chromestatus.com/feature/5071058079055872</a><br>\nIn-progress implementation for chromium: <a href=\"https://chromium-review.googlesource.com/c/chromium/src/+/3515958\" rel=\"nofollow\">https://chromium-review.googlesource.com/c/chromium/src/+/3515958</a><br>\nExplainer: <a href=\"https://github.com/rogerzanoni/docs/tree/main/lang-level-4\">https://github.com/rogerzanoni/docs/tree/main/lang-level-4</a></p>",
            "url": "https://github.com/mozilla/standards-positions/issues/735",
            "title": "Request for position: The Language Pseudo-class: :lang() (Selectors Level 4)",
            "date_modified": "2023-01-19T12:33:40.000Z",
            "date_published": "2023-01-19T12:30:09.000Z",
            "author": {
                "name": "rogerzanoni",
                "url": "https://github.com/rogerzanoni"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/7681467?u=7879f080290271128b3b338fe220869f5abc5864&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: New dialog initial focus algorithm</li>\n<li>Specification or proposal URL: <a aria-label=\"Pull request #8199\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1340960779\" data-permission-text=\"Title is private\" data-url=\"https://github.com/whatwg/html/issues/8199\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/whatwg/html/pull/8199/hovercard\" href=\"https://github.com/whatwg/html/pull/8199\">whatwg/html#8199</a></li>\n<li>Caniuse.com URL (optional):</li>\n<li>Bugzilla URL (optional): <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1811129\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1811129</a></li>\n<li>Mozillians who can provide input (optional):</li>\n</ul>",
            "url": "https://github.com/mozilla/standards-positions/issues/734",
            "title": "Request for position: new dialog initial focus algorithm",
            "date_modified": "2023-01-26T09:40:37.000Z",
            "date_published": "2023-01-18T22:50:16.000Z",
            "author": {
                "name": "josepharhar",
                "url": "https://github.com/josepharhar"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/77407429?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification or proposal URL: <a aria-label=\"Pull request #10\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1162019596\" data-permission-text=\"Title is private\" data-url=\"https://github.com/whatwg/fs/issues/10\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/whatwg/fs/pull/10/hovercard\" href=\"https://github.com/whatwg/fs/pull/10\">whatwg/fs#10</a> (though that currently specifies directory moves, too)\n<ul dir=\"auto\">\n<li>Explainer: <a aria-label=\"Pull request #2\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1536851906\" data-permission-text=\"Title is private\" data-url=\"https://github.com/a-sully/fs/issues/2\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/a-sully/fs/pull/2/hovercard\" href=\"https://github.com/a-sully/fs/pull/2\">a-sully/fs#2</a></li>\n</ul>\n</li>\n<li>Mozillians who can provide input: <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jesup/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jesup\">@jesup</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<ul dir=\"auto\">\n<li>TAG Design Review: <a aria-label=\"Issue #805\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1536889330\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3ctag/design-reviews/issues/805\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3ctag/design-reviews/issues/805/hovercard\" href=\"https://github.com/w3ctag/design-reviews/issues/805\">w3ctag/design-reviews#805</a></li>\n<li>WebKit standards-positions issue: <a aria-label=\"Issue #121\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1538483012\" data-permission-text=\"Title is private\" data-url=\"https://github.com/WebKit/standards-positions/issues/121\" data-hovercard-type=\"issue\" data-hovercard-url=\"/WebKit/standards-positions/issues/121/hovercard\" href=\"https://github.com/WebKit/standards-positions/issues/121\">WebKit/standards-positions#121</a></li>\n</ul>\n<p dir=\"auto\">This is specifically asking for input for moving/renaming <em><strong>local</strong></em> (i.e. not in the Origin Private File System - which is already shipped) <em><strong>files</strong></em> (not directories - which is different enough that it will have a separate explainer)</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/732",
            "title": "Request for Position: FileSystemFileHandle.move() for local files",
            "date_modified": "2023-01-19T04:26:58.000Z",
            "date_published": "2023-01-18T18:38:28.000Z",
            "author": {
                "name": "a-sully",
                "url": "https://github.com/a-sully"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/25042744?u=6ff964b9350c27c48d8dc55a01cc44bd253170f6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: Federated Credential Management API with multiple IDP support</li>\n<li>Specification or proposal URL: <a href=\"https://github.com/fedidcg/FedCM/blob/main/proposals/multi-idp-api.md\">https://github.com/fedidcg/FedCM/blob/main/proposals/multi-idp-api.md</a> (thanks <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/tttzach/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/tttzach\">@tttzach</a>!)</li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/bvandersloot-mozilla/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bvandersloot-mozilla\">@bvandersloot-mozilla</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/martinthomson/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/martinthomson\">@martinthomson</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Hey, I am requesting standards position on the FedCM API multi IDP support. The explainer is up from GitHub and is based on a bunch of discussions in the FedID CG. The original FedCM request was done in <a aria-label=\"Issue #701\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1434777206\" data-permission-text=\"Title is private\" data-url=\"https://github.com/mozilla/standards-positions/issues/701\" data-hovercard-type=\"issue\" data-hovercard-url=\"/mozilla/standards-positions/issues/701/hovercard\" href=\"https://github.com/mozilla/standards-positions/issues/701\">#701</a> but since this is a substantial update, I figured it's worth requesting standards position for this as well.</p>",
            "url": "https://github.com/mozilla/standards-positions/issues/730",
            "title": "FedCM Multi IDP Support",
            "date_modified": "2023-02-02T15:36:33.000Z",
            "date_published": "2023-01-11T21:55:42.000Z",
            "author": {
                "name": "npm1",
                "url": "https://github.com/npm1"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/289731?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Request for Mozilla Position on an Emerging Web Specification</h2>\n<ul dir=\"auto\">\n<li>Specification Title: (part of webrtc-extensions)</li>\n<li>Specification or proposal URL: <a href=\"https://w3c.github.io/webrtc-extensions/#disable-hardware\" rel=\"nofollow\">https://w3c.github.io/webrtc-extensions/#disable-hardware</a></li>\n<li>Caniuse.com URL (optional): n/a</li>\n<li>Bugzilla URL (optional): <a href=\"https://bugzilla.mozilla.org/show_bug.cgi?id=1766311\" rel=\"nofollow\">https://bugzilla.mozilla.org/show_bug.cgi?id=1766311</a> mentions the spec issue so I believe HW encoder being off is the default right now</li>\n<li>Mozillians who can provide input (optional): <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jan-ivar/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jan-ivar\">@jan-ivar</a></li>\n</ul>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">See also <a aria-label=\"Issue #98\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1140445962\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/webrtc-extensions/issues/98\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/webrtc-extensions/issues/98/hovercard\" href=\"https://github.com/w3c/webrtc-extensions/issues/98\">w3c/webrtc-extensions#98</a>, spec PR was in <a aria-label=\"Pull request #128\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1471327960\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/webrtc-extensions/issues/128\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/w3c/webrtc-extensions/pull/128/hovercard\" href=\"https://github.com/w3c/webrtc-extensions/pull/128\">w3c/webrtc-extensions#128</a></p>",
            "url": "https://github.com/mozilla/standards-positions/issues/728",
            "title": "Request for Position: programatically disabling hardware encoding/decoding in WebRTC",
            "date_modified": "2023-01-24T12:02:54.000Z",
            "date_published": "2023-01-11T10:09:20.000Z",
            "author": {
                "name": "fippo",
                "url": "https://github.com/fippo"
            }
        }
    ]
}