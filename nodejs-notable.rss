<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://azu.github.io/github-search-rss/nodejs-notable.rss</id>
    <title>Node.js notable changes</title>
    <updated>2025-02-17T12:01:46.860Z</updated>
    <generator>github-search-rss</generator>
    <link rel="alternate" href="https://azu.github.io/github-search-rss/nodejs-notable.rss"/>
    <subtitle>Node.js notable changes on GitHub</subtitle>
    <rights>github-search-rss</rights>
    <entry>
        <title type="html"><![CDATA[url: expose urlpattern as global]]></title>
        <id>https://github.com/nodejs/node/pull/56950</id>
        <link href="https://github.com/nodejs/node/pull/56950"/>
        <updated>2025-02-09T15:33:11.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/9317857?u=9dcf1dd73081139efa5b143f6e4167eda8b8c962&v=4" width="64" height="64" alt=""/><br/><p dir="auto">Expose URLPattern as global.</p>]]></content>
        <author>
            <name>JonasBa</name>
            <email>JonasBa@noreply.github.com</email>
            <uri>https://github.com/JonasBa</uri>
        </author>
        <published>2025-02-07T15:28:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[deps: update timezone to 2025a]]></title>
        <id>https://github.com/nodejs/node/pull/56876</id>
        <link href="https://github.com/nodejs/node/pull/56876"/>
        <updated>2025-02-04T00:46:39.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/18269663?u=0c9e9c1f0a4d40e2b3f46d18f0e6721f9125411a&v=4" width="64" height="64" alt=""/><br/><p dir="auto">Notable change:</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Timezone data has been updated to 2025a:
- Paraguay adopts permanent -03 starting spring 2024.
- Improve pre-1991 data for the Philippines."><pre class="notranslate"><code class="notranslate">Timezone data has been updated to 2025a:
- Paraguay adopts permanent -03 starting spring 2024.
- Improve pre-1991 data for the Philippines.
</code></pre></div>
<hr>
<p dir="auto">This PR was generated by tools/timezone-update.yml.</p>
<p dir="auto">Updates the ICU files as per the instructions present in <a href="https://github.com/nodejs/node/blob/main/doc/contributing/maintaining/maintaining-icu.md#time-zone-data">https://github.com/nodejs/node/blob/main/doc/contributing/maintaining/maintaining-icu.md#time-zone-data</a></p>
<p dir="auto">To test, build node off this branch &amp; log the version of tz using</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="console.log(process.versions.tz)"><pre class="notranslate"><span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">process</span><span class="pl-kos">.</span><span class="pl-c1">versions</span><span class="pl-kos">.</span><span class="pl-c1">tz</span><span class="pl-kos">)</span></pre></div>]]></content>
        <author>
            <name>nodejs-github-bot</name>
            <email>nodejs-github-bot@noreply.github.com</email>
            <uri>https://github.com/nodejs-github-bot</uri>
        </author>
        <published>2025-02-02T00:33:26.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[crypto: update root-certificates to 3.107]]></title>
        <id>https://github.com/nodejs/node/pull/56566</id>
        <link href="https://github.com/nodejs/node/pull/56566"/>
        <updated>2025-02-10T18:29:52.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/18269663?u=0c9e9c1f0a4d40e2b3f46d18f0e6721f9125411a&v=4" width="64" height="64" alt=""/><br/><p dir="auto">This is an automated update of root-certificates to 3.107.</p>]]></content>
        <author>
            <name>nodejs-github-bot</name>
            <email>nodejs-github-bot@noreply.github.com</email>
            <uri>https://github.com/nodejs-github-bot</uri>
        </author>
        <published>2025-01-12T00:34:36.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[src: implement whatwg's URLPattern spec]]></title>
        <id>https://github.com/nodejs/node/pull/56452</id>
        <link href="https://github.com/nodejs/node/pull/56452"/>
        <updated>2025-02-17T00:08:40.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/1935246?u=440932d4aed022e31a2140e1825c0167b7a12357&v=4" width="64" height="64" alt=""/><br/><p dir="auto">Co-authored-by: Daniel Lemire (<a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/lemire/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/lemire">@lemire</a>)</p>
<h2 dir="auto">Notes:</h2>
<ul dir="auto">
<li>Ada now requires C++20</li>
<li>URLPattern is exposed through node:url module</li>
</ul>
<h2 dir="auto">TODOs</h2>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Removed exception flag requirement</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Pass all web-platform tests</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Release Ada v3 before landing this PR</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Make sure to split all changes to multiple commits</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Add <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/lemire/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/lemire">@lemire</a> as co-author to all commits</li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Land upstream pull-request <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2707742879" data-permission-text="Title is private" data-url="https://github.com/ada-url/ada/issues/785" data-hovercard-type="pull_request" data-hovercard-url="/ada-url/ada/pull/785/hovercard" href="https://github.com/ada-url/ada/pull/785">ada-url/ada#785</a></li>
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Add documentation for global and node:url module declarations.</li>
</ul>
<p dir="auto">cc @nodejs/cpp-reviewers</p>
<p dir="auto"><span class="issue-keyword tooltipped tooltipped-se" aria-label="This pull request closes issue #40844.">Fixes</span> <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1056658595" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/40844" data-hovercard-type="issue" data-hovercard-url="/nodejs/node/issues/40844/hovercard" href="https://github.com/nodejs/node/issues/40844">#40844</a></p>]]></content>
        <author>
            <name>anonrig</name>
            <email>anonrig@noreply.github.com</email>
            <uri>https://github.com/anonrig</uri>
        </author>
        <published>2025-01-03T16:07:05.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[src,lib: use uv_thread_setname to a better multi-thread debugging]]></title>
        <id>https://github.com/nodejs/node/pull/56416</id>
        <link href="https://github.com/nodejs/node/pull/56416"/>
        <updated>2025-02-06T19:05:07.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/26234614?u=5edcb211e86232b06e6d6133439f9490f9f5d689&v=4" width="64" height="64" alt=""/><br/><p dir="auto">Note: This PR depends <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2633424051" data-permission-text="Title is private" data-url="https://github.com/libuv/libuv/issues/4599" data-hovercard-type="pull_request" data-hovercard-url="/libuv/libuv/pull/4599/hovercard" href="https://github.com/libuv/libuv/pull/4599">libuv/libuv#4599</a> to be released by libuv team.</p>
<p dir="auto">TODO:</p>
<ul class="contains-task-list">
<li class="task-list-item"><input type="checkbox" id="" disabled="" class="task-list-item-checkbox" checked=""> Work on tests</li>
</ul>
<ul dir="auto">
<li><del>I'm also patching uv to set the default thread name, but it's up to them to accept it, I don't know if there's a way from Node.js to access their thread or call an API to change their default thread name</del> Done in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2764625365" data-permission-text="Title is private" data-url="https://github.com/libuv/libuv/issues/4664" data-hovercard-type="pull_request" data-hovercard-url="/libuv/libuv/pull/4664/hovercard" href="https://github.com/libuv/libuv/pull/4664">libuv/libuv#4664</a></li>
<li>A default thread name for the inspector thread has been added</li>
<li>A default thread nathe me for signal inspector has been added</li>
<li>A default thread name for each one of the Node Platform Workers has been added</li>
<li>I'm using <code class="notranslate">worker.name</code> to set the thread name when a worker thread gets created (it defaults to <code class="notranslate">WorkerThread</code>).</li>
</ul>
<p dir="auto">cc: <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/santigimeno/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/santigimeno">@santigimeno</a></p>
<hr>
<p dir="auto">With this PR users will be able to get a more meaningful diagnostic when looking at Node.js threads, for instance, they will be able to see on which thread their app is spending more time (libuv, workers, main thread...). See the image:</p>
<p dir="auto">Consider the following server (please do not run it in production):</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="const http = require('http')
const fs = require('node:fs')
const { Worker, isMainThread } = require('node:worker_threads')

if (!isMainThread) {
  console.log('Done :)')
  setTimeout(() =&gt; {
    process.exit(0);
  }, 5 * 1000);
  return;
}

let i = 0;
http.createServer((req, res) =&gt; {
  fs.readFile(__filename, () =&gt; {
    res.end('hello')
  })
  new Worker(__filename, { name: `RafaelGSS (${++i})` });
}).listen(3000)"><pre class="notranslate"><span class="pl-k">const</span> <span class="pl-s1">http</span> <span class="pl-c1">=</span> <span class="pl-en">require</span><span class="pl-kos">(</span><span class="pl-s">'http'</span><span class="pl-kos">)</span>
<span class="pl-k">const</span> <span class="pl-s1">fs</span> <span class="pl-c1">=</span> <span class="pl-en">require</span><span class="pl-kos">(</span><span class="pl-s">'node:fs'</span><span class="pl-kos">)</span>
<span class="pl-k">const</span> <span class="pl-kos">{</span> Worker<span class="pl-kos">,</span> isMainThread <span class="pl-kos">}</span> <span class="pl-c1">=</span> <span class="pl-en">require</span><span class="pl-kos">(</span><span class="pl-s">'node:worker_threads'</span><span class="pl-kos">)</span>

<span class="pl-k">if</span> <span class="pl-kos">(</span><span class="pl-c1">!</span><span class="pl-s1">isMainThread</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
  <span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s">'Done :)'</span><span class="pl-kos">)</span>
  <span class="pl-en">setTimeout</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
    <span class="pl-s1">process</span><span class="pl-kos">.</span><span class="pl-en">exit</span><span class="pl-kos">(</span><span class="pl-c1">0</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-kos">}</span><span class="pl-kos">,</span> <span class="pl-c1">5</span> <span class="pl-c1">*</span> <span class="pl-c1">1000</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-k">return</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span>

<span class="pl-k">let</span> <span class="pl-s1">i</span> <span class="pl-c1">=</span> <span class="pl-c1">0</span><span class="pl-kos">;</span>
<span class="pl-s1">http</span><span class="pl-kos">.</span><span class="pl-en">createServer</span><span class="pl-kos">(</span><span class="pl-kos">(</span><span class="pl-s1">req</span><span class="pl-kos">,</span> <span class="pl-s1">res</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
  <span class="pl-s1">fs</span><span class="pl-kos">.</span><span class="pl-en">readFile</span><span class="pl-kos">(</span><span class="pl-s1">__filename</span><span class="pl-kos">,</span> <span class="pl-kos">(</span><span class="pl-kos">)</span> <span class="pl-c1">=&gt;</span> <span class="pl-kos">{</span>
    <span class="pl-s1">res</span><span class="pl-kos">.</span><span class="pl-en">end</span><span class="pl-kos">(</span><span class="pl-s">'hello'</span><span class="pl-kos">)</span>
  <span class="pl-kos">}</span><span class="pl-kos">)</span>
  <span class="pl-k">new</span> <span class="pl-v">Worker</span><span class="pl-kos">(</span><span class="pl-s1">__filename</span><span class="pl-kos">,</span> <span class="pl-kos">{</span> <span class="pl-c1">name</span>: <span class="pl-s">`RafaelGSS (<span class="pl-s1"><span class="pl-kos">${</span><span class="pl-c1">++</span><span class="pl-s1">i</span><span class="pl-kos">}</span></span>)`</span> <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">.</span><span class="pl-en">listen</span><span class="pl-kos">(</span><span class="pl-c1">3000</span><span class="pl-kos">)</span></pre></div>
<p dir="auto">On Node.js startup if you monitor using <code class="notranslate">htop</code> you should be able to see:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/26234614/399515569-e2343986-bb7d-40a0-a624-1ea9b7d0bd16.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzk3OTQwMDYsIm5iZiI6MTczOTc5MzcwNiwicGF0aCI6Ii8yNjIzNDYxNC8zOTk1MTU1NjktZTIzNDM5ODYtYmI3ZC00MGEwLWE2MjQtMWVhOWI3ZDBiZDE2LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAyMTclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMjE3VDEyMDE0NlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWZlY2IyM2Y2M2I1MjhlMTM3MzA1MGI5NTY1YWRiNDVhYjE3NTY4ZDE1OWJlYjBjMjkyMDcwNmI0MDc5MmE1YzEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.BY3NtoKUG3cVeFDvPAKf6JNgRNyumH8tLjG4CNjIWF8"><img src="https://private-user-images.githubusercontent.com/26234614/399515569-e2343986-bb7d-40a0-a624-1ea9b7d0bd16.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzk3OTQwMDYsIm5iZiI6MTczOTc5MzcwNiwicGF0aCI6Ii8yNjIzNDYxNC8zOTk1MTU1NjktZTIzNDM5ODYtYmI3ZC00MGEwLWE2MjQtMWVhOWI3ZDBiZDE2LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAyMTclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMjE3VDEyMDE0NlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWZlY2IyM2Y2M2I1MjhlMTM3MzA1MGI5NTY1YWRiNDVhYjE3NTY4ZDE1OWJlYjBjMjkyMDcwNmI0MDc5MmE1YzEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.BY3NtoKUG3cVeFDvPAKf6JNgRNyumH8tLjG4CNjIWF8" alt="image" style="max-width: 100%;"></a></p>
<p dir="auto">Then once it gets a request:</p>
<p dir="auto"><a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/26234614/399515664-729a6935-d5ba-4704-bd73-9e64af19270d.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzk3OTQwMDYsIm5iZiI6MTczOTc5MzcwNiwicGF0aCI6Ii8yNjIzNDYxNC8zOTk1MTU2NjQtNzI5YTY5MzUtZDViYS00NzA0LWJkNzMtOWU2NGFmMTkyNzBkLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAyMTclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMjE3VDEyMDE0NlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWViYTFiMmVhYjQzMTU3OGE5ODRkYzVmMDkxNTUxODMxMTg3N2VjOTY1NDM4NjUzNGJjNjJkZjY1NjdmM2IzZDYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.Os6VkacQBWOAGVVx-qHkHjU2gIPEC9UEIPoqorPvtkc"><img src="https://private-user-images.githubusercontent.com/26234614/399515664-729a6935-d5ba-4704-bd73-9e64af19270d.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzk3OTQwMDYsIm5iZiI6MTczOTc5MzcwNiwicGF0aCI6Ii8yNjIzNDYxNC8zOTk1MTU2NjQtNzI5YTY5MzUtZDViYS00NzA0LWJkNzMtOWU2NGFmMTkyNzBkLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAyMTclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMjE3VDEyMDE0NlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWViYTFiMmVhYjQzMTU3OGE5ODRkYzVmMDkxNTUxODMxMTg3N2VjOTY1NDM4NjUzNGJjNjJkZjY1NjdmM2IzZDYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.Os6VkacQBWOAGVVx-qHkHjU2gIPEC9UEIPoqorPvtkc" alt="image" style="max-width: 100%;"></a></p>
<blockquote>
<p dir="auto"><code class="notranslate">V8Worker</code> and <code class="notranslate">libuv</code> threads number depends on the parameters &amp; environments</p>
</blockquote>]]></content>
        <author>
            <name>RafaelGSS</name>
            <email>RafaelGSS@noreply.github.com</email>
            <uri>https://github.com/RafaelGSS</uri>
        </author>
        <published>2024-12-30T19:41:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[module: unflag --experimental-strip-types]]></title>
        <id>https://github.com/nodejs/node/pull/56350</id>
        <link href="https://github.com/nodejs/node/pull/56350"/>
        <updated>2025-01-09T14:06:12.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/36735501?u=8e93f809522831771aab98cbb2a67c5e67e673d5&v=4" width="64" height="64" alt=""/><br/><p dir="auto">It's time to enable it by default to catch some more bugs, currently there are no open issues.<br>
I think it's a semver minor change.</p>
<p dir="auto"><span class="issue-keyword tooltipped tooltipped-se" aria-label="This pull request closes issue #17.">Fixes</span>: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2652169165" data-permission-text="Title is private" data-url="https://github.com/nodejs/typescript/issues/17" data-hovercard-type="issue" data-hovercard-url="/nodejs/typescript/issues/17/hovercard" href="https://github.com/nodejs/typescript/issues/17">nodejs/typescript#17</a></p>
<p dir="auto">@nodejs/tsc for visibility</p>
<p dir="auto">Notable change section:</p>
<p dir="auto">This change enables the flag <code class="notranslate">--experimental-strip-types</code> by default.<br>
Node.js will be able to execute TypeScript files without additional configuration. Note that there are some limitations in the supported syntax documented at <a href="https://nodejs.org/api/typescript.html#type-stripping" rel="nofollow">https://nodejs.org/api/typescript.html#type-stripping</a><br>
This feature is experimental and is subject to change.</p>]]></content>
        <author>
            <name>marco-ippolito</name>
            <email>marco-ippolito@noreply.github.com</email>
            <uri>https://github.com/marco-ippolito</uri>
        </author>
        <published>2024-12-24T15:04:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[src,lib: stabilize permission model]]></title>
        <id>https://github.com/nodejs/node/pull/56201</id>
        <link href="https://github.com/nodejs/node/pull/56201"/>
        <updated>2025-01-13T14:21:05.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/26234614?u=5edcb211e86232b06e6d6133439f9490f9f5d689&v=4" width="64" height="64" alt=""/><br/><p dir="auto">This PR upgrades the Permission Model from <strong>1.1 (Active Development)</strong> to <strong>2.0 (Stable)</strong>.</p>
<p dir="auto">I’ve been diving deep into the Permission Model since its release in Node.js 20.0.0, looking at <a href="https://nodejs.org/api/permissions.html#limitations-and-known-issues" rel="nofollow">its limitations</a> and what’s been fixed so far. Most of the technical challenges have been addressed, except for how symlinks are handled. After a lot of research, it turns out this isn’t fixable due to how the Permission Model relies on file paths, making TOCTOU issues theoretically possible. This isn’t unique to Node.js though—even Deno’s permission system has similar behaviour (<a href="https://secfault-security.com/blog/deno.html" rel="nofollow">see this article</a>).</p>
<p dir="auto">Since the feature’s release, there’s been a shift in how we think about security in Node.js. We’ve leaned into a "Defense in Depth" approach—recognizing that no single feature will let you run untrusted code safely. Instead, these features are like seatbelts: they reduce risk significantly (let’s say 90% of cases, though that’s not a hard number) but won’t stop everything. This aligns with our threat model, and the Permission Model reflects that philosophy.</p>
<p dir="auto">The only remaining "limitation" is symlink behaviour. Fixing this would require changing how the Permission Model works at a fundamental level. It’s not feasible because TOCTOU issues are always a possibility when operating on file paths. Importantly, this isn’t just a Node.js thing—other runtimes face the same challenge.</p>
<p dir="auto">That said, symlinks aren’t a dealbreaker:</p>
<ul dir="auto">
<li>The Permission Model blocks symlink creation by default.</li>
<li>An attacker would need an exact map of existing symlinks in your system to do something harmful. That’s a very unlikely scenario.</li>
<li>If you explicitly allow access to something like <code class="notranslate">/proc/</code>, you’re responsible for understanding what that includes. The docs already cover this.</li>
</ul>
<p dir="auto">I have been talking with <a class="user-mention notranslate" data-hovercard-type="user" data-hovercard-url="/users/tniessen/hovercard" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/tniessen">@tniessen</a> in private as he has been indirectly involved in this feature (by raising concerns or suggestions). Some questions that he raised, and that I expect some of you might raise here too, were:</p>
<blockquote>
<ul dir="auto">
<li>"Most importantly, is anyone actually using the permission model? What is the use case and what security expectations do these users have?"</li>
</ul>
</blockquote>
<p dir="auto">As with any non-popular feature, it's hard to assess its usage in the ecosystem, but we have received some issues in the security-wg repository that could mean people are evaluating its usage:</p>
<ul dir="auto">
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2353355584" data-permission-text="Title is private" data-url="https://github.com/nodejs/security-wg/issues/1330" data-hovercard-type="issue" data-hovercard-url="/nodejs/security-wg/issues/1330/hovercard" href="https://github.com/nodejs/security-wg/issues/1330">nodejs/security-wg#1330</a></li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2003639741" data-permission-text="Title is private" data-url="https://github.com/nodejs/security-wg/issues/1156" data-hovercard-type="issue" data-hovercard-url="/nodejs/security-wg/issues/1156/hovercard" href="https://github.com/nodejs/security-wg/issues/1156">nodejs/security-wg#1156</a></li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1789667329" data-permission-text="Title is private" data-url="https://github.com/nodejs/security-wg/issues/1043" data-hovercard-type="issue" data-hovercard-url="/nodejs/security-wg/issues/1043/hovercard" href="https://github.com/nodejs/security-wg/issues/1043">nodejs/security-wg#1043</a> (same author of b)</li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1773489419" data-permission-text="Title is private" data-url="https://github.com/nodejs/security-wg/issues/1039" data-hovercard-type="issue" data-hovercard-url="/nodejs/security-wg/issues/1039/hovercard" href="https://github.com/nodejs/security-wg/issues/1039">nodejs/security-wg#1039</a> (same author of b)</li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1606023653" data-permission-text="Title is private" data-url="https://github.com/nodejs/security-wg/issues/898" data-hovercard-type="issue" data-hovercard-url="/nodejs/security-wg/issues/898/hovercard?comment_id=1850137960&amp;comment_type=issue_comment" href="https://github.com/nodejs/security-wg/issues/898#issuecomment-1850137960">nodejs/security-wg#898 (comment)</a></li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2341451325" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/53385" data-hovercard-type="issue" data-hovercard-url="/nodejs/node/issues/53385/hovercard" href="https://github.com/nodejs/node/issues/53385">#53385</a></li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1987985571" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/50659" data-hovercard-type="issue" data-hovercard-url="/nodejs/node/issues/50659/hovercard" href="https://github.com/nodejs/node/issues/50659">#50659</a></li>
<li><a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1843318248" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/49080" data-hovercard-type="issue" data-hovercard-url="/nodejs/node/issues/49080/hovercard" href="https://github.com/nodejs/node/issues/49080">#49080</a></li>
<li>There are more, but I don't think I should list all of them here.</li>
</ul>
<p dir="auto">I was also approached by many people on social media saying "thanks" for the feature and that they are looking forward to having it established. I also understand that testing a feature is different from using this feature in production.</p>
<blockquote>
<ul dir="auto">
<li>"Following up on that, what security guarantees does the permission model provide, if any? Do those security guarantees actually match the security expectations of the people that actively use the permission model today?"</li>
</ul>
</blockquote>
<p dir="auto">The Permission Model is most useful in development environments or scenarios where you want extra guardrails, but it doesn’t replace the core rule: don’t run untrusted code in Node.js.</p>
<p dir="auto">If you configure it correctly, it’ll block most unwanted filesystem access, but it’s not a magic bullet. It’s a tool that works well when used as intended, and it complements Node.js’ broader security posture.</p>
<hr>
<p dir="auto">cc: @nodejs/security-wg</p>]]></content>
        <author>
            <name>RafaelGSS</name>
            <email>RafaelGSS@noreply.github.com</email>
            <uri>https://github.com/RafaelGSS</uri>
        </author>
        <published>2024-12-10T03:07:58.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[module: only emit require(esm) warning under --trace-require-module]]></title>
        <id>https://github.com/nodejs/node/pull/56194</id>
        <link href="https://github.com/nodejs/node/pull/56194"/>
        <updated>2025-02-06T01:17:56.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4" width="64" height="64" alt=""/><br/><p dir="auto">require(esm) is relatively stable now and the experimental warning has run its course - it's now more troublesome than useful. This patch changes it to no longer emit a warning unless <code class="notranslate">--trace-require-module</code> is explicitly used. The flag supports two modes:</p>
<ul dir="auto">
<li><code class="notranslate">--trace-require-module=all</code>: emit warnings for all usages</li>
<li><code class="notranslate">--trace-require-module=no-node-modules</code>: emit warnings for usages that do not come from a <code class="notranslate">node_modules</code> folder.</li>
</ul>
<p dir="auto"><span class="issue-keyword tooltipped tooltipped-se" aria-label="This pull request closes issue #55417.">Fixes</span>: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2593754685" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/55417" data-hovercard-type="issue" data-hovercard-url="/nodejs/node/issues/55417/hovercard" href="https://github.com/nodejs/node/issues/55417">#55417</a><br>
Refs: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2543254926" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/55085" data-hovercard-type="pull_request" data-hovercard-url="/nodejs/node/pull/55085/hovercard?comment_id=2526341962&amp;comment_type=issue_comment" href="https://github.com/nodejs/node/pull/55085#issuecomment-2526341962">#55085 (comment)</a></p>
]]></content>
        <author>
            <name>joyeecheung</name>
            <email>joyeecheung@noreply.github.com</email>
            <uri>https://github.com/joyeecheung</uri>
        </author>
        <published>2024-12-09T14:58:04.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[crypto: graduate WebCryptoAPI Ed25519 and X25519 algorithms as stable]]></title>
        <id>https://github.com/nodejs/node/pull/56142</id>
        <link href="https://github.com/nodejs/node/pull/56142"/>
        <updated>2025-02-03T12:07:29.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/241506?u=13324b3ac27dc54cdde3ac635d567d0d96b88876&v=4" width="64" height="64" alt=""/><br/><p dir="auto">Ed25519 and X25519 algorithms are no longer experimental. They <a href="https://github.com/w3c/webcrypto/pull/362#issuecomment-2519927404" data-hovercard-type="pull_request" data-hovercard-url="/w3c/webcrypto/pull/362/hovercard">were merged into the main spec</a>.</p>
<hr>
<p dir="auto">
<a id="label-95f85a" href="https://github.com/nodejs/node/labels/notable-change" data-name="notable-change" style="--label-r:249;--label-g:208;--label-b:196;--label-h:13;--label-s:81;--label-l:87;" data-view-component="true" class="IssueLabel hx_IssueLabel Label--inline">
  notable-change</a>
  <tool-tip id="tooltip-1b7dbb51-08b2-432f-99a8-8b85e502af39" for="label-95f85a" popover="manual" data-direction="s" data-type="description" data-view-component="true" class="sr-only position-absolute">PRs with changes that should be highlighted in changelogs.</tool-tip>
</p>
<blockquote>
<p dir="auto">Following the merge of Curve25519 into the <a href="https://w3c.github.io/webcrypto/" rel="nofollow">Web Cryptography API Editor's Draft</a> the <code class="notranslate">Ed25519</code> and <code class="notranslate">X25519</code> algorithm identifiers are now stable and will no longer emit an ExperimentalWarning upon use.</p>
</blockquote>]]></content>
        <author>
            <name>panva</name>
            <email>panva@noreply.github.com</email>
            <uri>https://github.com/panva</uri>
        </author>
        <published>2024-12-05T11:03:59.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[deps: update undici to 7.0.0]]></title>
        <id>https://github.com/nodejs/node/pull/56070</id>
        <link href="https://github.com/nodejs/node/pull/56070"/>
        <updated>2024-12-02T21:00:00.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/18269663?u=0c9e9c1f0a4d40e2b3f46d18f0e6721f9125411a&v=4" width="64" height="64" alt=""/><br/><p dir="auto">This is an automated update of undici to 7.0.0.</p>]]></content>
        <author>
            <name>nodejs-github-bot</name>
            <email>nodejs-github-bot@noreply.github.com</email>
            <uri>https://github.com/nodejs-github-bot</uri>
        </author>
        <published>2024-11-29T09:12:39.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[doc,lib,src,test: unflag sqlite module]]></title>
        <id>https://github.com/nodejs/node/pull/55890</id>
        <link href="https://github.com/nodejs/node/pull/55890"/>
        <updated>2024-11-19T03:23:30.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/2512748?u=4d3b96c531c7d0ae8b192a48105b6f4554152a2a&v=4" width="64" height="64" alt=""/><br/><p dir="auto">As requested in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2659078832" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/55854" data-hovercard-type="issue" data-hovercard-url="/nodejs/node/issues/55854/hovercard" href="https://github.com/nodejs/node/issues/55854">#55854</a>...</p>
<p dir="auto">This commit allows the node:sqlite module to be used without starting Node with a CLI flag. The module is still experimental.</p>
<p dir="auto"><span class="issue-keyword tooltipped tooltipped-se" aria-label="This pull request closes issue #55854.">Fixes</span>: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2659078832" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/55854" data-hovercard-type="issue" data-hovercard-url="/nodejs/node/issues/55854/hovercard" href="https://github.com/nodejs/node/issues/55854">#55854</a></p>
]]></content>
        <author>
            <name>cjihrig</name>
            <email>cjihrig@noreply.github.com</email>
            <uri>https://github.com/cjihrig</uri>
        </author>
        <published>2024-11-17T03:13:47.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[zlib: deprecate classes usage without `new`]]></title>
        <id>https://github.com/nodejs/node/pull/55718</id>
        <link href="https://github.com/nodejs/node/pull/55718"/>
        <updated>2024-11-29T20:55:13.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/1935246?u=440932d4aed022e31a2140e1825c0167b7a12357&v=4" width="64" height="64" alt=""/><br/><p dir="auto">Since we documentation-only deprecated the usage without <code class="notranslate">new</code> qualifier, we can make it runtime deprecated.</p>]]></content>
        <author>
            <name>anonrig</name>
            <email>anonrig@noreply.github.com</email>
            <uri>https://github.com/anonrig</uri>
        </author>
        <published>2024-11-04T15:55:07.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[implement module.registerHooks() to run synchronous module customization hooks in thread]]></title>
        <id>https://github.com/nodejs/node/pull/55698</id>
        <link href="https://github.com/nodejs/node/pull/55698"/>
        <updated>2025-02-04T17:18:00.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4" width="64" height="64" alt=""/><br/><p dir="auto">This introduces <code class="notranslate">module.registerHooks()</code> for registering module loader customization hooks that are run for all modules loaded by <code class="notranslate">require()</code>, <code class="notranslate">import</code> and functions returned by <code class="notranslate">createRequire()</code> in the same thread, which makes them easier for CJS monkey-patchers to migrate to.</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="import assert from 'node:assert';
import { registerHooks, createRequire } from 'node:module';
import { writeFileSync } from 'node:fs';

writeFileSync('./bar.js', 'export const id = 123;', 'utf8');

registerHooks({
  resolve(specifier, context, nextResolve) {
    const replaced = specifier.replace('foo', 'bar');
    return nextResolve(replaced, context);
  },
  load(url, context, nextLoad) {
    const result = nextLoad(url, context);
    return {
      ...result,
      source: result.source.toString().replace('123', '456'),
    };
  },
});

// Checks that it works with require.
const require = createRequire(import.meta.url);
const required = require('./foo.js');  // redirected by resolve hook to bar.js
assert.strictEqual(required.id, 456);  // replaced by load hook to 456

// Checks that it works with import.
const imported = await import('./foo.js');  // redirected by resolve hook to bar.js
assert.strictEqual(imported.id, 456);  // replaced by load hook to 456"><pre class="notranslate"><span class="pl-k">import</span> <span class="pl-s1">assert</span> <span class="pl-k">from</span> <span class="pl-s">'node:assert'</span><span class="pl-kos">;</span>
<span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-s1">registerHooks</span><span class="pl-kos">,</span> <span class="pl-s1">createRequire</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">'node:module'</span><span class="pl-kos">;</span>
<span class="pl-k">import</span> <span class="pl-kos">{</span> <span class="pl-s1">writeFileSync</span> <span class="pl-kos">}</span> <span class="pl-k">from</span> <span class="pl-s">'node:fs'</span><span class="pl-kos">;</span>

<span class="pl-en">writeFileSync</span><span class="pl-kos">(</span><span class="pl-s">'./bar.js'</span><span class="pl-kos">,</span> <span class="pl-s">'export const id = 123;'</span><span class="pl-kos">,</span> <span class="pl-s">'utf8'</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-en">registerHooks</span><span class="pl-kos">(</span><span class="pl-kos">{</span>
  <span class="pl-en">resolve</span><span class="pl-kos">(</span><span class="pl-s1">specifier</span><span class="pl-kos">,</span> <span class="pl-s1">context</span><span class="pl-kos">,</span> <span class="pl-s1">nextResolve</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-k">const</span> <span class="pl-s1">replaced</span> <span class="pl-c1">=</span> <span class="pl-s1">specifier</span><span class="pl-kos">.</span><span class="pl-en">replace</span><span class="pl-kos">(</span><span class="pl-s">'foo'</span><span class="pl-kos">,</span> <span class="pl-s">'bar'</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
    <span class="pl-k">return</span> <span class="pl-s1">nextResolve</span><span class="pl-kos">(</span><span class="pl-s1">replaced</span><span class="pl-kos">,</span> <span class="pl-s1">context</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
  <span class="pl-kos">}</span><span class="pl-kos">,</span>
  <span class="pl-en">load</span><span class="pl-kos">(</span><span class="pl-s1">url</span><span class="pl-kos">,</span> <span class="pl-s1">context</span><span class="pl-kos">,</span> <span class="pl-s1">nextLoad</span><span class="pl-kos">)</span> <span class="pl-kos">{</span>
    <span class="pl-k">const</span> <span class="pl-s1">result</span> <span class="pl-c1">=</span> <span class="pl-s1">nextLoad</span><span class="pl-kos">(</span><span class="pl-s1">url</span><span class="pl-kos">,</span> <span class="pl-s1">context</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
    <span class="pl-k">return</span> <span class="pl-kos">{</span>
      ...<span class="pl-s1">result</span><span class="pl-kos">,</span>
      <span class="pl-c1">source</span>: <span class="pl-s1">result</span><span class="pl-kos">.</span><span class="pl-c1">source</span><span class="pl-kos">.</span><span class="pl-en">toString</span><span class="pl-kos">(</span><span class="pl-kos">)</span><span class="pl-kos">.</span><span class="pl-en">replace</span><span class="pl-kos">(</span><span class="pl-s">'123'</span><span class="pl-kos">,</span> <span class="pl-s">'456'</span><span class="pl-kos">)</span><span class="pl-kos">,</span>
    <span class="pl-kos">}</span><span class="pl-kos">;</span>
  <span class="pl-kos">}</span><span class="pl-kos">,</span>
<span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>

<span class="pl-c">// Checks that it works with require.</span>
<span class="pl-k">const</span> <span class="pl-s1">require</span> <span class="pl-c1">=</span> <span class="pl-en">createRequire</span><span class="pl-kos">(</span><span class="pl-k">import</span><span class="pl-kos">.</span>meta<span class="pl-kos">.</span><span class="pl-c1">url</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-k">const</span> <span class="pl-s1">required</span> <span class="pl-c1">=</span> <span class="pl-s1">require</span><span class="pl-kos">(</span><span class="pl-s">'./foo.js'</span><span class="pl-kos">)</span><span class="pl-kos">;</span>  <span class="pl-c">// redirected by resolve hook to bar.js</span>
<span class="pl-s1">assert</span><span class="pl-kos">.</span><span class="pl-en">strictEqual</span><span class="pl-kos">(</span><span class="pl-s1">required</span><span class="pl-kos">.</span><span class="pl-c1">id</span><span class="pl-kos">,</span> <span class="pl-c1">456</span><span class="pl-kos">)</span><span class="pl-kos">;</span>  <span class="pl-c">// replaced by load hook to 456</span>

<span class="pl-c">// Checks that it works with import.</span>
<span class="pl-k">const</span> <span class="pl-s1">imported</span> <span class="pl-c1">=</span> <span class="pl-k">await</span> <span class="pl-k">import</span><span class="pl-kos">(</span><span class="pl-s">'./foo.js'</span><span class="pl-kos">)</span><span class="pl-kos">;</span>  <span class="pl-c">// redirected by resolve hook to bar.js</span>
<span class="pl-s1">assert</span><span class="pl-kos">.</span><span class="pl-en">strictEqual</span><span class="pl-kos">(</span><span class="pl-s1">imported</span><span class="pl-kos">.</span><span class="pl-c1">id</span><span class="pl-kos">,</span> <span class="pl-c1">456</span><span class="pl-kos">)</span><span class="pl-kos">;</span>  <span class="pl-c">// replaced by load hook to 456</span></pre></div>
<p dir="auto">This complements the <code class="notranslate">module.register()</code> hooks - the new hooks fit better internally and cover all corners in the module graph; whereas <code class="notranslate">module.register()</code> previously could not cover <code class="notranslate">require()</code> while it was in-thread, and still cannot cover <code class="notranslate">createRequire()</code> after being moved off-thread.</p>
<a target="_blank" rel="noopener noreferrer" href="https://private-user-images.githubusercontent.com/4299420/387710156-a8b04978-f3f6-4b6d-adfb-63710ad8ddf1.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzk3OTQwMDYsIm5iZiI6MTczOTc5MzcwNiwicGF0aCI6Ii80Mjk5NDIwLzM4NzcxMDE1Ni1hOGIwNDk3OC1mM2Y2LTRiNmQtYWRmYi02MzcxMGFkOGRkZjEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDIxNyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAyMTdUMTIwMTQ2WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZTY0OWEyNmQ5MTA2OTU3MTIwZjRjMzk4Mjg2MjAyN2ExMDZhMjEzM2Y4Y2I3Y2M3MGQzZTY3OTg2ZDNlZjUzNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.Sivq5HOOY0PDg7KILdIO36acq5mnztTU-ZdzNXHCtMI"><img width="999" alt="Screenshot 2024-11-19 at 16 01 47" src="https://private-user-images.githubusercontent.com/4299420/387710156-a8b04978-f3f6-4b6d-adfb-63710ad8ddf1.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzk3OTQwMDYsIm5iZiI6MTczOTc5MzcwNiwicGF0aCI6Ii80Mjk5NDIwLzM4NzcxMDE1Ni1hOGIwNDk3OC1mM2Y2LTRiNmQtYWRmYi02MzcxMGFkOGRkZjEucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI1MDIxNyUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNTAyMTdUMTIwMTQ2WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZTY0OWEyNmQ5MTA2OTU3MTIwZjRjMzk4Mjg2MjAyN2ExMDZhMjEzM2Y4Y2I3Y2M3MGQzZTY3OTg2ZDNlZjUzNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.Sivq5HOOY0PDg7KILdIO36acq5mnztTU-ZdzNXHCtMI" style="max-width: 100%;"></a>
<p dir="auto">They are also run in the same thread as the modules being loaded and where the hooks are registered, which means they are easier to debug (no more <code class="notranslate">console.log()</code> getting lost) and do not have the many deadlock issues haunting the <code class="notranslate">module.register()</code> hooks. The new API also takes functions directly so that it's easier for intermediate loader packages to take user options from files that the hooks can't be aware of, like many existing CJS monkey-patchers do.</p>
<hr>
<h4 dir="auto">Background</h4>
<p dir="auto">This implements part of the proposal in <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2333705982" data-permission-text="Title is private" data-url="https://github.com/nodejs/loaders/issues/198" data-hovercard-type="pull_request" data-hovercard-url="/nodejs/loaders/pull/198/hovercard" href="https://github.com/nodejs/loaders/pull/198">nodejs/loaders#198</a> - for the motivations, see <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2207806699" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/52219" data-hovercard-type="issue" data-hovercard-url="/nodejs/node/issues/52219/hovercard" href="https://github.com/nodejs/node/issues/52219">#52219</a> - this fills in the gap where being able to run in-thread and support <code class="notranslate">require()</code> is more important for a hook than being able to run asynchronous code (even then, packages like <a href="https://www.npmjs.com/package/everysync" rel="nofollow">https://www.npmjs.com/package/everysync</a> allows user to sync-ify async code off-thread themselves), especially for a large amount of CJS loader moneky-patchers out there to migrate to an officially supported API easily.</p>
<p dir="auto">The synchronous, in-thread hooks are a lot easier to support universally in the loaders and reduce the number of dark corners where the hooks cannot run or behave in a surprising manner - I guess the amount of "this caveat of asynchronous hooks does not apply to the synchronous hooks" added in the documentation kind of also already proves the point...</p>
<p dir="auto">For now only <code class="notranslate">resolve</code> and <code class="notranslate">load</code> are implemented to reach parity with <code class="notranslate">module.register()</code>. I left the exports hook to <a href="https://github.com/joyeecheung/node/tree/export-hooks">https://github.com/joyeecheung/node/tree/export-hooks</a> which will be a follow-up when we decide the timing at which the post-load hook for CJS should run.</p>
<p dir="auto">The commit <code class="notranslate">module: use synchronous hooks for preparsing in import(cjs)</code> isn't strictly necessary and could split into a follow-up instead, but I think it's nice to have it here instead of leaving out that corner uncovered.</p>
]]></content>
        <author>
            <name>joyeecheung</name>
            <email>joyeecheung@noreply.github.com</email>
            <uri>https://github.com/joyeecheung</uri>
        </author>
        <published>2024-11-02T22:36:52.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[tools: fix root certificate updater]]></title>
        <id>https://github.com/nodejs/node/pull/55681</id>
        <link href="https://github.com/nodejs/node/pull/55681"/>
        <updated>2025-02-10T18:22:32.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/5445507?u=4dc851f27fdfb6c2e287ccdb528977e722ed7760&v=4" width="64" height="64" alt=""/><br/><p dir="auto">Determine the NSS version from actual Firefox releases, instead of attempting to parse a wiki page (which is sensitive to formatting changes and relies on the page being up to date).</p>
<p dir="auto">Refs: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2499112931" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/54680" data-hovercard-type="pull_request" data-hovercard-url="/nodejs/node/pull/54680/hovercard?comment_id=2386882113&amp;comment_type=issue_comment" href="https://github.com/nodejs/node/pull/54680#issuecomment-2386882113">#54680 (comment)</a></p>
<hr>
<p dir="auto">Second commit is the result of running the script to update to Firefox 131 which picks up NSS 3.104.</p>
<p dir="auto">Running the script again without specifying the version shows the script picking up Firefox 132 and NSS 3.105 but there are no certdata changes from NSS 3.104 which would correctly prevent <a href="https://github.com/nodejs/node/blob/main/.github/workflows/tools.yml"><code class="notranslate">.github/workflows/tools.yml</code></a> from creating a new pull request as no files would change:</p>
<div class="highlight highlight-text-shell-session notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="$ node tools/dep_updaters/update-root-certs.mjs -v
Fetching Firefox release data from https://nucleus.mozilla.org/rna/all-releases.json.
Fetching NSS tag from https://hg.mozilla.org/releases/mozilla-release/raw-file/FIREFOX_132_0_RELEASE/security/nss/TAG-INFO.
Found tag NSS_3_105_RTM.
Updating to NSS version 3.105
Fetching https://raw.githubusercontent.com/nss-dev/nss/refs/tags/NSS_3_105_RTM/lib/ckfw/builtins/certdata.txt
Writing /home/rlau/sandbox/github/node/tools/certdata.txt
Running tools/mk-ca-bundle.pl
Parsing: GlobalSign Root CA
Parsing: Entrust.net Premium 2048 Secure Server CA
Parsing: Baltimore CyberTrust Root
Parsing: Entrust Root Certification Authority
Parsing: Comodo AAA Services root
Parsing: QuoVadis Root CA 2
Parsing: QuoVadis Root CA 3
Parsing: XRamp Global CA Root
Parsing: Go Daddy Class 2 CA
Parsing: Starfield Class 2 CA
Parsing: DigiCert Assured ID Root CA
Parsing: DigiCert Global Root CA
Parsing: DigiCert High Assurance EV Root CA
Parsing: SwissSign Gold CA - G2
Parsing: SwissSign Silver CA - G2
Parsing: SecureTrust CA
Parsing: Secure Global CA
Parsing: COMODO Certification Authority
Parsing: COMODO ECC Certification Authority
Parsing: Certigna
Parsing: ePKI Root Certification Authority
Parsing: certSIGN ROOT CA
Parsing: NetLock Arany (Class Gold) Főtanúsítvány
Parsing: SecureSign RootCA11
Parsing: Microsec e-Szigno Root CA 2009
Parsing: GlobalSign Root CA - R3
Parsing: Izenpe.com
Parsing: Go Daddy Root Certificate Authority - G2
Parsing: Starfield Root Certificate Authority - G2
Parsing: Starfield Services Root Certificate Authority - G2
Parsing: AffirmTrust Commercial
Parsing: AffirmTrust Networking
Parsing: AffirmTrust Premium
Parsing: AffirmTrust Premium ECC
Parsing: Certum Trusted Network CA
Parsing: TWCA Root Certification Authority
Parsing: Security Communication RootCA2
Parsing: Actalis Authentication Root CA
Parsing: Buypass Class 2 Root CA
Parsing: Buypass Class 3 Root CA
Parsing: T-TeleSec GlobalRoot Class 3
Parsing: D-TRUST Root Class 3 CA 2 2009
Parsing: D-TRUST Root Class 3 CA 2 EV 2009
Parsing: CA Disig Root R2
Parsing: ACCVRAIZ1
Parsing: TWCA Global Root CA
Parsing: TeliaSonera Root CA v1
Parsing: T-TeleSec GlobalRoot Class 2
Parsing: Atos TrustedRoot 2011
Parsing: QuoVadis Root CA 1 G3
Parsing: QuoVadis Root CA 2 G3
Parsing: QuoVadis Root CA 3 G3
Parsing: DigiCert Assured ID Root G2
Parsing: DigiCert Assured ID Root G3
Parsing: DigiCert Global Root G2
Parsing: DigiCert Global Root G3
Parsing: DigiCert Trusted Root G4
Parsing: COMODO RSA Certification Authority
Parsing: USERTrust RSA Certification Authority
Parsing: USERTrust ECC Certification Authority
Parsing: GlobalSign ECC Root CA - R5
Parsing: IdenTrust Commercial Root CA 1
Parsing: IdenTrust Public Sector Root CA 1
Parsing: Entrust Root Certification Authority - G2
Parsing: Entrust Root Certification Authority - EC1
Parsing: CFCA EV ROOT
Parsing: OISTE WISeKey Global Root GB CA
Parsing: SZAFIR ROOT CA2
Parsing: Certum Trusted Network CA 2
Parsing: Hellenic Academic and Research Institutions RootCA 2015
Parsing: Hellenic Academic and Research Institutions ECC RootCA 2015
Parsing: ISRG Root X1
Parsing: AC RAIZ FNMT-RCM
Parsing: Amazon Root CA 1
Parsing: Amazon Root CA 2
Parsing: Amazon Root CA 3
Parsing: Amazon Root CA 4
Parsing: TUBITAK Kamu SM SSL Kok Sertifikasi - Surum 1
Parsing: GDCA TrustAUTH R5 ROOT
Parsing: SSL.com Root Certification Authority RSA
Parsing: SSL.com Root Certification Authority ECC
Parsing: SSL.com EV Root Certification Authority RSA R2
Parsing: SSL.com EV Root Certification Authority ECC
Parsing: GlobalSign Root CA - R6
Parsing: OISTE WISeKey Global Root GC CA
Parsing: UCA Global G2 Root
Parsing: UCA Extended Validation Root
Parsing: Certigna Root CA
Parsing: emSign Root CA - G1
Parsing: emSign ECC Root CA - G3
Parsing: emSign Root CA - C1
Parsing: emSign ECC Root CA - C3
Parsing: Hongkong Post Root CA 3
Parsing: Entrust Root Certification Authority - G4
Parsing: Microsoft ECC Root Certificate Authority 2017
Parsing: Microsoft RSA Root Certificate Authority 2017
Parsing: e-Szigno Root CA 2017
Parsing: certSIGN Root CA G2
Parsing: Trustwave Global Certification Authority
Parsing: Trustwave Global ECC P256 Certification Authority
Parsing: Trustwave Global ECC P384 Certification Authority
Parsing: NAVER Global Root Certification Authority
Parsing: AC RAIZ FNMT-RCM SERVIDORES SEGUROS
Parsing: GlobalSign Root R46
Parsing: GlobalSign Root E46
Parsing: GLOBALTRUST 2020
Parsing: ANF Secure Server Root CA
Parsing: Certum EC-384 CA
Parsing: Certum Trusted Root CA
Parsing: TunTrust Root CA
Parsing: HARICA TLS RSA Root CA 2021
Parsing: HARICA TLS ECC Root CA 2021
Parsing: Autoridad de Certificacion Firmaprofesional CIF A62634068
Parsing: vTrus ECC Root CA
Parsing: vTrus Root CA
Parsing: ISRG Root X2
Parsing: HiPKI Root CA - G1
Parsing: GlobalSign ECC Root CA - R4
Parsing: GTS Root R1
Parsing: GTS Root R2
Parsing: GTS Root R3
Parsing: GTS Root R4
Parsing: Telia Root CA v2
Parsing: D-TRUST BR Root CA 1 2020
Parsing: D-TRUST EV Root CA 1 2020
Parsing: DigiCert TLS ECC P384 Root G5
Parsing: DigiCert TLS RSA4096 Root G5
Parsing: Certainly Root R1
Parsing: Certainly Root E1
Parsing: Security Communication RootCA3
Parsing: Security Communication ECC RootCA1
Parsing: BJCA Global Root CA1
Parsing: BJCA Global Root CA2
Parsing: Sectigo Public Server Authentication Root E46
Parsing: Sectigo Public Server Authentication Root R46
Parsing: SSL.com TLS RSA Root CA 2022
Parsing: SSL.com TLS ECC Root CA 2022
Parsing: Atos TrustedRoot Root CA ECC TLS 2021
Parsing: Atos TrustedRoot Root CA RSA TLS 2021
Parsing: TrustAsia Global Root CA G3
Parsing: TrustAsia Global Root CA G4
Parsing: CommScope Public Trust ECC Root-01
Parsing: CommScope Public Trust ECC Root-02
Parsing: CommScope Public Trust RSA Root-01
Parsing: CommScope Public Trust RSA Root-02
Parsing: Telekom Security TLS ECC Root 2020
Parsing: Telekom Security TLS RSA Root 2023
Parsing: FIRMAPROFESIONAL CA ROOT-A WEB
Parsing: TWCA CYBER Root CA
Parsing: SecureSign Root CA12
Parsing: SecureSign Root CA14
Parsing: SecureSign Root CA15
Done (152 CA certs processed, 25 skipped).


NEW_VERSION=3.105
COMMIT_MSG&lt;&lt;c116927d-aa5a-4b1e-b0ba-96d2c33ae849
crypto: update root certificates to NSS 3.105

This is the certdata.txt[0] from NSS 3.105.

This is the version of NSS that shipped in Firefox 132.0 on 2024-10-29.

[0] https://raw.githubusercontent.com/nss-dev/nss/refs/tags/NSS_3_105_RTM/lib/ckfw/builtins/certdata.txt
c116927d-aa5a-4b1e-b0ba-96d2c33ae849
$ git status
On branch rootcerts
Your branch is ahead of 'upstream/main' by 2 commits.
  (use &quot;git push&quot; to publish your local commits)

nothing to commit, working tree clean
$"><pre class="notranslate">$ <span class="pl-s1">node tools/dep_updaters/update-root-certs.mjs -v</span>
<span class="pl-c1">Fetching Firefox release data from https://nucleus.mozilla.org/rna/all-releases.json.</span>
<span class="pl-c1">Fetching NSS tag from https://hg.mozilla.org/releases/mozilla-release/raw-file/FIREFOX_132_0_RELEASE/security/nss/TAG-INFO.</span>
<span class="pl-c1">Found tag NSS_3_105_RTM.</span>
<span class="pl-c1">Updating to NSS version 3.105</span>
<span class="pl-c1">Fetching https://raw.githubusercontent.com/nss-dev/nss/refs/tags/NSS_3_105_RTM/lib/ckfw/builtins/certdata.txt</span>
<span class="pl-c1">Writing /home/rlau/sandbox/github/node/tools/certdata.txt</span>
<span class="pl-c1">Running tools/mk-ca-bundle.pl</span>
<span class="pl-c1">Parsing: GlobalSign Root CA</span>
<span class="pl-c1">Parsing: Entrust.net Premium 2048 Secure Server CA</span>
<span class="pl-c1">Parsing: Baltimore CyberTrust Root</span>
<span class="pl-c1">Parsing: Entrust Root Certification Authority</span>
<span class="pl-c1">Parsing: Comodo AAA Services root</span>
<span class="pl-c1">Parsing: QuoVadis Root CA 2</span>
<span class="pl-c1">Parsing: QuoVadis Root CA 3</span>
<span class="pl-c1">Parsing: XRamp Global CA Root</span>
<span class="pl-c1">Parsing: Go Daddy Class 2 CA</span>
<span class="pl-c1">Parsing: Starfield Class 2 CA</span>
<span class="pl-c1">Parsing: DigiCert Assured ID Root CA</span>
<span class="pl-c1">Parsing: DigiCert Global Root CA</span>
<span class="pl-c1">Parsing: DigiCert High Assurance EV Root CA</span>
<span class="pl-c1">Parsing: SwissSign Gold CA - G2</span>
<span class="pl-c1">Parsing: SwissSign Silver CA - G2</span>
<span class="pl-c1">Parsing: SecureTrust CA</span>
<span class="pl-c1">Parsing: Secure Global CA</span>
<span class="pl-c1">Parsing: COMODO Certification Authority</span>
<span class="pl-c1">Parsing: COMODO ECC Certification Authority</span>
<span class="pl-c1">Parsing: Certigna</span>
<span class="pl-c1">Parsing: ePKI Root Certification Authority</span>
<span class="pl-c1">Parsing: certSIGN ROOT CA</span>
<span class="pl-c1">Parsing: NetLock Arany (Class Gold) Főtanúsítvány</span>
<span class="pl-c1">Parsing: SecureSign RootCA11</span>
<span class="pl-c1">Parsing: Microsec e-Szigno Root CA 2009</span>
<span class="pl-c1">Parsing: GlobalSign Root CA - R3</span>
<span class="pl-c1">Parsing: Izenpe.com</span>
<span class="pl-c1">Parsing: Go Daddy Root Certificate Authority - G2</span>
<span class="pl-c1">Parsing: Starfield Root Certificate Authority - G2</span>
<span class="pl-c1">Parsing: Starfield Services Root Certificate Authority - G2</span>
<span class="pl-c1">Parsing: AffirmTrust Commercial</span>
<span class="pl-c1">Parsing: AffirmTrust Networking</span>
<span class="pl-c1">Parsing: AffirmTrust Premium</span>
<span class="pl-c1">Parsing: AffirmTrust Premium ECC</span>
<span class="pl-c1">Parsing: Certum Trusted Network CA</span>
<span class="pl-c1">Parsing: TWCA Root Certification Authority</span>
<span class="pl-c1">Parsing: Security Communication RootCA2</span>
<span class="pl-c1">Parsing: Actalis Authentication Root CA</span>
<span class="pl-c1">Parsing: Buypass Class 2 Root CA</span>
<span class="pl-c1">Parsing: Buypass Class 3 Root CA</span>
<span class="pl-c1">Parsing: T-TeleSec GlobalRoot Class 3</span>
<span class="pl-c1">Parsing: D-TRUST Root Class 3 CA 2 2009</span>
<span class="pl-c1">Parsing: D-TRUST Root Class 3 CA 2 EV 2009</span>
<span class="pl-c1">Parsing: CA Disig Root R2</span>
<span class="pl-c1">Parsing: ACCVRAIZ1</span>
<span class="pl-c1">Parsing: TWCA Global Root CA</span>
<span class="pl-c1">Parsing: TeliaSonera Root CA v1</span>
<span class="pl-c1">Parsing: T-TeleSec GlobalRoot Class 2</span>
<span class="pl-c1">Parsing: Atos TrustedRoot 2011</span>
<span class="pl-c1">Parsing: QuoVadis Root CA 1 G3</span>
<span class="pl-c1">Parsing: QuoVadis Root CA 2 G3</span>
<span class="pl-c1">Parsing: QuoVadis Root CA 3 G3</span>
<span class="pl-c1">Parsing: DigiCert Assured ID Root G2</span>
<span class="pl-c1">Parsing: DigiCert Assured ID Root G3</span>
<span class="pl-c1">Parsing: DigiCert Global Root G2</span>
<span class="pl-c1">Parsing: DigiCert Global Root G3</span>
<span class="pl-c1">Parsing: DigiCert Trusted Root G4</span>
<span class="pl-c1">Parsing: COMODO RSA Certification Authority</span>
<span class="pl-c1">Parsing: USERTrust RSA Certification Authority</span>
<span class="pl-c1">Parsing: USERTrust ECC Certification Authority</span>
<span class="pl-c1">Parsing: GlobalSign ECC Root CA - R5</span>
<span class="pl-c1">Parsing: IdenTrust Commercial Root CA 1</span>
<span class="pl-c1">Parsing: IdenTrust Public Sector Root CA 1</span>
<span class="pl-c1">Parsing: Entrust Root Certification Authority - G2</span>
<span class="pl-c1">Parsing: Entrust Root Certification Authority - EC1</span>
<span class="pl-c1">Parsing: CFCA EV ROOT</span>
<span class="pl-c1">Parsing: OISTE WISeKey Global Root GB CA</span>
<span class="pl-c1">Parsing: SZAFIR ROOT CA2</span>
<span class="pl-c1">Parsing: Certum Trusted Network CA 2</span>
<span class="pl-c1">Parsing: Hellenic Academic and Research Institutions RootCA 2015</span>
<span class="pl-c1">Parsing: Hellenic Academic and Research Institutions ECC RootCA 2015</span>
<span class="pl-c1">Parsing: ISRG Root X1</span>
<span class="pl-c1">Parsing: AC RAIZ FNMT-RCM</span>
<span class="pl-c1">Parsing: Amazon Root CA 1</span>
<span class="pl-c1">Parsing: Amazon Root CA 2</span>
<span class="pl-c1">Parsing: Amazon Root CA 3</span>
<span class="pl-c1">Parsing: Amazon Root CA 4</span>
<span class="pl-c1">Parsing: TUBITAK Kamu SM SSL Kok Sertifikasi - Surum 1</span>
<span class="pl-c1">Parsing: GDCA TrustAUTH R5 ROOT</span>
<span class="pl-c1">Parsing: SSL.com Root Certification Authority RSA</span>
<span class="pl-c1">Parsing: SSL.com Root Certification Authority ECC</span>
<span class="pl-c1">Parsing: SSL.com EV Root Certification Authority RSA R2</span>
<span class="pl-c1">Parsing: SSL.com EV Root Certification Authority ECC</span>
<span class="pl-c1">Parsing: GlobalSign Root CA - R6</span>
<span class="pl-c1">Parsing: OISTE WISeKey Global Root GC CA</span>
<span class="pl-c1">Parsing: UCA Global G2 Root</span>
<span class="pl-c1">Parsing: UCA Extended Validation Root</span>
<span class="pl-c1">Parsing: Certigna Root CA</span>
<span class="pl-c1">Parsing: emSign Root CA - G1</span>
<span class="pl-c1">Parsing: emSign ECC Root CA - G3</span>
<span class="pl-c1">Parsing: emSign Root CA - C1</span>
<span class="pl-c1">Parsing: emSign ECC Root CA - C3</span>
<span class="pl-c1">Parsing: Hongkong Post Root CA 3</span>
<span class="pl-c1">Parsing: Entrust Root Certification Authority - G4</span>
<span class="pl-c1">Parsing: Microsoft ECC Root Certificate Authority 2017</span>
<span class="pl-c1">Parsing: Microsoft RSA Root Certificate Authority 2017</span>
<span class="pl-c1">Parsing: e-Szigno Root CA 2017</span>
<span class="pl-c1">Parsing: certSIGN Root CA G2</span>
<span class="pl-c1">Parsing: Trustwave Global Certification Authority</span>
<span class="pl-c1">Parsing: Trustwave Global ECC P256 Certification Authority</span>
<span class="pl-c1">Parsing: Trustwave Global ECC P384 Certification Authority</span>
<span class="pl-c1">Parsing: NAVER Global Root Certification Authority</span>
<span class="pl-c1">Parsing: AC RAIZ FNMT-RCM SERVIDORES SEGUROS</span>
<span class="pl-c1">Parsing: GlobalSign Root R46</span>
<span class="pl-c1">Parsing: GlobalSign Root E46</span>
<span class="pl-c1">Parsing: GLOBALTRUST 2020</span>
<span class="pl-c1">Parsing: ANF Secure Server Root CA</span>
<span class="pl-c1">Parsing: Certum EC-384 CA</span>
<span class="pl-c1">Parsing: Certum Trusted Root CA</span>
<span class="pl-c1">Parsing: TunTrust Root CA</span>
<span class="pl-c1">Parsing: HARICA TLS RSA Root CA 2021</span>
<span class="pl-c1">Parsing: HARICA TLS ECC Root CA 2021</span>
<span class="pl-c1">Parsing: Autoridad de Certificacion Firmaprofesional CIF A62634068</span>
<span class="pl-c1">Parsing: vTrus ECC Root CA</span>
<span class="pl-c1">Parsing: vTrus Root CA</span>
<span class="pl-c1">Parsing: ISRG Root X2</span>
<span class="pl-c1">Parsing: HiPKI Root CA - G1</span>
<span class="pl-c1">Parsing: GlobalSign ECC Root CA - R4</span>
<span class="pl-c1">Parsing: GTS Root R1</span>
<span class="pl-c1">Parsing: GTS Root R2</span>
<span class="pl-c1">Parsing: GTS Root R3</span>
<span class="pl-c1">Parsing: GTS Root R4</span>
<span class="pl-c1">Parsing: Telia Root CA v2</span>
<span class="pl-c1">Parsing: D-TRUST BR Root CA 1 2020</span>
<span class="pl-c1">Parsing: D-TRUST EV Root CA 1 2020</span>
<span class="pl-c1">Parsing: DigiCert TLS ECC P384 Root G5</span>
<span class="pl-c1">Parsing: DigiCert TLS RSA4096 Root G5</span>
<span class="pl-c1">Parsing: Certainly Root R1</span>
<span class="pl-c1">Parsing: Certainly Root E1</span>
<span class="pl-c1">Parsing: Security Communication RootCA3</span>
<span class="pl-c1">Parsing: Security Communication ECC RootCA1</span>
<span class="pl-c1">Parsing: BJCA Global Root CA1</span>
<span class="pl-c1">Parsing: BJCA Global Root CA2</span>
<span class="pl-c1">Parsing: Sectigo Public Server Authentication Root E46</span>
<span class="pl-c1">Parsing: Sectigo Public Server Authentication Root R46</span>
<span class="pl-c1">Parsing: SSL.com TLS RSA Root CA 2022</span>
<span class="pl-c1">Parsing: SSL.com TLS ECC Root CA 2022</span>
<span class="pl-c1">Parsing: Atos TrustedRoot Root CA ECC TLS 2021</span>
<span class="pl-c1">Parsing: Atos TrustedRoot Root CA RSA TLS 2021</span>
<span class="pl-c1">Parsing: TrustAsia Global Root CA G3</span>
<span class="pl-c1">Parsing: TrustAsia Global Root CA G4</span>
<span class="pl-c1">Parsing: CommScope Public Trust ECC Root-01</span>
<span class="pl-c1">Parsing: CommScope Public Trust ECC Root-02</span>
<span class="pl-c1">Parsing: CommScope Public Trust RSA Root-01</span>
<span class="pl-c1">Parsing: CommScope Public Trust RSA Root-02</span>
<span class="pl-c1">Parsing: Telekom Security TLS ECC Root 2020</span>
<span class="pl-c1">Parsing: Telekom Security TLS RSA Root 2023</span>
<span class="pl-c1">Parsing: FIRMAPROFESIONAL CA ROOT-A WEB</span>
<span class="pl-c1">Parsing: TWCA CYBER Root CA</span>
<span class="pl-c1">Parsing: SecureSign Root CA12</span>
<span class="pl-c1">Parsing: SecureSign Root CA14</span>
<span class="pl-c1">Parsing: SecureSign Root CA15</span>
<span class="pl-c1">Done (152 CA certs processed, 25 skipped).</span>


<span class="pl-c1">NEW_VERSION=3.105</span>
<span class="pl-c1">COMMIT_MSG&lt;&lt;c116927d-aa5a-4b1e-b0ba-96d2c33ae849</span>
<span class="pl-c1">crypto: update root certificates to NSS 3.105</span>

<span class="pl-c1">This is the certdata.txt[0] from NSS 3.105.</span>

<span class="pl-c1">This is the version of NSS that shipped in Firefox 132.0 on 2024-10-29.</span>

<span class="pl-c1">[0] https://raw.githubusercontent.com/nss-dev/nss/refs/tags/NSS_3_105_RTM/lib/ckfw/builtins/certdata.txt</span>
<span class="pl-c1">c116927d-aa5a-4b1e-b0ba-96d2c33ae849</span>
$ <span class="pl-s1">git status</span>
<span class="pl-c1">On branch rootcerts</span>
<span class="pl-c1">Your branch is ahead of 'upstream/main' by 2 commits.</span>
<span class="pl-c1">  (use "git push" to publish your local commits)</span>

<span class="pl-c1">nothing to commit, working tree clean</span>
$</pre></div>
<hr>
<p dir="auto">For the release notes,  the notable change is</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="Update root certificates to NSS 3.104

This is the version of NSS that shipped in Firefox 131.0 on 2024-10-01.

Certificates added:
- FIRMAPROFESIONAL CA ROOT-A WEB
- TWCA CYBER Root CA
- SecureSign Root CA12
- SecureSign Root CA14
- SecureSign Root CA15"><pre class="notranslate"><code class="notranslate">Update root certificates to NSS 3.104

This is the version of NSS that shipped in Firefox 131.0 on 2024-10-01.

Certificates added:
- FIRMAPROFESIONAL CA ROOT-A WEB
- TWCA CYBER Root CA
- SecureSign Root CA12
- SecureSign Root CA14
- SecureSign Root CA15
</code></pre></div>]]></content>
        <author>
            <name>richardlau</name>
            <email>richardlau@noreply.github.com</email>
            <uri>https://github.com/richardlau</uri>
        </author>
        <published>2024-11-01T18:25:42.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[test_runner: exclude test files from code coverage by default]]></title>
        <id>https://github.com/nodejs/node/pull/55633</id>
        <link href="https://github.com/nodejs/node/pull/55633"/>
        <updated>2024-12-17T23:28:50.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/702490?u=b9970b3b6bb9837653ec497f63ca2af1e86984ed&v=4" width="64" height="64" alt=""/><br/><p dir="auto">Is not usual to test the code coverage of test files.</p>
<p dir="auto">To include test files in code coverage, they must be explicitly included by using <code class="notranslate">coverageIncludeGlobs</code> or <code class="notranslate">--test-coverage-include</code>.</p>
<p dir="auto">This way, your default code coverage will not include the test files, so you can work out your include/exclude filters based on the first coverage output. I didn't like the idea of suddenly including all the test files just by adding an exclude flag to exclude that_util_file.js that you don't want to test.</p>
<p dir="auto">What could happen is that you could set an include filter just to test one file, and then you notice that the test file is also being tested. Maybe we can add an extra flag <code class="notranslate">--include-test-files</code> or something like that, so the test files are completely invisible to the user until the user wants to explicitly include them. Although I think that this may be too granular and with the <code class="notranslate">--test-coverage-include/exclude</code> parameters is enough.</p>
<p dir="auto"><span class="issue-keyword tooltipped tooltipped-se" aria-label="This pull request closes issue #53508.">Fixes</span>: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2361591788" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/53508" data-hovercard-type="issue" data-hovercard-url="/nodejs/node/issues/53508/hovercard" href="https://github.com/nodejs/node/issues/53508">#53508</a></p>
]]></content>
        <author>
            <name>Llorx</name>
            <email>Llorx@noreply.github.com</email>
            <uri>https://github.com/Llorx</uri>
        </author>
        <published>2024-11-01T11:51:28.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[cli: implement --trace-env and --trace-env-[js|native]-stack]]></title>
        <id>https://github.com/nodejs/node/pull/55604</id>
        <link href="https://github.com/nodejs/node/pull/55604"/>
        <updated>2024-12-19T09:27:54.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4" width="64" height="64" alt=""/><br/><p dir="auto">This implements <code class="notranslate">--trace-env</code>, <code class="notranslate">--trace-env-js-stack</code> and <code class="notranslate">--trace-env-native-stack</code> CLI options that print information about any access to environment variables done in the current Node.js instance to stderr, including:</p>
<ul dir="auto">
<li>The environment variable reads that Node.js does internally.</li>
<li>Writes in the form of <code class="notranslate">process.env.KEY = "SOME VALUE"</code>.</li>
<li>Reads in the form of <code class="notranslate">process.env.KEY</code>.</li>
<li>Definitions in the form of <code class="notranslate">Object.defineProperty(process.env, 'KEY', {...})</code>.</li>
<li>Queries in the form of <code class="notranslate">Object.hasOwn(process.env, 'KEY')</code>,<br>
<code class="notranslate">process.env.hasOwnProperty('KEY')</code> or <code class="notranslate">'KEY' in process.env</code>.</li>
<li>Deletions in the form of <code class="notranslate">delete process.env.KEY</code>.</li>
<li>Enumerations inf the form of <code class="notranslate">...process.env</code> or <code class="notranslate">Object.keys(process.env)</code>.</li>
</ul>
<p dir="auto">Only the names of the environment variables being accessed are printed. The values are not printed. To print the stack trace of the access, use <code class="notranslate">--trace-env-js-stack</code> and/or <code class="notranslate">--trace-env-native-stack</code>.</p>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="$ cat env.js
const foo = process.env.FOO;
process.env.FOO = foo + &quot;foo&quot;;

$ out/Release/node --trace-env env.js
[--trace-env] get environment variable &quot;NODE_ICU_DATA&quot;
[--trace-env] get environment variable &quot;OPENSSL_CONF&quot;
[--trace-env] get environment variable &quot;NODE_EXTRA_CA_CERTS&quot;
[--trace-env] get environment variable &quot;NODE_DEBUG_NATIVE&quot;
[--trace-env] get environment variable &quot;NODE_COMPILE_CACHE&quot;
[--trace-env] get environment variable &quot;NODE_NO_WARNINGS&quot;
[--trace-env] get environment variable &quot;NODE_V8_COVERAGE&quot;
[--trace-env] get environment variable &quot;NODE_DEBUG&quot;
[--trace-env] get environment variable &quot;NODE_CHANNEL_FD&quot;
[--trace-env] get environment variable &quot;NODE_UNIQUE_ID&quot;
[--trace-env] get environment variable &quot;HOME&quot;
[--trace-env] get environment variable &quot;NODE_PATH&quot;
[--trace-env] get environment variable &quot;WATCH_REPORT_DEPENDENCIES&quot;
[--trace-env] get environment variable &quot;FOO&quot;
[--trace-env] set environment variable &quot;FOO&quot;"><pre class="notranslate"><code class="notranslate">$ cat env.js
const foo = process.env.FOO;
process.env.FOO = foo + "foo";

$ out/Release/node --trace-env env.js
[--trace-env] get environment variable "NODE_ICU_DATA"
[--trace-env] get environment variable "OPENSSL_CONF"
[--trace-env] get environment variable "NODE_EXTRA_CA_CERTS"
[--trace-env] get environment variable "NODE_DEBUG_NATIVE"
[--trace-env] get environment variable "NODE_COMPILE_CACHE"
[--trace-env] get environment variable "NODE_NO_WARNINGS"
[--trace-env] get environment variable "NODE_V8_COVERAGE"
[--trace-env] get environment variable "NODE_DEBUG"
[--trace-env] get environment variable "NODE_CHANNEL_FD"
[--trace-env] get environment variable "NODE_UNIQUE_ID"
[--trace-env] get environment variable "HOME"
[--trace-env] get environment variable "NODE_PATH"
[--trace-env] get environment variable "WATCH_REPORT_DEPENDENCIES"
[--trace-env] get environment variable "FOO"
[--trace-env] set environment variable "FOO"
</code></pre></div>
<details>
<summary>See output of `--trace-env-js-stack`</summary>
<div class="snippet-clipboard-content notranslate position-relative overflow-auto" data-snippet-clipboard-copy-content="out/Release/node --trace-env-js-stack env.js
[--trace-env] get environment variable &quot;NODE_ICU_DATA&quot;
[--trace-env] get environment variable &quot;OPENSSL_CONF&quot;
[--trace-env] get environment variable &quot;NODE_EXTRA_CA_CERTS&quot;
[--trace-env] get environment variable &quot;NODE_DEBUG_NATIVE&quot;
[--trace-env] get environment variable &quot;NODE_COMPILE_CACHE&quot;
[--trace-env] get environment variable &quot;NODE_NO_WARNINGS&quot;

----- JavaScript stack trace -----

1: setupWarningHandler (node:internal/process/pre_execution:263:17)
2: prepareExecution (node:internal/process/pre_execution:102:3)
3: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
4: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable &quot;NODE_V8_COVERAGE&quot;

----- JavaScript stack trace -----

1: setupCodeCoverage (node:internal/process/pre_execution:333:19)
2: prepareExecution (node:internal/process/pre_execution:107:3)
3: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
4: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable &quot;NODE_DEBUG&quot;

----- JavaScript stack trace -----

1: setupDebugEnv (node:internal/process/pre_execution:363:68)
2: prepareExecution (node:internal/process/pre_execution:108:3)
3: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
4: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable &quot;NODE_CHANNEL_FD&quot;

----- JavaScript stack trace -----

1: setupChildProcessIpcChannel (node:internal/process/pre_execution:497:19)
2: prepareExecution (node:internal/process/pre_execution:133:5)
3: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
4: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable &quot;NODE_UNIQUE_ID&quot;

----- JavaScript stack trace -----

1: initializeClusterIPC (node:internal/process/pre_execution:514:38)
2: prepareExecution (node:internal/process/pre_execution:137:5)
3: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
4: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable &quot;HOME&quot;

----- JavaScript stack trace -----

1: node:internal/modules/cjs/loader:1782:57
2: initializeCJS (node:internal/modules/cjs/loader:427:12)
3: initializeCJSLoader (node:internal/process/pre_execution:590:3)
4: setupUserModules (node:internal/process/pre_execution:155:3)
5: prepareExecution (node:internal/process/pre_execution:148:5)
6: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
7: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable &quot;NODE_PATH&quot;

----- JavaScript stack trace -----

1: node:internal/modules/cjs/loader:1783:56
2: initializeCJS (node:internal/modules/cjs/loader:427:12)
3: initializeCJSLoader (node:internal/process/pre_execution:590:3)
4: setupUserModules (node:internal/process/pre_execution:155:3)
5: prepareExecution (node:internal/process/pre_execution:148:5)
6: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
7: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable &quot;WATCH_REPORT_DEPENDENCIES&quot;

----- JavaScript stack trace -----

1: node:internal/modules/cjs/loader:161:63
2: node:internal/util:809:15
3: reportModuleToWatchMode (node:internal/modules/cjs/loader:276:7)
4: node:internal/modules/cjs/loader:1106:5
5: traceSync (node:diagnostics_channel:322:14)
6: wrapModuleLoad (node:internal/modules/cjs/loader:218:24)
7: executeUserEntryPoint (node:internal/modules/run_main:170:5)
8: node:internal/main/run_main_module:36:49


[--trace-env] get environment variable &quot;FOO&quot;

----- JavaScript stack trace -----

1: /Users/joyee/projects/node/env.js:1:25
2: node:internal/modules/cjs/loader:1546:14
3: node:internal/modules/cjs/loader:1698:10
4: node:internal/modules/cjs/loader:1303:32
5: node:internal/modules/cjs/loader:1117:12
6: traceSync (node:diagnostics_channel:322:14)
7: wrapModuleLoad (node:internal/modules/cjs/loader:218:24)
8: executeUserEntryPoint (node:internal/modules/run_main:170:5)
9: node:internal/main/run_main_module:36:49


[--trace-env] set environment variable &quot;FOO&quot;

----- JavaScript stack trace -----

1: /Users/joyee/projects/node/env.js:2:17
2: node:internal/modules/cjs/loader:1546:14
3: node:internal/modules/cjs/loader:1698:10
4: node:internal/modules/cjs/loader:1303:32
5: node:internal/modules/cjs/loader:1117:12
6: traceSync (node:diagnostics_channel:322:14)
7: wrapModuleLoad (node:internal/modules/cjs/loader:218:24)
8: executeUserEntryPoint (node:internal/modules/run_main:170:5)
9: node:internal/main/run_main_module:36:49"><pre class="notranslate"><code class="notranslate">out/Release/node --trace-env-js-stack env.js
[--trace-env] get environment variable "NODE_ICU_DATA"
[--trace-env] get environment variable "OPENSSL_CONF"
[--trace-env] get environment variable "NODE_EXTRA_CA_CERTS"
[--trace-env] get environment variable "NODE_DEBUG_NATIVE"
[--trace-env] get environment variable "NODE_COMPILE_CACHE"
[--trace-env] get environment variable "NODE_NO_WARNINGS"

----- JavaScript stack trace -----

1: setupWarningHandler (node:internal/process/pre_execution:263:17)
2: prepareExecution (node:internal/process/pre_execution:102:3)
3: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
4: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable "NODE_V8_COVERAGE"

----- JavaScript stack trace -----

1: setupCodeCoverage (node:internal/process/pre_execution:333:19)
2: prepareExecution (node:internal/process/pre_execution:107:3)
3: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
4: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable "NODE_DEBUG"

----- JavaScript stack trace -----

1: setupDebugEnv (node:internal/process/pre_execution:363:68)
2: prepareExecution (node:internal/process/pre_execution:108:3)
3: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
4: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable "NODE_CHANNEL_FD"

----- JavaScript stack trace -----

1: setupChildProcessIpcChannel (node:internal/process/pre_execution:497:19)
2: prepareExecution (node:internal/process/pre_execution:133:5)
3: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
4: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable "NODE_UNIQUE_ID"

----- JavaScript stack trace -----

1: initializeClusterIPC (node:internal/process/pre_execution:514:38)
2: prepareExecution (node:internal/process/pre_execution:137:5)
3: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
4: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable "HOME"

----- JavaScript stack trace -----

1: node:internal/modules/cjs/loader:1782:57
2: initializeCJS (node:internal/modules/cjs/loader:427:12)
3: initializeCJSLoader (node:internal/process/pre_execution:590:3)
4: setupUserModules (node:internal/process/pre_execution:155:3)
5: prepareExecution (node:internal/process/pre_execution:148:5)
6: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
7: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable "NODE_PATH"

----- JavaScript stack trace -----

1: node:internal/modules/cjs/loader:1783:56
2: initializeCJS (node:internal/modules/cjs/loader:427:12)
3: initializeCJSLoader (node:internal/process/pre_execution:590:3)
4: setupUserModules (node:internal/process/pre_execution:155:3)
5: prepareExecution (node:internal/process/pre_execution:148:5)
6: prepareMainThreadExecution (node:internal/process/pre_execution:47:10)
7: node:internal/main/run_main_module:15:19


[--trace-env] get environment variable "WATCH_REPORT_DEPENDENCIES"

----- JavaScript stack trace -----

1: node:internal/modules/cjs/loader:161:63
2: node:internal/util:809:15
3: reportModuleToWatchMode (node:internal/modules/cjs/loader:276:7)
4: node:internal/modules/cjs/loader:1106:5
5: traceSync (node:diagnostics_channel:322:14)
6: wrapModuleLoad (node:internal/modules/cjs/loader:218:24)
7: executeUserEntryPoint (node:internal/modules/run_main:170:5)
8: node:internal/main/run_main_module:36:49


[--trace-env] get environment variable "FOO"

----- JavaScript stack trace -----

1: /Users/joyee/projects/node/env.js:1:25
2: node:internal/modules/cjs/loader:1546:14
3: node:internal/modules/cjs/loader:1698:10
4: node:internal/modules/cjs/loader:1303:32
5: node:internal/modules/cjs/loader:1117:12
6: traceSync (node:diagnostics_channel:322:14)
7: wrapModuleLoad (node:internal/modules/cjs/loader:218:24)
8: executeUserEntryPoint (node:internal/modules/run_main:170:5)
9: node:internal/main/run_main_module:36:49


[--trace-env] set environment variable "FOO"

----- JavaScript stack trace -----

1: /Users/joyee/projects/node/env.js:2:17
2: node:internal/modules/cjs/loader:1546:14
3: node:internal/modules/cjs/loader:1698:10
4: node:internal/modules/cjs/loader:1303:32
5: node:internal/modules/cjs/loader:1117:12
6: traceSync (node:diagnostics_channel:322:14)
7: wrapModuleLoad (node:internal/modules/cjs/loader:218:24)
8: executeUserEntryPoint (node:internal/modules/run_main:170:5)
9: node:internal/main/run_main_module:36:49
</code></pre></div>
</details>
]]></content>
        <author>
            <name>joyeecheung</name>
            <email>joyeecheung@noreply.github.com</email>
            <uri>https://github.com/joyeecheung</uri>
        </author>
        <published>2024-10-30T15:44:24.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[test_runner: mark mockTimers as stable]]></title>
        <id>https://github.com/nodejs/node/pull/55398</id>
        <link href="https://github.com/nodejs/node/pull/55398"/>
        <updated>2024-11-27T06:38:14.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/8060102?u=de3bfaa57ccc7f15a33b67ea1bd86b76e5cebdda&v=4" width="64" height="64" alt=""/><br/><p dir="auto">The MockTimers feature was introduced back in April 2023 on <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="1689199984" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/47775" data-hovercard-type="pull_request" data-hovercard-url="/nodejs/node/pull/47775/hovercard" href="https://github.com/nodejs/node/pull/47775">#47775</a> and had been receiving several fixes and improvements since then, currently there're no open issues.</p>
]]></content>
        <author>
            <name>ErickWendel</name>
            <email>ErickWendel@noreply.github.com</email>
            <uri>https://github.com/ErickWendel</uri>
        </author>
        <published>2024-10-15T21:17:02.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[buffer: make Buffer work with resizable ArrayBuffer]]></title>
        <id>https://github.com/nodejs/node/pull/55377</id>
        <link href="https://github.com/nodejs/node/pull/55377"/>
        <updated>2024-10-15T17:22:49.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/439929?u=88483145a53c3d594ab68146c1a8bdecc3bcd1d3&v=4" width="64" height="64" alt=""/><br/><p dir="auto">For release notes:</p>
<p dir="auto">When a <code class="notranslate">Buffer</code> is created using a resizable <code class="notranslate">ArrayBuffer</code>, the <code class="notranslate">Buffer</code> length will now correctly change as the underlying <code class="notranslate">ArrayBuffer</code> size is changed.</p>
<div class="highlight highlight-source-js notranslate position-relative overflow-auto" dir="auto" data-snippet-clipboard-copy-content="const ab = new ArrayBuffer(10, { maxByteLength: 20 });
const buffer = Buffer.from(ab);
console.log(buffer.byteLength); 10
ab.resize(15);
console.log(buffer.byteLength); 15
ab.resize(5);
console.log(buffer.byteLength); 5"><pre class="notranslate"><span class="pl-k">const</span> <span class="pl-s1">ab</span> <span class="pl-c1">=</span> <span class="pl-k">new</span> <span class="pl-v">ArrayBuffer</span><span class="pl-kos">(</span><span class="pl-c1">10</span><span class="pl-kos">,</span> <span class="pl-kos">{</span> <span class="pl-c1">maxByteLength</span>: <span class="pl-c1">20</span> <span class="pl-kos">}</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-k">const</span> <span class="pl-s1">buffer</span> <span class="pl-c1">=</span> <span class="pl-v">Buffer</span><span class="pl-kos">.</span><span class="pl-en">from</span><span class="pl-kos">(</span><span class="pl-s1">ab</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">buffer</span><span class="pl-kos">.</span><span class="pl-c1">byteLength</span><span class="pl-kos">)</span><span class="pl-kos">;</span> <span class="pl-c1">10</span>
<span class="pl-s1">ab</span><span class="pl-kos">.</span><span class="pl-en">resize</span><span class="pl-kos">(</span><span class="pl-c1">15</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">buffer</span><span class="pl-kos">.</span><span class="pl-c1">byteLength</span><span class="pl-kos">)</span><span class="pl-kos">;</span> <span class="pl-c1">15</span>
<span class="pl-s1">ab</span><span class="pl-kos">.</span><span class="pl-en">resize</span><span class="pl-kos">(</span><span class="pl-c1">5</span><span class="pl-kos">)</span><span class="pl-kos">;</span>
<span class="pl-smi">console</span><span class="pl-kos">.</span><span class="pl-en">log</span><span class="pl-kos">(</span><span class="pl-s1">buffer</span><span class="pl-kos">.</span><span class="pl-c1">byteLength</span><span class="pl-kos">)</span><span class="pl-kos">;</span> <span class="pl-c1">5</span></pre></div>
<p dir="auto"><span class="issue-keyword tooltipped tooltipped-se" aria-label="This pull request closes issue #52195.">Fixes</span>: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2203951944" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/52195" data-hovercard-type="issue" data-hovercard-url="/nodejs/node/issues/52195/hovercard" href="https://github.com/nodejs/node/issues/52195">#52195</a></p>]]></content>
        <author>
            <name>jasnell</name>
            <email>jasnell@noreply.github.com</email>
            <uri>https://github.com/jasnell</uri>
        </author>
        <published>2024-10-13T17:10:50.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[esm: mark import attributes and JSON module as stable]]></title>
        <id>https://github.com/nodejs/node/pull/55333</id>
        <link href="https://github.com/nodejs/node/pull/55333"/>
        <updated>2025-01-08T18:57:58.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/7000710?u=9529bd132769a1928a5c15808d0a18c525f09762&v=4" width="64" height="64" alt=""/><br/><p dir="auto">The two proposals reached stage 4 yesterday, at the October 2024 meeting. The Node.js implementation already matches exactly the semantics required by the proposals. This PR can/should be backported to 22 and 20 (and 18?).</p>
]]></content>
        <author>
            <name>nicolo-ribaudo</name>
            <email>nicolo-ribaudo@noreply.github.com</email>
            <uri>https://github.com/nicolo-ribaudo</uri>
        </author>
        <published>2024-10-09T12:49:10.000Z</published>
    </entry>
    <entry>
        <title type="html"><![CDATA[module: unflag --experimental-require-module]]></title>
        <id>https://github.com/nodejs/node/pull/55085</id>
        <link href="https://github.com/nodejs/node/pull/55085"/>
        <updated>2025-02-06T00:56:48.000Z</updated>
        <content type="html"><![CDATA[<img src="https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4" width="64" height="64" alt=""/><br/><p dir="auto">This unflags --experimental-require-module so require(esm) can be used without the flag. For now, when require() actually encounters an ESM for the first time in a process, it will still emit an experimental warning. To opt out of the feature, --no-experimental-require-module can be used.</p>
<p dir="auto">There are some tests specifically testing ERR_REQUIRE_ESM. Some of them are repurposed to test --no-experimental-require-module. Some of them are modified to just expect loading require(esm) to work, when it's appropriate.</p>
<p dir="auto">This is expected to go out in 23 and get some testing before being backported to older LTS.</p>
<p dir="auto">See <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2543254926" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/55085" data-hovercard-type="pull_request" data-hovercard-url="/nodejs/node/pull/55085/hovercard?comment_id=2371022961&amp;comment_type=issue_comment" href="https://github.com/nodejs/node/pull/55085#issuecomment-2371022961">#55085 (comment)</a> for a summary of the impact of this on loading the high-impact npm packages.</p>
<p dir="auto">For more background on the motivation of <code class="notranslate">require(esm)</code> see <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2169848882" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/51977" data-hovercard-type="pull_request" data-hovercard-url="/nodejs/node/pull/51977/hovercard" href="https://github.com/nodejs/node/pull/51977">#51977</a> - TL;DR: it helps accelerating ESM adoption in the ecosystem as package authors can start shipping native ESM with less breakage to their CJS users; it also helps frameworks and tools that take plugins to support native ESM in user/plugin code whilst they are still navigating their own migration to ESM.</p>
<p dir="auto">Note to releasers: in the release announcements we should emphasize the implications this has on top-level await is limited to require(). In entry points or modules that are only ever imported, top-level await works fine as before. Only when one tries to use the synchronous require() to evaluate a module that awaits at module loading time (top-level), it obviously would not work, not that it ever worked before require() supports ESM, just that it's now the only significant remaining exception for require(esm).</p>
<p dir="auto">Refs: <a class="issue-link js-issue-link" data-error-text="Failed to load title" data-id="2264522627" data-permission-text="Title is private" data-url="https://github.com/nodejs/node/issues/52697" data-hovercard-type="issue" data-hovercard-url="/nodejs/node/issues/52697/hovercard" href="https://github.com/nodejs/node/issues/52697">#52697</a></p>
]]></content>
        <author>
            <name>joyeecheung</name>
            <email>joyeecheung@noreply.github.com</email>
            <uri>https://github.com/joyeecheung</uri>
        </author>
        <published>2024-09-23T17:35:58.000Z</published>
    </entry>
</feed>