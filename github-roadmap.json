{
    "version": "https://jsonfeed.org/version/1",
    "title": "github/roadmap Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "feed_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "description": "github/roadmap Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Actions now supports OpenID Connect (OIDC) for secure deploy to each cloud, which uses short-lived tokens that are automatically rotated for each deployment.</p>\n<p dir=\"auto\">This feature is currently available only for DotCom and will soon be enabled even for enterprise SKUs (GHES).</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ul dir=\"auto\">\n<li>With the new OpenID Connect (OIDC) support in GitHub Actions, you can author secure cloud deployment workflows without needing any cloud secrets stored in GitHub.</li>\n<li>OpenID token exchange eliminates the need for storing any long-lived cloud secrets in GitHub</li>\n<li>Admins can use the security mechanisms of their cloud provider to ensure Action workflows have the minimal amount of access to cloud resources.</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<ul dir=\"auto\">\n<li>Developers set up OIDC trust on their cloud roles to manage access between their deployment workflows and cloud resources.</li>\n<li>In each deployment, a GitHub Actions workflow can now mint an auto-generated OIDC token. This token has all the metadata needed to get a secure, verifiable, identity for the workflow that is trying to authenticate.</li>\n<li>Cloud login Actions can fetch this token and present it to their respective clouds.</li>\n<li>The cloud provider then validates the claims in the OIDC token against the cloud role definition and provides a cloud short-lived access token that is only valid for a single workflow run, and then automatically expires. Actions within the same Job could however use this access token to connect and deploy to the cloud resources.</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/376",
            "title": "Actions: Secure cloud deployments with Open ID Connect on GHES",
            "date_modified": "2022-01-12T17:53:13.000Z",
            "date_published": "2022-01-12T16:14:09.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/33528647/144440921-548b9123-b089-464f-93e2-84e64f38bea2.gif\"><img src=\"https://user-images.githubusercontent.com/33528647/144440921-548b9123-b089-464f-93e2-84e64f38bea2.gif\" alt=\"Simulation of Tritanopia colorblindness\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><em>(Simulation of Tritanopia color blindness. Colors are approximate as color blindness varies from person to person)</em></p>\n<h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Varying by gender and geography, color blindness can affect on average 5-6% of men and up 0.4% of woman. Roughly 1 in 10,000 people experience Tritanopia color blindness, a condition where a person cannot distinguish between blue and yellow colors. When colorblind users are unable to distinguish between colors in an interface, they are forced to use shape and iconography to interpret meaning. This new theme swaps colors outside of the Tritanopia visible spectrum for alternative colors to make GitHub more inclusive for users with Tritanopia color blindness.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Users with Tritanopia color blindness are able to use github.com with a light and dark theme that uses more colors within their visible spectrum.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">From the <a href=\"https://github.com/settings/appearance\">appearance settings</a> page, a user is able to choose from the light and dark Tritanopia colorblind themes in their preferred theme settings.</p>\n<p dir=\"auto\"><strong>Note:</strong> Themes designed for users with Protanopia &amp; Deuteranopia color blindness are separately available.</p>",
            "url": "https://github.com/github/roadmap/issues/375",
            "title": "Tritanopia Colorblind Theme",
            "date_modified": "2022-01-12T17:53:12.000Z",
            "date_published": "2022-01-12T16:14:06.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Code scanning will post security alerts to the PR’s conversation tab in a new way: a PR review composed of annotations. Users will be able to comment on any individual alert (annotation) to discuss it.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Currently, code scanning alerts are posted as PR checks and are sometimes missed by developers. At the same time, alerts can't be discussed in the PR itself. Tight integration in the conversation tab will address both points.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Code scanning uses <a href=\"https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks\">checks (annotations)</a> to communicate that an analysis is in progress and block the PR when an alert is flagged up. This behavior will remain unchanged.</p>\n<p dir=\"auto\">In addition to these checks, the code scanning annotations will appear on the PR’s conversation tab as a PR review.</p>",
            "url": "https://github.com/github/roadmap/issues/374",
            "title": "Code scanning alerts on the PR’s Conversation tab (GitHub.com)",
            "date_modified": "2022-01-12T17:53:11.000Z",
            "date_published": "2022-01-12T16:14:03.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Prebuilds enable fast codespace creation experience regardless of the size and complexity of the repository by performing all the heavy-lifting tasks required to build your development environment beforehand. Think of a prebuild as a 'ready-to-go' template where your source code, editor extensions, project dependencies, commands, or configurations have already been downloaded, installed, and applied so that you don't have to wait for these tasks to finish in real-time every time you create a new Codespace.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">By using prebuilds, the time to create a new codespace for a project can decrease significantly, going from several minutes in some cases down to seconds.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<ul dir=\"auto\">\n<li>During public preview, repo admins will be able to set up and manage prebuild configurations by going to their repo's settings page.\n<ul dir=\"auto\">\n<li>A successful configuration will automatically kick of a dynamic workflow that will perform all the tasks required to prebuild the codespace. This workflow will run on every commit to the repo to help ensure the prebuild is always up to date.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/30297258/148137934-0701c9f0-7b97-4b3c-a486-1f42279e1383.png\"><img src=\"https://user-images.githubusercontent.com/30297258/148137934-0701c9f0-7b97-4b3c-a486-1f42279e1383.png\" alt=\"image\" style=\"max-width: 100%;\"></a></li>\n<li>Repo admins will also be able to manually trigger, edit and/or delete existing prebuild configurations for repo.</li>\n</ul>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/30297258/148138014-452ef635-8174-4e0c-8ab2-e617c91d0f1a.png\"><img width=\"644\" alt=\"image\" src=\"https://user-images.githubusercontent.com/30297258/148138014-452ef635-8174-4e0c-8ab2-e617c91d0f1a.png\" style=\"max-width: 100%;\"></a>\n</li>\n<li>End users will be able to request codespace creations from prebuild enabled machine types and view logs during creation.<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/30297258/144897385-a248d876-89ba-4712-b9c8-9a607d1c8151.png\"><img src=\"https://user-images.githubusercontent.com/30297258/144897385-a248d876-89ba-4712-b9c8-9a607d1c8151.png\" alt=\"image\" style=\"max-width: 100%;\"></a></li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/373",
            "title": "Codespaces: Prebuilds public preview ",
            "date_modified": "2022-01-12T17:53:10.000Z",
            "date_published": "2022-01-12T16:14:00.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\"><a href=\"https://mermaid-js.github.io/\" rel=\"nofollow\">Mermaid</a> is an incredibly popular Markdown-inspired syntax used to visualize workflows, software architecture, and abstract concepts in documentation. Support for displaying Mermaid diagrams has appeared on GitHub's top list of feature requests <a href=\"https://github.com/github/markup/issues/533\" data-hovercard-type=\"issue\" data-hovercard-url=\"/github/markup/issues/533/hovercard\">since 2015</a>. In its absence, many developers simply added screenshots to their Markdown. Today, we're excited to add native support for Mermaid wherever Markdown is supported (e.g., issues, repositories, discussions, gists).</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">With this feature, GitHub will support Mermaid diagrams within Markdown fields and files.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Just as <a href=\"https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/creating-and-highlighting-code-blocks#syntax-highlighting\">language-specific code blocks</a> can be added to Markdown, you'll be able to add a Mermaid diagram using a code block that specifies <code>mermaid</code> as its language identifier. For example:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```mermaid\ngraph TD;\n    A--&gt;B;\n    A--&gt;C;\n    B--&gt;D;\n    C--&gt;D;\n```\"><pre><code>```mermaid\ngraph TD;\n    A--&gt;B;\n    A--&gt;C;\n    B--&gt;D;\n    C--&gt;D;\n```\n</code></pre></div>\n<p dir=\"auto\">The Markdown code block above uses Mermaid syntax to display this flowchart in the rendered Markdown:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/147986289-f8283c0b-aa5e-4381-bd69-876edeef12d9.png\"><img src=\"https://user-images.githubusercontent.com/1767415/147986289-f8283c0b-aa5e-4381-bd69-876edeef12d9.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a href=\"https://mermaid-js.github.io/mermaid/#/sequenceDiagram?id=sequencenumbers\" rel=\"nofollow\">Another example</a> from the Mermaid website shows how straightforward text can be used to create rich diagrams:</p>\n<div class=\"snippet-clipboard-content position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```mermaid\nsequenceDiagram\n    autonumber\n    Alice-&gt;&gt;John: Hello John, how are you?\n    loop Healthcheck\n        John-&gt;&gt;John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts!\n    John--&gt;&gt;Alice: Great!\n    John-&gt;&gt;Bob: How about you?\n    Bob--&gt;&gt;John: Jolly good!\n```\"><pre><code>```mermaid\nsequenceDiagram\n    autonumber\n    Alice-&gt;&gt;John: Hello John, how are you?\n    loop Healthcheck\n        John-&gt;&gt;John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts!\n    John--&gt;&gt;Alice: Great!\n    John-&gt;&gt;Bob: How about you?\n    Bob--&gt;&gt;John: Jolly good!\n```\n</code></pre></div>\n<p dir=\"auto\">The Markdown code block above would display this sequence diagram in the rendered Markdown:</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/148230142-63d64ec6-8157-4578-a4a8-a63e386b5cb9.png\"><img src=\"https://user-images.githubusercontent.com/1767415/148230142-63d64ec6-8157-4578-a4a8-a63e386b5cb9.png\" height=\"520\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">For more information about Mermaid, visit its <a href=\"https://mermaid-js.github.io/\" rel=\"nofollow\">website</a> or its <a href=\"https://github.com/mermaid-js/mermaid\">open-source repository</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/372",
            "title": "Mermaid diagrams can be displayed within Markdown",
            "date_modified": "2022-01-12T17:53:09.000Z",
            "date_published": "2022-01-12T16:13:57.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Precise code navigation – a convenience <a href=\"https://docs.github.com/en/repositories/working-with-files/using-files/navigating-code-on-github/\">already available for Python</a> – is coming for JavaScript, TypeScript, and Java. When a developer views code on GitHub and clicks on a type name, method, function, or class instance, GitHub will allow navigation to the specific definition of that item. For example, if code calls a method named <code>constant()</code> and multiple classes have a method with that name, precise code navigation will automatically identify and navigate to the correct one that is referenced, as shown here:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/148132001-6def6592-d898-4a5e-ae96-9215350539ea.png\"><img src=\"https://user-images.githubusercontent.com/1767415/148132001-6def6592-d898-4a5e-ae96-9215350539ea.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">This is different than today's search-based navigation, where for these languages a developer might need to choose from multiple definitions with the same name, as shown here:</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/130671189-e6a36f69-4199-4ee0-b985-388854716a43.png\"><img src=\"https://user-images.githubusercontent.com/1767415/130671189-e6a36f69-4199-4ee0-b985-388854716a43.png\" height=\"280\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Even when code contains multiple definitions with similar names, GitHub will support navigating to the specific definition that the code references. The code navigation engine knows the precise definition by indexing the code using <a href=\"https://github.blog/2021-12-09-introducing-stack-graphs/\" rel=\"nofollow\">stack graphs</a>.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">There will be no visual change to how code navigation works today except that for JavaScript, TypeScript, and Java, developers will not be prompted to choose between multiple, similarly named definitions. Code navigation will know precisely which definition is referenced.</p>",
            "url": "https://github.com/github/roadmap/issues/371",
            "title": "Precise code navigation for JavaScript, TypeScript, and Java",
            "date_modified": "2022-01-12T17:53:08.000Z",
            "date_published": "2022-01-12T16:13:54.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Pull Request Merge Queues are already in beta for a select number of customers. With the release, we are making merge queues publicly available to all.</p>\n<p dir=\"auto\">Maintaining a green mainline development branch ensures developers always have a good starting point for bug fixes and new features and because in many workflows, releases are initiated from this branch. When this branch becomes broken, new development and downstream workflows (like release creation, integration testing, deployments, etc) can be disrupted. One of the simplest ways to avoid a broken branch today is by enabling the <code>Require branches to be up-to-date</code> branch protection setting. However, this forces developers to constantly update their pull request branch when another pull request gets merged, which triggers a new round of CI status checks. In a highly active branch, developers may be forced to repeat this process multiple times before they can merge, delaying the delivery of fixes and features.</p>\n<p dir=\"auto\">Pull Request Merge Queue ensures pull requests are merged efficiently, without requiring developers to update their pull request whenever another change lands, all while ensuring the branch remains green.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Improve developer productivity and increase the velocity of changes landing in your busiest branches.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">A developer can add their pull request to the merge queue when:</p>\n<ol dir=\"auto\">\n<li>Merge queue is enabled on a branch via a new branch protection setting, and...</li>\n<li>All merge requirements have been met (e.g. including required reviewer and status check)</li>\n</ol>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/2503052/123290447-48da6580-d4df-11eb-978e-5bda6978ccca.png\"><img src=\"https://user-images.githubusercontent.com/2503052/123290447-48da6580-d4df-11eb-978e-5bda6978ccca.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Once in the queue, the pull request's changes will be:</p>\n<ol dir=\"auto\">\n<li>validated to ensure it passes all required checks before merging</li>\n<li>merged with the latest version of the branch along with any pull requests ahead of it in the queue</li>\n</ol>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/2503052/123289999-ea14ec00-d4de-11eb-8f85-be6326ad08eb.png\"><img src=\"https://user-images.githubusercontent.com/2503052/123289999-ea14ec00-d4de-11eb-8f85-be6326ad08eb.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
            "url": "https://github.com/github/roadmap/issues/370",
            "title": "Pull Request Merge Queue",
            "date_modified": "2022-01-12T17:53:07.000Z",
            "date_published": "2022-01-12T16:13:51.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\"><a href=\"http://openid.net/connect/\" rel=\"nofollow\">OpenID Connect</a> (OpenIDC) is a protocol that sits on top of the <a href=\"https://oauth.net/2/\" rel=\"nofollow\">OAuth 2.0</a> framework. While OAuth 2.0 provides authorization via an access token containing scopes, OpenID Connect provides authentication by providing an ID token which contains a new set of scopes and claims specifically for identity. Using the ID token, OpenID Connect allows separate systems to interoperate and share authentication state and user profile information.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">The introduction of OpenID Connect as an authentication protocol lays the foundation for a number of customer benefits that we intend to bring to GHEC EMUs and GHAE. Those include full support for <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/\" rel=\"nofollow\">Conditional Access Policy (CAP)</a> governance via Azure AD, enabling customers to centralise CAP policies such as location restrictions to their identity provider. It is also a bridge to GitHub supporting Azure <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals\" rel=\"nofollow\">Service Principals</a>.</p>\n<p dir=\"auto\">In this initiative, we will enable OpenIDC on GHEC EMUs. Later, we will bring this capability to GHES and GHAE.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Enterprise administrators will be able to configure OpenID Connect via the enterprise account settings and Azure AD portal.</p>",
            "url": "https://github.com/github/roadmap/issues/362",
            "title": "Azure AD OpenID Connect Authentication for GHEC EMUs (Beta)",
            "date_modified": "2022-01-12T17:53:06.000Z",
            "date_published": "2021-12-15T16:30:30.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Many GitHub Enterprise customers leverages <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/overview\" rel=\"nofollow\">Azure AD Conditional Access</a> to ensure access to their Enterprise SaaS applications are compliant with corporate policies. These access policies include but are not limited to trusted networks, trusted devices, time of day, and geography. Today, AAD already enforces Conditional Access upon web Single Sign-On (SSO) where the user's authentication context is evaluated before completing the SSO exchange. However, GitHub has its own set of credentials that are not managed by AAD: PATs and SSH. These credentials are not subject to CAP evaluation and pose a security gap for our enterprise customers.</p>\n<p dir=\"auto\">Using AAD Conditional Access, PATs and SSH Key usage are subject to Conditional Access policies defined by the customer's AAD tenant.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">This initiative enables customers to centralise their Conditional Access Policy management into their Identity Provider, so that they do not need to manage such policies separately in GitHub. This will both simplify policy management, and greatly extend the scope of policies that can be applied to a GitHub Enterprise - providing them with new security controls out of the box.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">To begin, enterprise customers will first need to configure a GHEC EMU Enterprise utilizing <a href=\"https://github.com/github/roadmap-internal/issues/414\" data-hovercard-type=\"issue\" data-hovercard-url=\"/github/roadmap-internal/issues/414/hovercard\">Azure AD OpenID Connect (OIDC)</a>. Once configuration has completed, AAD admins can setup <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/concept-conditional-access-policy-common\" rel=\"nofollow\">Conditional Access policies</a> in their tenant.</p>",
            "url": "https://github.com/github/roadmap/issues/361",
            "title": "Azure AD (AAD) Conditional Access Support for GHEC EMUs (Beta)",
            "date_modified": "2022-01-12T17:53:05.000Z",
            "date_published": "2021-12-15T16:30:27.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Many large GitHub Enterprise customers use <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals\" rel=\"nofollow\">Service Principals</a> to serve their automation needs in a centralised, auditable and secure fashion. Service Principals support the full identity and credential lifecycle for automation scenarios.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">In this initiative, we will enable support for Azure AD Service Principles for GHEC EMUs. We will later bring this capability to GHAE and GHES.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">To begin, enterprise customers will first need to configure a GHEC EMU Enterprise utilizing <a href=\"https://github.com/github/roadmap-internal/issues/414\" data-hovercard-type=\"issue\" data-hovercard-url=\"/github/roadmap-internal/issues/414/hovercard\">Azure AD OpenID Connect (OIDC)</a>.  Next, an Azure AD admin will create the application and service principal objects in the application's AAD tenant.  Finally, an organization owner will register the Service Principal on one or more organizations within their GHEC EMU Enterprise.</p>",
            "url": "https://github.com/github/roadmap/issues/360",
            "title": "Azure AD (AAD) Service Principal Support for GHEC EMUs (Beta)",
            "date_modified": "2022-01-12T17:53:04.000Z",
            "date_published": "2021-12-15T16:30:24.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">On August 11th, we launched V1 of the pricing calculator page that supports the cost estimates for Codespaces, Actions, Packages, GHAS.</p>\n<p dir=\"auto\">We are planning to add the following new features to the pricing calculator and continue improving the experience to calculate the cost for GitHub products.</p>\n<p dir=\"auto\"><strong>Q2 Milestones</strong></p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> FAQ</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Free Trial CTA</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Hints</li>\n</ul>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Enable GitHub Sales and Customers to calculate cost and budgets for Consumables.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<h3 dir=\"auto\">Free Trial CTA</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/47511016/143916006-4d677e2e-1a8e-4dcf-807e-3df16287cd37.png\"><img src=\"https://user-images.githubusercontent.com/47511016/143916006-4d677e2e-1a8e-4dcf-807e-3df16287cd37.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">FAQs</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/47511016/143915851-4cc593ae-7ce2-4990-ac54-950e25c9abf2.png\"><img src=\"https://user-images.githubusercontent.com/47511016/143915851-4cc593ae-7ce2-4990-ac54-950e25c9abf2.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Hints</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/47511016/143916081-89c4482a-eee2-4042-a664-6cd2e3573a7d.png\"><img src=\"https://user-images.githubusercontent.com/47511016/143916081-89c4482a-eee2-4042-a664-6cd2e3573a7d.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>",
            "url": "https://github.com/github/roadmap/issues/359",
            "title": "Pricing Calculator V2",
            "date_modified": "2022-01-12T17:53:03.000Z",
            "date_published": "2021-12-15T16:30:14.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">To better support monorepo development in Codespaces, we're adding support for users to select from multiple devcontainer configurations present in a repo, as well as specify a non-root folder as their default workspace.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Allow developers to create codespaces built to their specific scenario needs versus relying on a general configuration for the entire repo by enabling:</p>\n<ol dir=\"auto\">\n<li>Teams will be able to add multiple, distinct devcontainer configurations to the repo 1. Developers will be able to select a devcontainer definition for their codespace</li>\n<li>Developers can specify a non-root folder as the default workspace</li>\n</ol>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">If a repository has more than one devcontainer configuration present in the repository, customers will be asked to select which configuration they'd like to use from the list of the available options found in the repository. For a repo with no definitions, we will use the default kitchensink image and for repositories with a singular definition at the root of the repo, we will continue with the current behavior of using that definition.</p>\n<p dir=\"auto\">Additionally, users can leverage a new property in the devcontainer.json (name TBD) to specify the non-root directory they'd like to open by default when they create their codespace. When this property is specified, the codespace will open the indicated sub-directory. If this property isn't used, we continue to use the default behavior of opening the root of the repository.</p>",
            "url": "https://github.com/github/roadmap/issues/358",
            "title": "Codespaces: Support for multiple devcontainer definitions and non-root workspace",
            "date_modified": "2022-01-12T17:53:02.000Z",
            "date_published": "2021-12-15T16:30:01.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/33528647/135456151-7d12909b-5848-4e66-a0d3-3b656be9718a.gif\"><img src=\"https://user-images.githubusercontent.com/33528647/135456151-7d12909b-5848-4e66-a0d3-3b656be9718a.gif\" alt=\"colorblind theme preview\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Varying by gender and geography, color blindness could affect up to 8% of the world's population, with a majority impacted by the red/green color spectrum. As red and green have become ubiquitous indicators for status (open vs. closed, pass vs. failed) as well as for communicating warning or destructive action states, colorblind users are forced to use shape and iconography to interpret meaning from UI. This new theme swaps colors like red and green across GitHub.com for orange and blue to make GitHub more inclusive for users with Protanopia &amp; Deuteranopia color blindness.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Users with Protanopia &amp; Deuteranopia color blindness are able to use github.com with a light and dark theme that uses more colors within their visible spectrum.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">From the <a href=\"https://github.com/settings/appearance\">appearance settings</a> page, a user is able to choose from the light and dark Protanopia &amp; Deuteranopia colorblind themes in their preferred theme settings.</p>",
            "url": "https://github.com/github/roadmap/issues/357",
            "title": "Protanopia & Deuteranopia Colorblind Themes GA",
            "date_modified": "2022-01-12T17:53:01.000Z",
            "date_published": "2021-12-15T16:29:56.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Currently, users who need multiple repos for development must use complex workarounds to get the right level of permissions and scopes they need to be work productively within their main project repository.</p>\n<p dir=\"auto\">Soon, customers will be able to specify finer grained permissions &amp; scopes that a codespace needs as part of their configuration setup.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Rather than forcing users to navigate Codespace defaults, options, and custom PATs to get the right set of permissions and scopes to leverage other repositories their main project needs, users will soon be able to specify the exact set of permissions and scopes they need as part of the devcontainer.json.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">We allow users to customize codespace permissions in devcontainer.json via a codespaces.repositories property:<br>\n<a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/3174849/148598242-2a6e7441-7ce4-40a8-8ecb-a3ba1aba6db3.png\"><img src=\"https://user-images.githubusercontent.com/3174849/148598242-2a6e7441-7ce4-40a8-8ecb-a3ba1aba6db3.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">On create, we look to see if the user has the appropriate permissions to create the codespace. For example, if the devcontainer requires read access to a specific repo that the user does not have access to, creation will fail as the resulting codespace will not have the complete set of required repositories needed to successfully run the project.</p>\n<p dir=\"auto\">Additionally, on create and start we will check whether the user has previously accepted the current set or a superset of the current permissions for the repository. If they have then create/start continues. If not, they are sent through an acceptance flow similar to the GitHub App authorization flow, showing the user the repositories and scopes to be used within the codespace.</p>",
            "url": "https://github.com/github/roadmap/issues/356",
            "title": "Codespaces: Improved multi-repository support",
            "date_modified": "2022-01-12T17:53:00.000Z",
            "date_published": "2021-12-15T16:29:53.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/33528647/138329062-c54f0651-d4cd-4f29-83a0-a1786660a33a.gif\"><img src=\"https://user-images.githubusercontent.com/33528647/138329062-c54f0651-d4cd-4f29-83a0-a1786660a33a.gif\" alt=\"demo of navigating between organizations and using the theme switcher command with the command palette\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">The Command Palette is a new GitHub surface designed to improve how users navigate around GitHub and execute time saving commands. Jump to your organizations and repositories quickly, and search within them for pull requests, issues, projects, files, and more. Execute commands to optimize your workflows, all without lifting your hands from the keyboard.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">The command palette gives new users and super fans alike a new way to cut down on the time necessary to navigate GitHub and execute commands for common workflows.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Open the command palette using one of the following keyboard shortcuts:</p>\n<ul dir=\"auto\">\n<li>Windows and Linux: <kbd>Ctl</kbd><kbd>k</kbd> or <kbd>Ctl</kbd><kbd>alt</kbd><kbd>k</kbd></li>\n<li>Mac: <kbd>⌘</kbd><kbd>k</kbd> or <kbd>⌘</kbd><kbd>option</kbd><kbd>k</kbd></li>\n</ul>\n<p dir=\"auto\">Use modes to find specific types of resources:</p>\n<ul dir=\"auto\">\n<li><kbd>#</kbd> Search for issues, pull requests, discussions, and projects</li>\n<li><kbd>!</kbd> Search for projects</li>\n<li><kbd>@</kbd> Search for users, organizations, and repositories</li>\n<li><kbd>/</kbd> Search for files within a repository scope</li>\n</ul>\n<p dir=\"auto\">For more information, review <a href=\"https://docs.github.com/en/get-started/using-github/github-command-palette\">command palette documentation</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/355",
            "title": "Command Palette",
            "date_modified": "2022-01-12T17:52:59.000Z",
            "date_published": "2021-12-15T16:29:50.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Enterprise Ownership has been built in layers over the years from repos to orgs to enterprise accounts. It can be difficult for administrators across companies to govern all of these entities together.</p>\n<p dir=\"auto\">To address this, we are increasing visibility of enterprise and org ownership between the enterprise account and its daughter organizations.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Organization members can easily discover who their enterprise admin is, and contact them.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Organization members, primarily Organization Owners, will be able to see a complete list of enterprise admins and will have a prompt to view this list when certain workflows prompt to <code>contact your enterprise administrator</code>.</p>\n<p dir=\"auto\">There will be two primary ways the enterprise admin visibility will be enabled at the org layer:</p>\n<ul dir=\"auto\">\n<li>Navigate to the <code>People</code> tab within the organization and select the <code>Enterprise Administrators</code> view in the permissions menu</li>\n<li>Whenever an org owner or user might be prompted with <code>Contact your Enterprise Administrator</code>, there will be hyperlinked text, such as <code>Who are my enterprise administrators?</code> to redirect users to view who their enterprise admins are.</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/354",
            "title": "Make Enterprise Admins Visible at the Organization Level",
            "date_modified": "2022-01-12T17:52:58.000Z",
            "date_published": "2021-12-15T16:29:47.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Enterprise Ownership has been built in layers over the years from repos to orgs to enterprise accounts. It can be difficult for administrators across companies to govern all of these entities together.</p>\n<p dir=\"auto\">To address this, and as the follow-up to #526, we will enable enterprise admins to assume the organization owner role in organizations owned by their enterprise account.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Enterprise Admins can assume ownership of an org to audit and apply policies and security controls, and ensure that no organizations are left in an unowned state.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Enterprise Admins will be able to navigate to the organization view within the Enterprise Account and select an option on the organization card to <code>Become Organization Owner</code>.</p>",
            "url": "https://github.com/github/roadmap/issues/353",
            "title": "Enterprise administrators can assume Organization ownership",
            "date_modified": "2022-01-12T17:52:57.000Z",
            "date_published": "2021-12-15T16:29:44.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">With the recent beta release of <a href=\"https://github.blog/changelog/2021-10-27-enterprise-organizations-can-now-create-custom-repository-roles/\" rel=\"nofollow\">custom roles</a>, administrators want to craft roles which include either read or write access to Dependabot alerts.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\"><em>No response</em></p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Dependabot alerts and secret scanning alerts share an existing permissions implementation. We will deprecate this function and move to using custom roles. This will better align these security features with the broader story for role based access control across the product.</p>",
            "url": "https://github.com/github/roadmap/issues/352",
            "title": "Fine grained permissions for Dependabot alerts",
            "date_modified": "2022-01-12T17:52:56.000Z",
            "date_published": "2021-12-15T16:29:41.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Users of GitHub Mobile will be able to use the iOS and android apps as a type of two-factor authentication (2FA) when signing into their GitHub.com account.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">2FA is an extra layer of security that helps protect not only our user's accounts but also the repositories they have access to.   We want to encourage more users to enable 2FA, by making it easier to enable 2FA and approve 2FA requests via adding GitHub Mobile as a 2FA option.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">GitHub Mobile users can enable 2FA in the app after updating to a supported version and logging in. Push notifications will be sent to all applicable devices. The push notification will have the options of \"approve\" and \"deny\" and will be subject to expiration. Approval will require an additional verification where the user will input the numbers that match a number shown to the user on login on GitHub.com. A payload provided by the server will be signed by the mobile device (using a private key) and the signed payload will be verified on the server before accepting the approval or denial. Users will be able to opt in or out of using the GitHub Mobile option in their user account settings.</p>",
            "url": "https://github.com/github/roadmap/issues/351",
            "title": "GitHub Mobile as a Two Factor Authentication option",
            "date_modified": "2022-01-12T17:52:55.000Z",
            "date_published": "2021-12-15T16:29:38.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">As a continuation from recent investments around programmatic access security (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"916273520\" data-permission-text=\"Title is private\" data-url=\"https://github.com/github/roadmap/issues/203\" data-hovercard-type=\"issue\" data-hovercard-url=\"/github/roadmap/issues/203/hovercard\" href=\"https://github.com/github/roadmap/issues/203\">#203</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"852477720\" data-permission-text=\"Title is private\" data-url=\"https://github.com/github/roadmap/issues/184\" data-hovercard-type=\"issue\" data-hovercard-url=\"/github/roadmap/issues/184/hovercard\" href=\"https://github.com/github/roadmap/issues/184\">#184</a>), service tokens will provide organizations with autonomous, programmatic, secure access over the API to resources they own, including repositories, packages, members, Codespaces, Projects, and more.</p>\n<p dir=\"auto\">By using the same fine-grained permissions model that powers GitHub Apps, service tokens let you mint a short-lived credential with just the right level of access needed to get the job done.</p>\n<p dir=\"auto\">Being decoupled from identity, service tokens can be minted, used, and destroyed with no dependency on a user account.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Organizations need a way to securely access their resources programmatically, e.g. for automation purposes, large-scale configuration of their organization, policy compliance, and onboarding of new users.</p>\n<p dir=\"auto\">Currently many organizations create dedicated “machine users” to achieve this, which is an administrative burden to both setup and maintain.</p>\n<p dir=\"auto\">Service tokens will remove this friction, creating a paved path for autonomous, programmatic, secure access to organization resources.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">The workflow for the creation of an organization's service token will resemble the <a href=\"https://docs.github.com/en/get-started/quickstart/github-glossary#server-to-server-request\">\"server-to-server\"</a> token creation workflow of GitHub Apps, which involves <a href=\"https://docs.github.com/en/rest/reference/apps#create-an-installation-access-token-for-an-app\">a REST API</a> and is itself an implementation of <a href=\"https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-client-creds-grant-flow\" rel=\"nofollow\">the OAuth 2.0 client credentials flow</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/350",
            "title": "Service Tokens",
            "date_modified": "2022-01-12T17:52:54.000Z",
            "date_published": "2021-12-15T16:29:35.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        }
    ]
}