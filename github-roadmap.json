{
    "version": "https://jsonfeed.org/version/1",
    "title": "github/roadmap Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "feed_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "description": "github/roadmap Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">We are providing users with the ability to perform bulk-edits to their board items. This includes updated keyboard shortcuts to navigate through their board and make adjustments to the board items within and between a column, as well as support for multi-select drag and drop to update multiple items at once.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Supporting multi-select drag and drop will allow users to quickly make adjustment to their items when planning out and updating their work, such as moving multiple items from <code class=\"notranslate\">In progress</code> to <code class=\"notranslate\">Done</code> in a single action. Providing keyboard shortcuts to navigate the board and update items will make it easy to quickly change where an item ranks within a column, as well moving it to a different column.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Select multiple board items to drag and drop them from one column to another, or utilize keyboard shortcuts to move an item within a column or to a different column.</p>",
            "url": "https://github.com/github/roadmap/issues/762",
            "title": "Projects: Bulk edit items in board layout",
            "date_modified": "2023-04-11T18:02:32.000Z",
            "date_published": "2023-04-11T18:02:05.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">We are updating the Projects header by surfacing project view configurations directly from the view, rather than within the view configuration dropdown menu. This includes options such as sorting, grouping, and visible fields. This will allow users to easily set up and configure their project views by making them more discoverable, accessible, and easy to use.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">We want to make it easy for users to set up and configure their project, as well as knowing how an existing project is set up. Updating the Projects header to include more customizations directly from the view will make these less confusing and less hidden.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">When a user creates a new project or updates an existing project, they will be able to explore and use the view-level customizations from a more visible and discoverable location, so they can select and configure options such as their <code class=\"notranslate\">sort</code> field, <code class=\"notranslate\">group</code> field, or visible <code class=\"notranslate\">fields</code> to display on the view. When creating a new project view, a user will also be able to select the layout type directly.</p>",
            "url": "https://github.com/github/roadmap/issues/761",
            "title": "Projects: Updated Projects header",
            "date_modified": "2023-04-11T18:02:29.000Z",
            "date_published": "2023-04-11T18:02:02.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16281246/214384373-b99a25ef-bfd2-4ae8-b0f6-3803c96822f5.png\"><img src=\"https://user-images.githubusercontent.com/16281246/214384373-b99a25ef-bfd2-4ae8-b0f6-3803c96822f5.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Users will now have the ability to navigate, explore and work with a hierarchy of Issues on GitHub!</p>\n<h2 dir=\"auto\">Feature Highlights:</h2>\n<ul dir=\"auto\">\n<li>Tasklists are powered by a unique Markdown formatting and can easily be added to Issue Templates or created via the API</li>\n<li>Create multi-level hierarchies of Issues from the Issues page or GitHub Projects</li>\n<li>See relevant labels, assignees, and child issues in tasklists</li>\n<li>Explore the hierarchy using breadcrumbs in the Projects side-panel</li>\n<li>Keep track of Issue tasklist completion with the new \"Tracks\" and \"Tracked by\" columns in Projects</li>\n<li>Quickly edit Issue meta-data with in-line editing capabilities</li>\n</ul>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Managing software projects at scale can be challenging without Issue hierarchies. Customers want the ability to create large batches of work (sometimes called Epics) and break those batches down into smaller more manageable tasks; all while tracking progress in a single GitHub Issue or from GitHub Projects.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">See docs: <a href=\"https://docs.github.com/en/issues/tracking-your-work-with-issues/about-tasklists\">https://docs.github.com/en/issues/tracking-your-work-with-issues/about-tasklists</a></p>\n<p dir=\"auto\">In short, custom Markdown formatting with custom rendering, will allow users to create structured Hierarchies of Issues.</p>\n<hr>\n<p dir=\"auto\">If you'd like to gain early access, sign up for the Private Beta here: <a href=\"https://github.com/features/issues/signup\">https://github.com/features/issues/signup</a></p>",
            "url": "https://github.com/github/roadmap/issues/760",
            "title": "[Public Beta] Issue Hierarchy powered by Tasklist",
            "date_modified": "2023-04-10T21:40:30.000Z",
            "date_published": "2023-04-10T21:39:58.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Code scanning default setup will now also analyze the repository's default branch following a pre-configured schedule (like <a href=\"https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule\">GitHub Actions' <code class=\"notranslate\">on: schedule</code> trigger</a>).</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Analyzing the default branch on schedule ensures that a repository's code is scanned and protected even when it is not actively contributed to. This means that repositories will automatically benefit from updates to the CodeQL analysis, even when there are no code changes. This brings the CodeQL default setup configuration in line with the CodeQL starter workflow.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Code scanning default setup sets up CodeQL on a repository without committing a workflow file. This now also analyzes the default branch on weekly schedule. This brings the CodeQL default setup configuration in line with the CodeQL starter workflow.</p>",
            "url": "https://github.com/github/roadmap/issues/759",
            "title": "Code scanning default setup scans `on:schedule`",
            "date_modified": "2023-04-10T22:10:07.000Z",
            "date_published": "2023-04-10T21:39:51.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Users can optionally select the <code class=\"notranslate\">security-extended</code> query suite for analyzing their code code through the code scanning default setup configuration.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Allow repositories to increase query suite coverage in their default setup analysis.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users can manually choose to analyze the <code class=\"notranslate\">security-extended</code> query suite in the code scanning default setup configuration. This query suite will be in addition to the default query suite. <code class=\"notranslate\">security-extended</code> query suite will not be analyzed unless explicitly included in the configuration settings by the user. It will also be possible to change the query suite selection after initial setup.</p>",
            "url": "https://github.com/github/roadmap/issues/758",
            "title": "Code scanning default setup makes it possible to use `security-extended` CodeQL query suite",
            "date_modified": "2023-04-10T22:10:20.000Z",
            "date_published": "2023-04-10T21:39:48.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Most of the GHES customers are set up in HA mode, and many of them (especially larger customers) have geo replication and multiple HA replicas in their configuration. However, we have seen many issues with setup / configure / teardown / failover with multiple replicas. For example: GHES HA failover not working when the primary is unavailable. This impacts the customer experience and deteriorates the perceived reliability of the system.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">The efforts we have planned this quarter will make HA configuration scripts much more reliable, we will improve error handling, and handle failover scenarios more gracefully.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<ul dir=\"auto\">\n<li>Improve connection checks and reliability of <code class=\"notranslate\">ghe-repl-*</code> commands</li>\n<li>Better error handling for offline replicas</li>\n<li>Reliable teardown if primary or any of the replicas are not accessible</li>\n<li>Prevent <code class=\"notranslate\">ghe-config-apply</code> from running if replica is not fully setup</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/757",
            "title": "GHES HA Offering Improvements",
            "date_modified": "2023-04-11T18:02:27.000Z",
            "date_published": "2023-04-10T21:37:37.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">In an effort to make it easier for customers to administer GHES and to minimize unintended mis-configurations, we will support a Cluster HA offering. This will enable a Hot/Hot configuration for stateless services and Hot/Warm cluster topology for stateful services/infrastructure.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Our Cluster HA solution will enable customers with the ability to scale horizontally and more efficiently manage traffic. We choose to be vigilant in meeting the evolving needs and expectations of our customers as their data and organizations grow on GitHub.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<ul dir=\"auto\">\n<li>Make use of secondary cluster hardware to serve traffic</li>\n<li>Fix cluster replication related bugs</li>\n<li>Cluster HA active/passive for stateful nodes only</li>\n<li>Cluster HA active/active (read-only)</li>\n<li>robust tests for Cluster HA</li>\n<li>Improved monitoring and observability</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/756",
            "title": "GHES  Cluster High Availability",
            "date_modified": "2023-04-11T18:02:26.000Z",
            "date_published": "2023-04-10T21:37:34.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Actions currently supports <a href=\"https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts#downloading-or-deleting-artifacts\">Artifacts</a> that enable sharing data between jobs in a workflow and store data once that workflow has completed. We are now enhancing artifacts to support decoupling build and deployment workflows and to trigger on-demand deployments from those artifacts.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Previously, we supported only the downloading of artifacts that were uploaded in the same workflow run using the <code class=\"notranslate\">download-artifact</code> action.</p>\n<p dir=\"auto\">These new improvements around Artifacts will now enable teams who want to decouple their CI &amp; CD workflows: build many times but deploy only a specific built artifact version. They could refer-to/download the artifacts that were created as part of a previous run of the same workflow or a different workflow run to trigger a new deployment workflow run.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Developers and DevOps managers can now use the new artifact triggers to orchestrate their on-demand deployments and releases by chaining their build &amp; deployment workflows for specific artifact sources and versions. They can also use the new \"artifact views\" to:</p>\n<ul dir=\"auto\">\n<li>View the full history of artifacts generated in a repository or</li>\n<li>Apply filters across workflows to trace each artifact version back to the specific build run that produced it or</li>\n<li>Understand which of the artifact versions is actually deployed to a specific deployment environment.</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/755",
            "title": "Actions: Artifact-based Deployments",
            "date_modified": "2023-04-11T18:02:25.000Z",
            "date_published": "2023-04-10T21:37:31.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">We have seen GitHub Enterprise Server customers encounter problems with backups and restores due to issues with the way the host that is running <a href=\"https://github.com/github/backup-utils\">backup-utils</a> is set up. We want to update the backup and restore tools so that customers can identify and fix these issues before continuing with the backup or restore operation.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Before running a backup or restore using <code class=\"notranslate\">backup-utils</code> customers understand whether the host they are running <code class=\"notranslate\">backup-utils</code> on meets our software version and disk space requirements.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">We have updated <code class=\"notranslate\">ghe-host-check</code> to output additional information about whether the backup host satisfies the software version and disk space requirements:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6233292/223197039-87dfacb8-6abe-42b9-a25e-670bec3bf5e7.png\"><img src=\"https://user-images.githubusercontent.com/6233292/223197039-87dfacb8-6abe-42b9-a25e-670bec3bf5e7.png\" alt=\"Image\" style=\"max-width: 100%;\"></a></p>",
            "url": "https://github.com/github/roadmap/issues/754",
            "title": "Backup-utils: Add preflight checks",
            "date_modified": "2023-04-11T18:02:24.000Z",
            "date_published": "2023-04-10T21:37:28.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub apps will be able to call APIs on the enterprise object, by being installed on an enterprise and granted new, fine-grained permissions that control access to the Enterprise. This allows administrators to deprecate the use of PATs (classic) and OAuth apps to manage their enterprises.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">GitHub apps need to be able to operate at the Enterprise layer in order to best automate enterprise operations like managing settings, provisioning users, and reading the audit log. This update helps remove one of the last reasons developers and administrators are forced to use OAuth apps instead of the more secure and manageable GitHub app platform.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">App developers will be able to specify Enterprises as a resource target, similar to how organizations and users are selected today. New fine-grained permissions (such as <code class=\"notranslate\">enterprise_audit_log:read</code>) will be created, which administrators can then grant to apps installed on their enterprise.</p>",
            "url": "https://github.com/github/roadmap/issues/753",
            "title": "Enterprise access for GitHub apps",
            "date_modified": "2023-04-11T18:02:23.000Z",
            "date_published": "2023-04-10T21:37:25.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Secret scanning currently scans commit content for all supported patterns. We're extending the breadth of our scans for Advanced Security customers to cover pull requests and discussions, plus all related comments.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">While most secret leaks occur in code content, a portion do also leak in other content types, including pull requests and discussions. We're expanding the scope of our scans for more exhaustive coverage to better protect our users across GitHub.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Advanced Security customers will be able to view detections found in private and public repositories for these content types within the secret scanning UI and REST API.</p>",
            "url": "https://github.com/github/roadmap/issues/735",
            "title": "Secret scanning detects secrets leaked in pull requests and discussions",
            "date_modified": "2023-04-10T20:34:32.000Z",
            "date_published": "2023-04-10T20:32:40.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Secret scanning scans high-confidence tokens (those with a low false positive rate) and blocks a remote push if secrets are detected, thereby flagging secrets before exposure. Last quarter, w<a href=\"https://github.com/github/roadmap/issues/496\" data-hovercard-type=\"issue\" data-hovercard-url=\"/github/roadmap/issues/496/hovercard\">e expanded push protection to custom patterns defined at the repository and organization levels</a>. Now, we're also supporting push protection for any custom pattern defined at the enterprise level.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Advanced Security customers can enable push protection for our set of highly-identifiable, built-in patterns. While these patterns provide preventative support for customers, organizations want to also protect their developers from leaking their own, specific patterns. Push protection support for enterprise level custom patterns will fill this coverage need (repository and organization levels already supported).</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Advanced Security customers will be able to enable push protection for their enterprise-level custom patterns from the UI.</p>",
            "url": "https://github.com/github/roadmap/issues/734",
            "title": "Secret scanning: Support push protection for enterprise level custom patterns",
            "date_modified": "2023-04-10T20:34:31.000Z",
            "date_published": "2023-04-10T20:32:37.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">The UI for a secret scanning alert will surface metadata about any leaked GitHub token.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Metadata on tokens can help users decide whether or not they should revoke a detected token or when. Certain metadata, like token owner, can also aid quicker remediation action.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">When a user navigates to their alert for a detected GitHub token, they will see metadata about the token in that alert view.</p>",
            "url": "https://github.com/github/roadmap/issues/733",
            "title": "Secret scanning: Surface GitHub token metadata in alert view",
            "date_modified": "2023-04-10T20:34:31.000Z",
            "date_published": "2023-04-10T20:32:34.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Code scanning will allow users to filter alerts by file path, in order for individual developers and security teams to be able to focus on the part of the code they know (and care about) most.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">The code scanning file path filter will help users to sort and manage alerts efficiently by focusing on a specific part of the code related to the project. It will also enable users who work on big repositories (like monorepos) to review all alerts specific to the part of the code they are responsible for.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users will be able to filter alerts by file path on the code scanning page on the 'Security' tab at the repository level. Filtering will work based on file path and extension, which means it will work for all code scanning tools, including the CodeQL engine.</p>",
            "url": "https://github.com/github/roadmap/issues/732",
            "title": "Code scanning: Filter alerts by file path",
            "date_modified": "2023-04-10T20:34:30.000Z",
            "date_published": "2023-04-10T20:32:32.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Today on GHES, Dependabot alerts can only be enabled or disabled at the enterprise-level.</p>\n<p dir=\"auto\">This release adds support to GHES 3.9 and later versions, so that enterprise customers can:</p>\n<ul dir=\"auto\">\n<li>\"Enable\" or \"disable\" for a single repository</li>\n<li>\"Enable all\" or \"disable all\" for a single organization</li>\n<li>\"Enable all\" or \"disable all\" for the enterprise</li>\n<li>\"Enabling incoming\" repositories at the organization or enterprise level.</li>\n<li>Still opt-in to Dependabot alerts (approving outbound calls) via GitHub Connect</li>\n</ul>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">You can now enable Dependabot alerts at a more granular level.</p>",
            "url": "https://github.com/github/roadmap/issues/731",
            "title": "GHES 3.9: Dependabot alerts can be enabled at the repository, organization, and enterprise levels",
            "date_modified": "2023-04-10T20:34:29.000Z",
            "date_published": "2023-04-10T20:32:28.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">In order to provide users with a consistent sorting experience across all layouts in Projects, the ability to sort board views by field values will be supported. This will allow users to further customize and tailor their views by reordering their items in a way that is most helpful to them.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Supporting the ability to sort work items on a project will allow users to automatically order their items, removing the need to manually reorder work items in board columns and lessening confusion about default sorting order.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users will be able to specify the field they would like to sort their project items by from the view configuration menu, alongside other project customizations.</p>",
            "url": "https://github.com/github/roadmap/issues/730",
            "title": "Projects: Sorting on board layout",
            "date_modified": "2023-04-10T20:34:29.000Z",
            "date_published": "2023-04-10T20:32:25.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Users will be able to create a Roadmap view to visualize issues and their relationships across a timespan and track a body of work towards a deadline.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Providing users with a Roadmap layout will allow them to plan and track their work over time and towards a deadline. It gives users a visual component to understand the timing and progress of their initiatives and communicate with stakeholders.</p>\n<p dir=\"auto\">In addition to the table and board layout types, a roadmap layout will provide users with a visual at-a-glance view of their work items.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">When creating a new project or project view, a user will be able to select a Roadmap layout alongside the table and board layouts. This will populate their work items along a time-based axis, driven by date or iteration fields within the project. They can customize their roadmap view by grouping, sorting, and filtering their work items, as well as selecting a zoom level depending on the granularity they would like to see.</p>\n<p dir=\"auto\">More details can be found in the <a href=\"https://docs.github.com/en/issues/planning-and-tracking-with-projects/customizing-views-in-your-project/customizing-the-roadmap-layout\">documentation</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/729",
            "title": "Projects: Roadmap Layout [GA] ",
            "date_modified": "2023-04-10T20:34:28.000Z",
            "date_published": "2023-04-10T20:32:22.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Manual review of <a href=\"https://github.blog/2022-10-18-introducing-fine-grained-personal-access-tokens-for-github/\" rel=\"nofollow\">fine-grained PATs</a> that have access to an organization doesn't scale well, so we're adding APIs to manage these approvals. These APIs will allow a GitHub app to view pending token requests, accept or deny them, and also review and revoke existing fine-grained PATs for an organization.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Organization administrators have the strongest understanding of their security posture and requirements around the use of PATs.  With access to the full lifecycle of fine-grained PATs, administrators can create exactly the rules-based automation they need, with integration into other sources of data (such as group membership, project lifetimes, and directory data).</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">A GitHub app with a new <code class=\"notranslate\">tokens:write</code> permission will be able to register for a webhook event, signalling that a new fine-grained PAT has been created or approved. The app can then review that token and use its business logic to decide if the token should be approved or not.</p>\n<p dir=\"auto\">Apps will also be able to review existing fine-grained PATs, in case that business logic changes and all previous tokens need to be re-evaluated or audited. Using this new API, apps will be able to revoke those existing tokens, attaching a message to the user explaining why this occurred.</p>",
            "url": "https://github.com/github/roadmap/issues/728",
            "title": "Organization APIs to manage fine-grained PATs",
            "date_modified": "2023-04-10T20:34:28.000Z",
            "date_published": "2023-04-10T20:32:19.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Developers that use temporary private forks to privately fix their draft security advisories cannot currently take advantage of their test automation in GitHub Actions. We will add support for GitHub Actions in temporary private forks for draft security advisories so developers can run test automation.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Private forks are currently used to fix security issues behind closed doors.</p>\n<p dir=\"auto\">However, if you can't test your code before merging the fix, you could be introducing new bugs as an accidental byproduct. This leads to project maintainers releasing a fix, realizing it has bugs, and then releasing a fix for the fix.</p>\n<p dir=\"auto\">Allowing GitHub Actions to run on private forks will help developers resolve security vulnerabilities faster and safer.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Developers who open a temporary private fork to fix a security issue will be able to use most GitHub Actions workflows in that private fork as normal. However, because these repositories often have untrusted external collaborators, workflows will be unable to use organization secrets.</p>",
            "url": "https://github.com/github/roadmap/issues/727",
            "title": "GitHub Security Advisory private forks support Actions",
            "date_modified": "2023-04-10T20:34:27.000Z",
            "date_published": "2023-04-10T20:32:16.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Developers can export their dependency graph as a Software Bill of Materials (SBOM), a formal, machine-readable inventory of their dependencies and associated information (versions, licenses, etc).</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">SBOMs are required for companies that provide software to the US federal government per <a href=\"https://www.gsa.gov/technology/technology-products-services/it-security/executive-order-14028-improving-the-nations-cybersecurity\" rel=\"nofollow\">Executive Order 14028</a>. SBOMs also make auditing easier and helps companies comply with their organisation's regulatory and legal requirements.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Developers will be able to visit their repository's dependency graph page and export the current state of their dependency graph as a JSON file using an industry standard format like <a href=\"https://spdx.dev/\" rel=\"nofollow\">SPDX</a>. Developers will also be able to retrieve the SBOM from their repository using an API.</p>",
            "url": "https://github.com/github/roadmap/issues/726",
            "title": "Dependency graph produces SBOMs",
            "date_modified": "2023-04-10T20:34:26.000Z",
            "date_published": "2023-04-10T20:32:13.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        }
    ]
}