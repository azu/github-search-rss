{
    "version": "https://jsonfeed.org/version/1",
    "title": "github/roadmap Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "feed_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "description": "github/roadmap Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">DevOps teams can now reduce the complexity, and cost of hosting their own GitHub Actions runners, thanks to GitHub's support for auto-scaling self-hosted runners. GitHub has announced that github.com and GitHub Enterprise customers can now make <em>better</em> use of auto-scaling self-hosted Actions runners for containerized workflows, supported by GitHub.</p>\n<p dir=\"auto\">Using auto-scaling self-hosted runners eliminate fixed overheads of traditional self-hosted runners, reducing the total cost of ownership for teams. They are infinitely scalable within the context of your infrastructure capacity.<br>\nNow they are deeply integrated with GitHub to better scale when you need them. And thanks to GitHub support, they are enterprise ready with SLA’s to keep everyone online and working efficiently.  All this is now accessible in GitHub’s UI, giving you a first class experience for managing all your runners wherever they are hosted.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">GitHub provides support for and a first-class experience to create, manage and audit your self-hosted autoscaling runners.</p>\n<p dir=\"auto\">Today customers who add an autoscaling runner get no feedback as the size/queue or other pertinent information to understand the health and scale of what their autoscaling runner is doing. The setup is also painful, sitting outside the GitHub UI with multiple paths, some of which are harder than others.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Customers will be able to use the GitHub UI to get the learn and get the tools they need to deploy a self hosted autoscaling runner. This will be reflected back in their GUI giving them the information they need to manage these queues and understand where their bottlenecks are.</p>",
            "url": "https://github.com/github/roadmap/issues/555",
            "title": "Actions: Self-hosted runner auto-scaling support for Kubernetes",
            "date_modified": "2022-08-17T18:02:16.000Z",
            "date_published": "2022-08-17T17:59:20.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><strong>Summary</strong><br>\nThis enhances GitHub Packages support for <a href=\"https://www.npmjs.com/\" rel=\"nofollow\">npm</a> by allowing granular permissions for individual packages and easier sharing within the organization.</p>\n<p dir=\"auto\"><strong>Intended Outcome</strong><br>\nWith the <a href=\"https://github.blog/2021-06-21-github-packages-container-registry-generally-available/\" rel=\"nofollow\">introduction of GitHub Container Registry</a>, users are able to store and share container images close to their source code on GitHub, including advanced capabilities such as fine-grained access control and easy sharing of packages across the organization. The same functionality will now been leveraged for the npm registry!</p>\n<p dir=\"auto\">npm packages can be published to the Package Registry (<a href=\"https://github.com/orgs/github/teams/engineering/posts/npm.pkg.github.com\">npm.pkg.github.com</a>), and retrieved whenever they need to be used as a dependency in a project. Going forward, users are enabled to</p>\n<ul dir=\"auto\">\n<li>publish packages on organization level, in addition to repository level</li>\n<li>have fine-grained access control over their npm packages, decoupled from the repository permissions</li>\n<li>have internal visibility settings for npm packages, in addition to private and public</li>\n<li>give permissions to packages independently for Actions and Codespaces</li>\n<li>increase performance and maintain more package versions than earlier</li>\n</ul>\n<p dir=\"auto\"><strong>How will it work?</strong><br>\nPackages are published to the organization and permissions and visibility are managed on the package itself.</p>",
            "url": "https://github.com/github/roadmap/issues/554",
            "title": "Packages: npm - granular permissions and easy organization sharing",
            "date_modified": "2022-08-17T18:02:15.000Z",
            "date_published": "2022-08-17T17:59:05.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">It is very common to browse a repository's folders and files to find and understand code. While doing so, GitHub's web interface displays a single folder's contents. Every click into a different folder can lose context and it can be difficult to get back to where one started. This release will improve the experience by adding a tree view for browsing the folders and files.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Using a tree view for browsing a repository's folders and files will preserve context, make it easier to return to previous views, and increase the speed of switching between views.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">The image below shows an early, non-final view from an engineer's development environment. Clicking on a folder or file in the tree view on the left will display its contents on the right without changing the state of the tree view.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/179034123-e74f17e5-7dae-4e67-80b8-674827709456.png\"><img src=\"https://user-images.githubusercontent.com/1767415/179034123-e74f17e5-7dae-4e67-80b8-674827709456.png\" alt=\"An image of a tree of folders and files that can be used to browse a repository's contents\" style=\"max-width: 100%;\"></a></p>",
            "url": "https://github.com/github/roadmap/issues/553",
            "title": "Users can browse repositories more efficiently using a tree of folders and files",
            "date_modified": "2022-08-17T17:47:45.000Z",
            "date_published": "2022-08-17T17:46:04.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Comments added to a pull request from the <strong>Conversation</strong> tab can be replied to, and the comment and its replies live together in the timeline. This avoids the need to use \"Quote reply\" to respond to a general pull request comment, which simply copied the text of the earlier comment and the comments could easily be separated from each other in the timeline (making it difficult for users to follow the conversation).</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/2503052/180472540-cb163f6e-3367-4a0e-9d85-c39228577d3a.png\"><img src=\"https://user-images.githubusercontent.com/2503052/180472540-cb163f6e-3367-4a0e-9d85-c39228577d3a.png\" alt=\"Image\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ol dir=\"auto\">\n<li>Easier for users to follow and participate in conversations since the comment and all replies live together</li>\n<li>Improve code quality by ensuring conversations are discoverable and optionally required to be resolved prior to merging</li>\n</ol>\n<h3 dir=\"auto\">How will it work?</h3>\n<ol dir=\"auto\">\n<li>User A posts a comment to a pull request from the <strong>Conversation</strong> tab</li>\n<li>Other activity happens on the pull request resulting in new items on the timeline</li>\n<li>User B replies to the earlier comment and this reply appears directly below the original comment</li>\n</ol>",
            "url": "https://github.com/github/roadmap/issues/552",
            "title": "Reply to comments on a pull request",
            "date_modified": "2022-08-17T17:44:46.000Z",
            "date_published": "2022-08-17T17:43:53.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Codespaces removes the constraint of owning a powerful machine, and reduces the complexity of installation and configuration steps for software, so that developers of all levels of experience can quickly and easily contribute to any code base managed in GitHub.</p>\n<p dir=\"auto\">In 2021 GitHub released Codespaces to Enterprise and Teams GitHub plan subscribers, and simultaneously maintained a beta program for Individuals (Free and Pro plans).</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">We want all developers to have the most rewarding and delightful experience when contributing to any code that resides in GitHub by making it possible for them to have a tailored environment configured to optimize the inner-loop development experience. By making everyone able to participate in passion projects and open source, we want to inspire those devs to bring Codespaces into their professional contexts.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">This release will make Codespaces available to all users with monthly free usage (entitlements) for Free and Pro plans similar to Actions.</p>",
            "url": "https://github.com/github/roadmap/issues/551",
            "title": "Codespaces for Individuals with entitlements",
            "date_modified": "2022-08-17T17:44:45.000Z",
            "date_published": "2022-08-17T17:43:50.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Disclosure of IP addresses in the audit log will allow customers more robust security investigations and threat detection and also better equip customers to meet compliance requirements.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Audit and compliance objectives as well as security concerns are increasing in importance to enterprise customers. We want enterprise administrators to have access to the data they need for the job they need to do, whether that be a compliance matter, short term security investigation or longer-term threat analysis and prevention.  By providing IP addresses in the audit log, customers can better meet their compliance and security needs.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">We will provide the actor's IP address for the following audit log events:</p>\n<ul dir=\"auto\">\n<li>all organization-related events</li>\n<li>all events pertaining to organization-owned projects and other assets where the actor is a member of the organization.</li>\n<li>all events pertaining to organization-owned private and internal repos where the actor is a member of the organization.</li>\n</ul>\n<p dir=\"auto\">IP address disclosure will be an opt-in feature.</p>",
            "url": "https://github.com/github/roadmap/issues/550",
            "title": "IP address disclosure in audit log events in GHEC - General Availability",
            "date_modified": "2022-08-17T17:44:43.000Z",
            "date_published": "2022-08-17T17:43:45.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\"><a href=\"https://docs.github.com/en/enterprise-cloud@latest/admin/identity-and-access-management/using-enterprise-managed-users-for-iam/about-enterprise-managed-users\">Enterprise Managed Users</a> provides an enterprise with an isolated set of organizations and repositories, that are not visible unless you're a member of the enterprise.  They support only <code class=\"notranslate\">internal</code> and <code class=\"notranslate\">private</code> repositories, and users must sign in from the linked IdP in order to access them.</p>\n<p dir=\"auto\">This improvement introduces a new user role, <code class=\"notranslate\">guest</code>, alongside the existing member and admin roles.  The role is set by the IdP at provisioning time, and limits these users to seeing repositories they are added to only. They can not see <code class=\"notranslate\">internal</code> repositories by default.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Companies can safely inner-source their code using the <code class=\"notranslate\">internal</code> access level, while also allowing guests into their environment to work on select parts of the codebase.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users provisioned to an EMU enterprise as \"Guests\" will have access only to orgs and repos they are explicitly added to.  They will not automatically receive access to <code class=\"notranslate\">internal</code> repositories just by being a member of the parent org.</p>\n<p dir=\"auto\">Users will still need to sign in from the linked IdP in order to access the enterprise, in order to keep access control at the IdP.  Provisioning rules can be set up to automatically apply the Guest role to guests in the tenant, pivoting off of the user type stored in the IdP.</p>",
            "url": "https://github.com/github/roadmap/issues/549",
            "title": "Enterprise Managed Users: Guest role users cannot see internal repositories",
            "date_modified": "2022-08-17T17:42:26.000Z",
            "date_published": "2022-08-17T17:41:39.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Advanced Security customers can enable secret scanning and push protection at the Enterprise level</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Allow users to easily enable secret scanning across their entire enterprise</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Like at the organization level, users can choose to enable secret scanning and push protection through the UI in their enterprise's settings page.</p>",
            "url": "https://github.com/github/roadmap/issues/548",
            "title": "Secret scanning: Enable at the Enterprise level",
            "date_modified": "2022-08-17T17:42:25.000Z",
            "date_published": "2022-08-17T17:41:36.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Users will have the option to revoke GitHub tokens found by secret scanning with 1 click through the secret's UI alert view.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">We want to enable GHAS customers to efficiently remediate detections of leaked GitHub tokens surfaced by secret scanning.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">After taking any initial remediation steps on a detected GitHub token, users can click a <code class=\"notranslate\">Revoke secret</code> button that will authorize GitHub to revoke the detected secret.</p>\n<p align=\"center\" dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/81782111/173931499-a09e35ee-a87f-4dfa-87e3-5b38812e643a.png\"><img width=\"602\" alt=\"Screen Shot 2022-06-15 at 2 17 27 PM\" src=\"https://user-images.githubusercontent.com/81782111/173931499-a09e35ee-a87f-4dfa-87e3-5b38812e643a.png\" style=\"max-width: 100%;\"></a>\n</p>",
            "url": "https://github.com/github/roadmap/issues/547",
            "title": "Secret scanning: 1-click revocation for GitHub tokens",
            "date_modified": "2022-08-17T18:49:38.000Z",
            "date_published": "2022-08-17T17:41:33.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Dependabot Alerts will now show more context through an alert's history, with timelines in the UI page for an alert. For example, alerts will show when and by who they were dismissed or reopened.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Admins and security teams can better understand the history of an alert over time.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">When an alert changes state, the event history will be added to a UI-based timeline in the alert's details page.</p>",
            "url": "https://github.com/github/roadmap/issues/546",
            "title": "Dependabot alerts: historical timeline for alerts",
            "date_modified": "2022-08-17T17:42:23.000Z",
            "date_published": "2022-08-17T17:41:30.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Similarly to <a href=\"https://github.blog/changelog/2022-06-01-users-can-now-add-a-comment-when-dismissing-code-scanning-alerts/\" rel=\"nofollow\">code scanning</a>, with this change you will be able to add an optional comment when dismissing a Dependabot alert. Dismissal comments are recorded in the alert timeline.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">You can record the context of an alert closure, which security teams can view when auditing resolved alerts.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">When dismissing a Dependabot alert, you will be able to add a comment.</p>",
            "url": "https://github.com/github/roadmap/issues/545",
            "title": "Dependabot alerts: optional comment with dismissal",
            "date_modified": "2022-08-17T17:42:22.000Z",
            "date_published": "2022-08-17T17:41:27.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">For audit log events using a personal access token (PAT) or OAuth application for authentication, the audit log will display the authentication methods, as well as the last 8 characters of the token used for authentication. In doing so, customers will be able to query actions a  token has been used to perform.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Compromised PATs and OAuth Tokens have the potential to provide threat actors with access to private data. After learning of a token compromise, we know that administrators and security professionals want to understand the actions taken using the corrupt token. To support Enterprise customers to complete these investigations, we will enhance the audit log data by logging identifiable and queryable PAT and OAuth data in the audit log for events using PAT and OAuth for authentication.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">The audit log will display the authentication methods, as well as the last 8 chars of the token for authentication, for audit log events using a PAT or OAuth application for authentication.</p>",
            "url": "https://github.com/github/roadmap/issues/544",
            "title": "Displaying PAT and OAuth authentication data for audit log events [Private Beta]",
            "date_modified": "2022-08-17T17:42:20.000Z",
            "date_published": "2022-08-17T17:41:24.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Advanced Security customers can include a link for their developers to navigate to when GitHub detects secrets in their commits and blocks them from pushing.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Admins can provide additional support to developers via a link to internal tools.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">When enabling push protection on an organization, admins can add an optional link to present to developers when they're blocked from pushing code.</p>",
            "url": "https://github.com/github/roadmap/issues/543",
            "title": "Secret scanning: Add a custom help link to push protection blocks",
            "date_modified": "2022-08-17T17:42:19.000Z",
            "date_published": "2022-08-17T17:41:21.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Advanced Security customers will be able to dry-run their custom secret scanning patterns across all repositories in their enterprise or organization before publishing.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Enable admins to test their patterns across all their repositories before publishing and creating alerts.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">When creating a custom pattern at the enterprise or organization level, admins will click \"Save and dry run\" then select the option to dry-run the pattern across all repositories.</p>",
            "url": "https://github.com/github/roadmap/issues/542",
            "title": "Secret scanning: Dry-runs for custom patterns (GA)",
            "date_modified": "2022-08-17T17:42:18.000Z",
            "date_published": "2022-08-17T17:41:18.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\"><a href=\"https://mermaid-js.github.io/\" rel=\"nofollow\">Mermaid</a> is a popular Markdown-inspired syntax used to create visualizations of workflows, software architecture, and abstract concepts in documentation. Built-in support for Mermaid was <a href=\"https://github.blog/2022-02-14-include-diagrams-markdown-files-mermaid/\" rel=\"nofollow\">released</a> to GitHub Cloud in February, 2022. Next, Mermaid support will be added to GitHub Enterprise Server.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">With this feature, GitHub Enterprise Server will support Mermaid diagrams within Markdown fields.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Just as <a href=\"https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/creating-and-highlighting-code-blocks#syntax-highlighting\">language-specific code blocks</a> can be added to Markdown, you'll be able to add a Mermaid diagram using a code block that specifies <code class=\"notranslate\">mermaid</code> as its language identifier. For example:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```mermaid\ngraph TD;\n    A--&gt;B;\n    A--&gt;C;\n    B--&gt;D;\n    C--&gt;D;\n```\"><pre class=\"notranslate\"><code>```mermaid\ngraph TD;\n    A--&gt;B;\n    A--&gt;C;\n    B--&gt;D;\n    C--&gt;D;\n```\n</code></pre></div>\n<p dir=\"auto\">The Markdown code block above uses Mermaid syntax to display this flowchart in the rendered Markdown:</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/178852211-1ecbaba4-46e6-4045-b26c-e26d9f76b039.png\"><img width=\"106\" alt=\"Animage of a flowchart diagram created with Mermaid syntax within Markdown\" src=\"https://user-images.githubusercontent.com/1767415/178852211-1ecbaba4-46e6-4045-b26c-e26d9f76b039.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><a href=\"https://mermaid-js.github.io/mermaid/#/sequenceDiagram?id=sequencenumbers\" rel=\"nofollow\">Another example</a> from the Mermaid website shows how straightforward text can be used to create rich diagrams:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```mermaid\nsequenceDiagram\n    autonumber\n    Alice-&gt;&gt;John: Hello John, how are you?\n    loop Healthcheck\n        John-&gt;&gt;John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts!\n    John--&gt;&gt;Alice: Great!\n    John-&gt;&gt;Bob: How about you?\n    Bob--&gt;&gt;John: Jolly good!\n```\"><pre class=\"notranslate\"><code>```mermaid\nsequenceDiagram\n    autonumber\n    Alice-&gt;&gt;John: Hello John, how are you?\n    loop Healthcheck\n        John-&gt;&gt;John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts!\n    John--&gt;&gt;Alice: Great!\n    John-&gt;&gt;Bob: How about you?\n    Bob--&gt;&gt;John: Jolly good!\n```\n</code></pre></div>\n<p dir=\"auto\">The Markdown code block above would display this sequence diagram in the rendered Markdown:</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/178852037-a5e7762c-9544-4a3a-a97f-92fda30ea825.png\"><img width=\"549\" alt=\"An image of a sequence diagram created with Mermaid syntax within Markdown\" src=\"https://user-images.githubusercontent.com/1767415/178852037-a5e7762c-9544-4a3a-a97f-92fda30ea825.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">For more information, visit <a href=\"https://docs.github.com/en/get-started/writing-on-github/working-with-advanced-formatting/creating-diagrams\">Creating diagrams</a> in the GitHub Cloud documentation. Learn more about Mermaid at the <a href=\"https://mermaid-js.github.io/\" rel=\"nofollow\">Mermaid website</a> or its <a href=\"https://github.com/mermaid-js/mermaid\">open-source repository</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/541",
            "title": "Mermaid diagrams can be displayed within Markdown",
            "date_modified": "2022-08-17T17:42:16.000Z",
            "date_published": "2022-08-17T17:41:15.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Mathematical expressions are key to information sharing in academia and among engineers, scientists, economists, statisticians, and others. Support for displaying mathematical expressions was <a href=\"https://github.blog/changelog/2022-05-19-render-mathematical-expressions-in-markdown/\" rel=\"nofollow\">released</a> to GitHub Cloud in May, 2022. Next, math support will be added to GitHub Enterprise Server.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">This feature will add native support for using LaTeX-style syntax to render mathematical expressions where Markdown is supported in issues, repositories, and discussions. Expressions can be added inline in Markdown or as separate expression blocks.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<h4 dir=\"auto\">Writing expressions as blocks</h4>\n<p dir=\"auto\">To add mathematical expressions as a multiline block displayed separately from surrounding text, start a new line and delimit the expression with the <code class=\"notranslate\">```math</code> <a href=\"https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/creating-and-highlighting-code-blocks#syntax-highlighting\">code block syntax</a>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"```math\n**The Cauchy-Schwarz Inequality**\n$$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$\n```\"><pre class=\"notranslate\"><code>```math\n**The Cauchy-Schwarz Inequality**\n$$\\left( \\sum_{k=1}^n a_k b_k \\right)^2 \\leq \\left( \\sum_{k=1}^n a_k^2 \\right) \\left( \\sum_{k=1}^n b_k^2 \\right)$$\n```\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/7219923/165633956-cfe6be6d-66ec-451a-8afd-be3546f4d0a1.png\"><img src=\"https://user-images.githubusercontent.com/7219923/165633956-cfe6be6d-66ec-451a-8afd-be3546f4d0a1.png\" alt=\"An image of an independent block of math Markdown being displayed\" style=\"max-width: 100%;\"></a></p>\n<h4 dir=\"auto\">Writing inline expressions</h4>\n<p dir=\"auto\">To include a mathematical expression inline with your text, delimit the expression with a dollar symbol <code class=\"notranslate\">$</code>.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"This sentence uses `$` delimiters to show math inline: $\\sqrt{3x-1}+(1+x)^2$\"><pre class=\"notranslate\"><code>This sentence uses `$` delimiters to show math inline: $\\sqrt{3x-1}+(1+x)^2$\n</code></pre></div>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/7219923/165633994-a1f2cee5-71cb-4303-bbd9-1df1604d7a01.png\"><img src=\"https://user-images.githubusercontent.com/7219923/165633994-a1f2cee5-71cb-4303-bbd9-1df1604d7a01.png\" alt=\"An image of inline math Markdown being displayed\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">GitHub Enterprise Server's math rendering capability will use MathJax; an open source, JavaScript-based display engine. MathJax supports a wide range of LaTeX macros and a number of useful accessibility extensions. For more information, see the <a href=\"http://docs.mathjax.org/en/latest/input/tex/index.html#tex-and-latex-support\" rel=\"nofollow\">MathJax documentation</a> and the <a href=\"https://mathjax.github.io/MathJax-a11y/docs/#reader-guide\" rel=\"nofollow\">MathJax Accessibility Extensions documentation</a>.</p>\n<p dir=\"auto\">For more information about authoring content with advanced formatting, see <a href=\"https://docs.github.com/get-started/writing-on-github/working-with-advanced-formatting\">Working with advanced formatting</a> in the GitHub documentation.</p>",
            "url": "https://github.com/github/roadmap/issues/540",
            "title": "Mathematical expressions can be displayed within Markdown",
            "date_modified": "2022-08-17T18:04:52.000Z",
            "date_published": "2022-08-17T17:38:50.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\"><a href=\"https://github.blog/2022-06-15-prebuilding-codespaces-is-generally-available/\" rel=\"nofollow\">Prebuilds enable fast codespace creation experience for large and/or complex projects</a> by performing all the heavy-lifting tasks required to build your development environment beforehand. Think of a prebuild as a 'ready-to-go' template where your source code, editor extensions, project dependencies, commands, or configurations have already been downloaded, installed, and applied so that you don't have to wait for these tasks to finish in real-time every time you create a new Codespace.</p>\n<p dir=\"auto\">With this work-item, teams will be able to take advantage of prebuilt codespaces for monorepos as well as for multi-repo/microservices where projects may require accessing additional resources (ex. repo, packages) while configuring a codespace.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ul dir=\"auto\">\n<li>For multi-repo or projects that require accessing additional resources to build a development environment, repository administrators can specify those permissions in the dev container configuration and the prebuild workflow will identify and respect those while creating a prebuild.</li>\n<li>For monorepos, repository administrators can select a specific devcontainer configuration to be prebuilt based on a subset of the project that requires faster environment creation.</li>\n</ul>\n<h2 dir=\"auto\">How will it work?</h2>\n<h3 dir=\"auto\">Multi-repo projects</h3>\n<ul dir=\"auto\">\n<li>For multi-repo projects, <a href=\"https://docs.github.com/en/codespaces/managing-your-codespaces/managing-repository-access-for-your-codespaces#setting-additional-repository-permissions\">required permissions can be specified in the dev container configuration for that repository</a>.</li>\n</ul>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/30297258/179618967-cab50406-133a-4d4a-b169-4ca1abd93032.png\"><img width=\"400\" alt=\"image\" src=\"https://user-images.githubusercontent.com/30297258/179618967-cab50406-133a-4d4a-b169-4ca1abd93032.png\" style=\"max-width: 100%;\"></a></p>\n<ul dir=\"auto\">\n<li>During prebuild configuration creation, if the selected devcontainer configuration for a branch includes requested permissions, the admin will be prompted to accept required permissions upon creation of the prebuild configuration</li>\n</ul>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/30297258/179619603-bef3dfab-de65-4f8b-834d-aabded877237.png\"><img width=\"600\" alt=\"image\" src=\"https://user-images.githubusercontent.com/30297258/179619603-bef3dfab-de65-4f8b-834d-aabded877237.png\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Monorepo projects</h3>\n<ul dir=\"auto\">\n<li>For monorepos, repository admins can select a specific devcontainer configuration within their repo to be prebuilt while creating a prebuild configuration:</li>\n</ul>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/30297258/179618613-ba06c686-f9c5-4ed5-b7f5-585dd633f8de.png\"><img width=\"900\" alt=\"image\" src=\"https://user-images.githubusercontent.com/30297258/179618613-ba06c686-f9c5-4ed5-b7f5-585dd633f8de.png\" style=\"max-width: 100%;\"></a></p>\n<ul dir=\"auto\">\n<li>Once the prebuild is ready, developers will be able to create prebuilt Codespaces by selecting the appropriate dev container configuration during creation.</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/539",
            "title": "Codespaces: Prebuilding codespaces for multi-repo and monorepo projects ",
            "date_modified": "2022-08-17T18:04:51.000Z",
            "date_published": "2022-08-17T17:38:47.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Organization admins can use APIs to manage codespaces.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">As organizations start to scale with Codespaces, we've heard feedback around admins needing more more flexibility, beyond UI-only settings, around managing codespaces settings for their organization. This functionality aims at providing organization admins access to APIs that will enable them automate and manage codespaces and codespaces settings more efficiently across various repositories within their org.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Existing Codespaces org APIs: <a href=\"https://docs.github.com/en/rest/codespaces/organizations\">https://docs.github.com/en/rest/codespaces/organizations</a></p>\n<p dir=\"auto\">Provides org admins APIs to manage org-owned codespaces with support for the following APIs:</p>\n<ul dir=\"auto\">\n<li>Manage codespaces access</li>\n<li>View org owned codespaces across repositories by user and cost</li>\n<li>Stop org owned codespaces across repositories</li>\n<li>Set repo level and org level secrets</li>\n<li>Configure prebuilds for desired repositories</li>\n<li>Set &amp; update policies across repositories</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/538",
            "title": "Codespaces: APIs for organization administration",
            "date_modified": "2022-08-17T18:04:50.000Z",
            "date_published": "2022-08-17T17:38:44.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\"><a href=\"https://github.blog/2022-06-15-prebuilding-codespaces-is-generally-available/\" rel=\"nofollow\">Prebuilds enable fast codespace creation experience for large and/or complex projects</a> by performing all the heavy-lifting tasks required to build your development environment beforehand. Think of a prebuild as a 'ready-to-go' template where your source code, editor extensions, project dependencies, commands, or configurations have already been downloaded, installed, and applied so that you don't have to wait for these tasks to finish in real-time every time you create a new Codespace.</p>\n<p dir=\"auto\">This functionality enables developers to test their changes while creating a pull request that might affect the prebuild configuration for their prebuild-enabled branch.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">With a Pull Request Validation step available to prebuild-enabled branches, developers can validate upfront if their changes may adversely affect the prebuild configuration for their branch. With this, developers no longer have to worry about accidently breaking the prebuild for a branch by testing and making any fixes upfront thus ensuring everyone continues to have a fast creation experience. Additionally repository admins/team leads will have additional confidence around prebuilds being steady and reliable without any manual interference.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<ul dir=\"auto\">\n<li>For prebuild enabled repositories, when a developer wants to push a change that updates the underlying prebuild configuration for that branch (ex. update the devcontainer configuration), GitHub will automatically introduce a test to validate if the changes will in any way cause the prebuild configuration to break. Initially this experience will only be supported via the GitHub UI, with support for CLI coming in as a fast follow.</li>\n<li>Developers will also have a link to the build log once the test completes to fix any issues they might discover before merging the PR thus ensuring prebuilds continue to work without any failures for their branch and repository.</li>\n</ul>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/30297258/180316806-11e0f281-2490-4ab2-91fe-bd99bab783ad.png\"><img width=\"731\" alt=\"image\" src=\"https://user-images.githubusercontent.com/30297258/180316806-11e0f281-2490-4ab2-91fe-bd99bab783ad.png\" style=\"max-width: 100%;\"></a></p>",
            "url": "https://github.com/github/roadmap/issues/537",
            "title": "Codespaces: Pull Request Validation for prebuild-enabled repositories ",
            "date_modified": "2022-08-17T18:04:49.000Z",
            "date_published": "2022-08-17T17:38:41.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">While reviewing a pull request, users can comment on binary files (like images), deleted files, renamed files, and make general comments about a source file without attaching it to a specific line. This helps improve code quality and the review experience by ensuring conversations happen as close to the change as possible. It also ensures conversations stay with the change as updates are made to the pull request.</p>\n\n\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/2503052/180461708-99b81265-b713-4ddb-8bb5-9e0b08fb221d.png\"><img src=\"https://user-images.githubusercontent.com/2503052/180461708-99b81265-b713-4ddb-8bb5-9e0b08fb221d.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ol dir=\"auto\">\n<li>Improve code quality by allowing users to comment on files that couldn't be commented on before</li>\n<li>Reduce overall review time</li>\n</ol>\n<h3 dir=\"auto\">How will it work?</h3>\n<ol dir=\"auto\">\n<li>A user (A) opens a pull request that changes various files, and inadvertently deletes a file</li>\n<li>A different user (B) is requested to review and navigates to the <strong>Files Changed</strong> tab</li>\n<li>User B notices the deletion and clicks the <code class=\"notranslate\">+</code> (add comment) button next to the deleted file</li>\n<li>User B adds a comment \"<em>Please double-check that this file should be deleted</em>\" and submits their review</li>\n<li>User A reviews the comments, notices the comment about the deleted file, and replies with \"<em>Good catch. Fixing!</em>\"</li>\n<li>User A pushes a change that reverts the deletion and clicks <strong>Resolve conversation</strong> to mark the conversation as resolved</li>\n</ol>",
            "url": "https://github.com/github/roadmap/issues/536",
            "title": "Comment on binary and deleted files in a pull request",
            "date_modified": "2022-08-17T18:04:48.000Z",
            "date_published": "2022-08-17T17:38:38.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        }
    ]
}