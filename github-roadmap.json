{
    "version": "https://jsonfeed.org/version/1",
    "title": "github/roadmap Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "feed_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "description": "github/roadmap Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h4 dir=\"auto\">Summary </h4>\n<p dir=\"auto\">This enhances <a href=\"https://github.com/features/packages\">GitHub Packages</a> support for <a href=\"https://rubygems.org/\" rel=\"nofollow\">rubygems</a> by allowing granular permissions for individual packages and easier sharing within the organization.</p>\n<h4 dir=\"auto\">Intended Outcome </h4>\n<p dir=\"auto\">This change introduces several improvements:</p>\n<ul dir=\"auto\">\n<li>publish packages on organization level, in addition to repository level</li>\n<li>have fine-grained access control over their rubygems packages, decoupled from the repository permissions</li>\n<li>have internal visibility settings for rubygems packages, in addition to private and public</li>\n<li>give permissions to packages independently for Actions and Codespaces</li>\n<li>increase performance and maintain more package versions than earlier</li>\n</ul>\n<h4 dir=\"auto\">How will it work? </h4>\n<p dir=\"auto\">Packages are published to the organization and permissions and visibility are managed on the package itself.</p>",
            "url": "https://github.com/github/roadmap/issues/590",
            "title": "Packages: rubygems - granular permissions and easy organization sharing",
            "date_modified": "2022-10-05T22:12:51.000Z",
            "date_published": "2022-09-14T18:18:12.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h4 dir=\"auto\">Summary </h4>\n<p dir=\"auto\">This enhances <a href=\"https://github.com/features/packages\">GitHub Packages</a> support for <a href=\"https://www.nuget.org/\" rel=\"nofollow\">nuget</a> by allowing granular permissions for individual packages and easier sharing within the organization.</p>\n<h4 dir=\"auto\">Intended Outcome </h4>\n<p dir=\"auto\">This change introduces several improvements:</p>\n<ul dir=\"auto\">\n<li>publish packages on organization level, in addition to repository level</li>\n<li>have fine-grained access control over their nuget packages, decoupled from the repository permissions</li>\n<li>have internal visibility settings for nuget packages, in addition to private and public</li>\n<li>give permissions to packages independently for Actions and Codespaces</li>\n<li>increase performance and maintain more package versions than earlier</li>\n</ul>\n<h4 dir=\"auto\">How will it work? </h4>\n<p dir=\"auto\">Packages are published to the organization and permissions and visibility are managed on the package itself.</p>",
            "url": "https://github.com/github/roadmap/issues/589",
            "title": "Packages: nuget - granular permissions and easy organization sharing",
            "date_modified": "2022-10-05T22:12:52.000Z",
            "date_published": "2022-09-14T18:18:09.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Enterprise customers will have the ability to craft custom organization level roles from fine grained permissions. This will work in a similar way to the existing <a href=\"https://docs.github.com/en/enterprise-cloud@latest/organizations/managing-peoples-access-to-your-organization-with-roles/managing-custom-repository-roles-for-an-organization\">Custom Repository Roles feature</a>. Admins will be able to create custom roles at the organizational layer, which grant permissions on both the organization (e.g. creating a GitHub app) and the repo level (viewing code).</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Organizational admins can delegate organizational responsibilities and privileges safely, reducing the number of admins in an organization.  This allows the creation of :</p>\n<ul dir=\"auto\">\n<li>CI/CD admins</li>\n<li>Invitation and membership admins</li>\n<li>Security managers</li>\n<li>Auditors</li>\n</ul>\n<p dir=\"auto\">Admins can also grant org-wide permissions on repos, ensuring that teams with cross-cutting responsibilities can easily and automatically have the permissions they need to get their work done (for example, giving a security team <code class=\"notranslate\">read</code> permissions on all repos).</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">The <code class=\"notranslate\">admin</code> role will continue to exist, but organizations can now create custom roles that exist in between <code class=\"notranslate\">member</code> and <code class=\"notranslate\">admin</code>.  These roles can be assigned to both users and teams inside the organization.  The roles can contain both organization permissions (the ability to make a change to the organization) and repository permissions (the ability to interact with all of the repos in the organization).</p>",
            "url": "https://github.com/github/roadmap/issues/586",
            "title": "Custom Roles for Organizational Permissions",
            "date_modified": "2022-09-14T17:53:11.000Z",
            "date_published": "2022-09-14T17:52:20.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Audit log streaming enables customers to stream a high-fidelity set of audit log and git event data to a log collection point of their choosing. This capability will sit alongside our existing audit log API and UI. The purpose of this release is to enable Datadog as a streaming endpoint.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">We want enterprise administrators to be able to use the right tools for their job, whether that be short term investigation or longer term threat analysis and prevention. With audit log streaming, customers can be assured that no audit log event will be lost, and that they will be able to satisfy longer term data retention goals by storing streamed events within their own log aggregation systems. Administrators will be able to analyze GitHub audit log data using Datadog's products.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">In the public beta, we will support integration with Datadog. An enterprise owner will be able to configure a destination domain, port, and token with write authorization to the streaming endpoint.</p>",
            "url": "https://github.com/github/roadmap/issues/585",
            "title": "Audit Log Streaming to Datadog [Private Beta]",
            "date_modified": "2022-09-14T17:53:10.000Z",
            "date_published": "2022-09-14T17:52:17.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">To customize Codespace development environments, a developer can specify IDE settings, project content layout, project dependencies, runtime environment settings, tools &amp; utilities, and other configurations via <a href=\"https://containers.dev/\" rel=\"nofollow\">Dev Containers.</a> Today that experience requires a developer to either:</p>\n<ul dir=\"auto\">\n<li>First create a Codespace, then invoke the magic keystrokes in VS Code to walk through the guided UI, and then to rebuild/reload the codespace, or...</li>\n<li>Learn the nuances of the <code class=\"notranslate\">devcontainer.json</code> semantics and syntax intimately to create the customization from scratch</li>\n</ul>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">GitHub Codespaces will provide point-and-click options in the GitHub.com UI that will allow you to customize your Codespace by choosing which Operating System base <a href=\"https://github.com/devcontainers/spec/blob/main/docs/specs/devcontainerjson-reference.md#image-or-dockerfile-specific-properties\">image</a> and <a href=\"https://github.com/devcontainers/spec/blob/main/proposals/devcontainer-features.md\">dev container features</a>. A wide range of customizations will be possible through this capability, making customization more accessible for developers either (a) just getting started with dev containers, or (b) who just need a quick-and-easy way to tailor their Codespace because the default dev container doesn't work well for them.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">The UI will manipulate the <code class=\"notranslate\">devcontainer.json</code> in the repository on behalf of the developer.</p>",
            "url": "https://github.com/github/roadmap/issues/584",
            "title": "Codespaces Customization Improvement",
            "date_modified": "2022-09-14T17:53:09.000Z",
            "date_published": "2022-09-14T17:52:11.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Copilot is an AI pair programmer that helps you write code faster and with less work. GitHub Copilot draws context from comments and code, and suggests individual lines and whole functions instantly. GitHub Copilot is powered by OpenAI Codex, a new AI system created by OpenAI. It is available as an extension for Visual Studio Code, Visual Studio, Neovim, and the JetBrains suite of IDEs.</p>\n<p dir=\"auto\">We released Copilot for Individuals on June 21st 2022. In this next release for businesses and organizations, we'll expand the service to include policy setting controls, license/seat assignment and management, repo level access control, and tightened data privacy policy enabled for business customers.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">GitHub Copilot draws context from comments and code, and suggests individual lines and whole functions instantly.</p>\n<p dir=\"auto\">GitHub Copilot is powered by Codex, the new AI system created by OpenAI. GitHub Copilot understands significantly more context than most code assistants. So, whether it’s in a docstring, comment, function name, or the code itself, GitHub Copilot uses the context you’ve provided and synthesizes code to match. Together with OpenAI, we’re designing GitHub Copilot to get smarter at producing safe and effective code as developers use it.</p>",
            "url": "https://github.com/github/roadmap/issues/583",
            "title": "Copilot for Business GA",
            "date_modified": "2022-09-14T17:49:15.000Z",
            "date_published": "2022-09-14T17:48:26.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">API events will be added to the audit log for Enterpise customers. API keys and integrations are common attack vectors leveraged by bad actors seeking to access organization's assets. By logging all API requests in the audit log, including the method of authentication, GitHub will provide more robust coverage for threat detection and investigation, expediting remediation and mitigative measures.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">By adding API requests to the audit log, GitHub will provide customers with a more robust view who is accessing organizational assets via APIs, both as users and authorized integrations. In doing so, customers will have additional telemetry identify and act on security threats.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Customers will enable API requests to be displayed as part of the Audit Log settings associated with their enterprise account.</p>\n<p dir=\"auto\">Once enabled, API requests will be able to be viewed and queries via the audit log UI, exports, REST API, and streaming to supported endpoints.</p>",
            "url": "https://github.com/github/roadmap/issues/582",
            "title": "Enable API requests to be queried via an Enterprise or Organization audit log ",
            "date_modified": "2022-09-14T17:49:12.000Z",
            "date_published": "2022-09-14T17:48:23.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Today, GitHub’s audit log streaming feature requires storage of cloud secrets in GitHub when configuring your stream. Going forward, the audit log feature will support OpenID Connect (OIDC) for streaming partners.  OIDC allows for the use of short-lived tokens that are automatically rotated for each configuration.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ul dir=\"auto\">\n<li>With the new OpenID Connect (OIDC) support, you can stream to  one of our five streaming partners</li>\n<li>OpenID token exchange eliminates the need for storing any long-lived cloud secrets in GitHub</li>\n<li>Enterprise owners can use the security mechanisms of their cloud provider to ensure minimal access to cloud resources</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">OIDC will establish an identity layer between GitHub and Azure for the purposes of authenticating GitHub to stream audit log events to a specified Azure blob.  Enterprise owners will establish trust with the GitHub  audit log application and assign audit log  a role with write permissions to the Azure blob. When streaming GitHub events via audit log streaming, GitHub will authenticate the cloud role and the Github audit log identity using short lived tokens.</p>",
            "url": "https://github.com/github/roadmap/issues/581",
            "title": "Open ID Connect (OIDC) for GHEC Audit Log Streaming to Azure Blob Storage",
            "date_modified": "2022-09-14T17:49:10.000Z",
            "date_published": "2022-09-14T17:48:20.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Today, GitHub’s audit log streaming feature requires storage of cloud secrets in GitHub when configuring your stream. Going forward, the audit log feature will support OpenID Connect (OIDC) for streaming partners.  OIDC allows for the use of short-lived tokens that are automatically rotated for each configuration.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ul dir=\"auto\">\n<li>With the new OpenID Connect (OIDC) support, you can stream to  one of our five streaming partners</li>\n<li>OpenID token exchange eliminates the need for storing any long-lived cloud secrets in GitHub</li>\n<li>Enterprise owners can use the security mechanisms of their cloud provider to ensure minimal access to cloud resources</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">OIDC will establish an identity layer between GitHub and AWS for the purposes of authenticating GitHub to stream audit log events to a specified AWS S3 bucket.  Enterprise owners will establish trust with the GitHub  audit log application and assign audit log  a role with write permissions to the S3 bucket. When streaming GitHub events via audit log streaming, GitHub will authenticate the cloud role and the Github audit log identity using short lived tokens.</p>",
            "url": "https://github.com/github/roadmap/issues/580",
            "title": "Open ID Connect (OIDC) for GHEC Audit Log Streaming to AWS S3 - [Public Beta]",
            "date_modified": "2022-10-03T22:14:15.000Z",
            "date_published": "2022-09-14T17:48:17.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">In this quarter, the GitHub Mobile app is planning to ship following features:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Projects list view on Mobile (Beta)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Improved Actions experience</li>\n</ul>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Mobile has the opportunity to become the fastest way to get work done on GitHub and serve as a platform that connects the world’s code with creative and collaborative developers. We would like to make it a more sophisticated experience in helping people get to their work and connect the right people together so that meaningful software is collaborated on Mobile.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<ul dir=\"auto\">\n<li><strong>Projects list view on Mobile (Beta)</strong></li>\n</ul>\n<p dir=\"auto\">Deliver the new Projects experience on mobile that would allow users to access their projects and make updates on their mobile devices. This is a whole new feature we're adding to the GitHub Mobile apps to help users keep track of their project status on the go.</p>\n<ul dir=\"auto\">\n<li><strong>Improved Actions experience</strong></li>\n</ul>\n<p dir=\"auto\">Improved Actions experience on GitHub Mobile that allows users to understand the status of an Action (by viewing it's Jobs, Summary and Logs), and taking action based on it (via Cancel / Re-Run).</p>",
            "url": "https://github.com/github/roadmap/issues/579",
            "title": "Mobile: Feature updates Q3 2022",
            "date_modified": "2022-09-14T17:49:08.000Z",
            "date_published": "2022-09-14T17:48:14.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">This enhances <a href=\"https://github.com/features/packages\">GitHub Packages</a> support for <a href=\"https://maven.apache.org/\" rel=\"nofollow\">maven</a> by allowing granular permissions for individual packages and easier sharing within the organization.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">This change introduces several improvements:</p>\n<ul dir=\"auto\">\n<li>publish packages on organization level, in addition to repository level</li>\n<li>have fine-grained access control over their maven packages, decoupled from the repository permissions</li>\n<li>have internal visibility settings for maven packages, in addition to private and public</li>\n<li>give permissions to packages independently for Actions and Codespaces</li>\n<li>increase performance and maintain more package versions than earlier</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Packages are published to the organization and permissions and visibility are managed on the package itself.</p>",
            "url": "https://github.com/github/roadmap/issues/578",
            "title": "Packages: maven - granular permissions and easy organization sharing",
            "date_modified": "2022-10-05T22:12:52.000Z",
            "date_published": "2022-09-14T17:48:11.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">As teams continue to onboard and use Projects, there is a need to allow more flexible and comprehensive automations or workflow that allow project users to automate more repetitive items they have to do by hand currently. With this new built-in workflows, users will be able to automatically archive items from their project when certain conditions are met. This will allow maintainers to spend less time on pruning old items from the board and more on tracking the work important in the moment.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/3174849/186236465-c595383b-d439-4adc-9905-91041a6e482a.png\"><img src=\"https://user-images.githubusercontent.com/3174849/186236465-c595383b-d439-4adc-9905-91041a6e482a.png\" alt=\"7\" style=\"max-width: 100%;\"></a><br>\n<strong>NOTE:</strong> Designs are still evolving and the final product may look different upon shipping.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Users can create configure a templated workflow that will automatically archive items from their project board when specific filter criteria are met. For example, when an issue is closed and has status \"Done\", archive the issue from the project.</p>\n<p dir=\"auto\">Our hope is that this feature will address feedback we've gotten around</p>\n<ol dir=\"auto\">\n<li>Hitting the project limit and having to manually archive large sets of items to keep working with the project</li>\n<li>Lowering the amount of effort it takes to keep a board pruned and focused on impactful items</li>\n<li>Providing a built-in project specific workflow to automate this task rather than pushing towards user-managed Actions that must be managed separately from the project context</li>\n</ol>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">In the Workflows page, we will introduce a new built-in workflow called \"Auto-archive items\". The user will specify the set of conditions/filters they want to use to select which items in the project should be automatically archived. Whenever an item meets that criteria, the project will automatically archive the item.</p>\n<p dir=\"auto\">While users will only be able to set up one archive automation to begin with, we expect to allow them to clone/duplicate archive workflows to capture all the various states where they'd like an item archived.</p>",
            "url": "https://github.com/github/roadmap/issues/577",
            "title": " Projects: Auto-archive automation",
            "date_modified": "2022-09-14T17:49:06.000Z",
            "date_published": "2022-09-14T17:48:08.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">As teams continue to onboard and use Projects, there is a need to allow more flexible and comprehensive automations or workflows that allow project users to automate more repetitive items they have to do by hand currently.</p>\n<p dir=\"auto\">With this new built-in workflow, users will be able to automatically add issues and PRs from repositories when certain conditions are met. This will allow maintainers to spend less time chasing down items that need to be added to projects and cut back on instances where an item should have been added to a project but was inadvertently missed. Additionally, this should ease the amount of effort needed to populate a board in its early stages.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/3174849/186247555-76a67278-91e7-4a19-a263-68c278f71152.png\"><img src=\"https://user-images.githubusercontent.com/3174849/186247555-76a67278-91e7-4a19-a263-68c278f71152.png\" alt=\"1-3\" style=\"max-width: 100%;\"></a><br>\n<strong>NOTE:</strong> Designs are still evolving and the final product may look different upon shipping.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Users can create configure a templated workflow that will automatically add items to their project board when specific filter criteria are met. For example, when an issue is opened in repository {X} and has label {Y}, add the issue from the project.</p>\n<p dir=\"auto\">Our hope is that this feature will address feedback we've gotten around</p>\n<ol dir=\"auto\">\n<li>Initial propagation of items with a project -- making it easier to add many items at once to onboard to a project</li>\n<li>Reducing overhead / maintenance required to keep a project up to date as new issues and PRs are created across various relevant repositories</li>\n<li>Providing a built-in project specific workflow to automate this task rather than pushing towards user-managed Actions that must be managed separately from the project context</li>\n</ol>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">In the Workflows page, we will introduce a new built-in workflow called \"Auto-add items\". The user will specify the set of conditions/filters they want to use to select which items across the organization should be added to the project. Whenever an item meets that criteria, the workflow will automatically add the item.</p>\n<p dir=\"auto\">While users will only be able to set up one add automation to begin with, we expect to allow them to clone/duplicate archive workflows to capture all the various states where they'd like an item added. For example, users should be able to create a workflow for each repo they need to add items from or perhaps issue specific criteria that may not apply to PRs that need to be auto-added.</p>",
            "url": "https://github.com/github/roadmap/issues/576",
            "title": "Projects: Auto-add item to project automation",
            "date_modified": "2022-09-14T17:49:05.000Z",
            "date_published": "2022-09-14T17:48:05.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Configuration variables ease the adoption of reusability features in Actions, such as reusable workflows, by providing an easier way to store and share non-sensitive configuration data at either the organization, environment, or repository level.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Previously, customers needed to store configuration data as encrypted secrets in order to reuse values in Actions features like reusable workflows. While extremely secure, this method did not allow for easy storage and retrieval of non-sensitive configuration data such as compiler flags, usernames, or server names. An example use case is to set default values for parameters passed to build tools at an organization level, but then allow repository owners to override these parameters on a case-by-case basis.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\"><em>No response</em></p>",
            "url": "https://github.com/github/roadmap/issues/575",
            "title": "Actions: Separate Variables and Secrets",
            "date_modified": "2022-10-05T22:12:52.000Z",
            "date_published": "2022-09-14T17:48:02.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Enterprise Server will now include improved storage configuration security. GHES will now use the industry-standard OpenID Connect (OIDC) protocol to connect to object storage providers such as Amazon Web Services (AWS) Simple Storage Service (S3) and Azure Object Storage.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">We have received feedback that the existing method of storage authentication -- using secret and access keys -- does not provide the level of required security. We will encourage customers instead to set up an OIDC Connect trust relationship between their GHES installation and their cloud storage provider to obviate the need for key exchange.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\"><em>No response</em></p>",
            "url": "https://github.com/github/roadmap/issues/565",
            "title": "Actions: OIDC Support for Storage",
            "date_modified": "2022-10-05T22:12:53.000Z",
            "date_published": "2022-09-14T17:20:47.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub will release an official Actions extension for Visual Studio Code (VSCode) to make building and managing workflows easier. Developers will now be able to use rich editing features, check their YAML syntax for validity, and view context such as workflow runs and environments all within VSCode, and even before committing their workflow code to a repository.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">The previous process of building a workflow was to commit a change, trigger a run, and then navigate to GitHub to view the status and logs of the workflow.  Developers would build the workflow and validate it in two separate consecutive steps.  This meant that even simple syntax errors could end up having a considerable impact on a developer’s productivity.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Developers will be able to build Actions workflows faster with the power of IntelliSense in VSCode.  Features such as syntax highlighting and linting will be supplemented by code completion on expressions and inputs.  This will allow developers to build workflows faster and with less mental overhead.  These editing features will not only help experienced customers avoid simple errors but also help flatten the learning curve for new customers.</p>\n<p dir=\"auto\">The new extension also brings Actions context into VSCode so developers can stay focused. After a workflow run is triggered, customers can view its status by clicking on the Actions icon in the activity bar to open up the explorer.  In this view, developers will be able to see workflow statuses and inspect logs.  The ability to edit workflow files and view statuses in a single place improves developer productivity by eliminating the need to switch between tools.</p>",
            "url": "https://github.com/github/roadmap/issues/564",
            "title": "Actions: Visual Studio Code extension for linting",
            "date_modified": "2022-10-05T22:12:53.000Z",
            "date_published": "2022-09-14T17:20:44.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Users will be able to add projects to their teams page to allow for quick access. This aligns with the current workflow of adding a project for quick access to repositories.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/3174849/186283720-776c2441-9043-4089-a771-5e200134d569.png\"><img src=\"https://user-images.githubusercontent.com/3174849/186283720-776c2441-9043-4089-a771-5e200134d569.png\" alt=\"Frame 3007\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Users will be able to curate the set of projects that should be associated with a team.</p>\n<p dir=\"auto\">By enabling projects to be referenced from the team page, users can easily find and review the full set of projects that may be important for their team.</p>\n<p dir=\"auto\">By adding the project to the team's quick access page, it will also automatically add the team to the project with <code class=\"notranslate\">read</code> permissions (if they don't already have <code class=\"notranslate\">read</code> permissions), thereby ensuring all teammates have basic permissions needed to access relevant projects.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">To add a quick access to the projects, users will navigate to their team's page and then to the <code class=\"notranslate\">Projects</code> tab. From there, they'll select <code class=\"notranslate\">Add project</code>, search for the appropriate project, and select it to add it to the Quick Access list.</p>\n<p dir=\"auto\">By adding a project in this view, we will also automatically add <code class=\"notranslate\">read</code> permissions for the team to access the project. Because adding a project updates permissions, only users with <code class=\"notranslate\">Admin</code> permissions will be able to add a project to the team's quick access page.</p>",
            "url": "https://github.com/github/roadmap/issues/563",
            "title": "Projects: Add projects to team index",
            "date_modified": "2022-10-03T22:28:13.000Z",
            "date_published": "2022-09-14T17:20:41.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Users will be able to configure column visibility on the board view layout by selecting which columns are displayed.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Providing users with the ability to configure which columns are displayed on board view will allow them to further customize their boards to only display the items and columns they want to show. It provides a cleaner board layout experience and a more focused view.</p>\n<p dir=\"auto\">This aligns the column visibility behavior with table view by selecting which columns to show or hide.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users will be able to select which columns to show or hide on board view from the column settings menu, similar to selecting columns on table view. This will adjust the columns that are displayed.</p>",
            "url": "https://github.com/github/roadmap/issues/562",
            "title": "Projects: Configure column visibility in board view",
            "date_modified": "2022-09-14T17:21:27.000Z",
            "date_published": "2022-09-14T17:20:37.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Build performance insights will help customers understand how the build times of their individual workflows, jobs and steps are changing over time, and assist them in troubleshooting poor performance of their CI/CD pipelines.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Customers need assistance in being able to answer the following questions (among others):</p>\n<ul dir=\"auto\">\n<li>How is my build system performance trending over time, for individual repositories as well as individual workflows?</li>\n<li>Within a particular workflow, which jobs or steps are taking the most time? Are these trending better or worse over time? How can I correlate changes made to the workflow against performance changes and/or determine if external factors are the cause of poor performance?</li>\n<li>How can I begin to debug poor performance overall, especially when an individual developer only provides qualitative inputs (\"my build is slow, can you help?\")</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">We do not know yet -- that is why this is in the Future column. At the moment we are conducting research on:</p>\n<ul dir=\"auto\">\n<li>What are the most promising and priority jobs to be done to help customers</li>\n<li>What should be the visual interfaces to see / query / report on this information</li>\n<li>How much should we buy versus build</li>\n<li>Whether customers want to consume this information within our system or if they prefer to send the data elsewhere for their own analysis</li>\n</ul>\n<p dir=\"auto\">and other such questions that will help refine &amp; disambiguate this initiative.</p>",
            "url": "https://github.com/github/roadmap/issues/561",
            "title": "Actions: Build Performance Insights",
            "date_modified": "2022-10-05T22:12:53.000Z",
            "date_published": "2022-09-14T17:20:35.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">This enhances <a href=\"https://github.com/features/packages\">GitHub Packages</a> support for Enterprise Customers by allowing granular permissions for individual packages and easier sharing within the organization.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">This change introduces several improvements:</p>\n<ul dir=\"auto\">\n<li>publish packages on organization level, in addition to repository level</li>\n<li>have fine-grained access control over their packages, decoupled from the repository permissions</li>\n<li>have internal visibility settings for packages, in addition to private and public</li>\n<li>give permissions to packages independently for Actions and Codespaces</li>\n<li>increase performance and maintain more package versions than earlier</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Packages are published to the organization and permissions and visibility are managed on the package itself.</p>",
            "url": "https://github.com/github/roadmap/issues/560",
            "title": "Packages: Granular permissions and easy organization sharing for enterprise customers",
            "date_modified": "2022-10-05T22:12:54.000Z",
            "date_published": "2022-09-14T17:20:32.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        }
    ]
}