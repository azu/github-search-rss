{
    "version": "https://jsonfeed.org/version/1",
    "title": "github/roadmap Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "feed_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "description": "github/roadmap Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><strong>Summary</strong><br>\nEnable groups, corporations, and institutions to fund projects and developers that they depend on</p>\n<p dir=\"auto\"><strong>How will it work?</strong><br>\nAllow an organization to sponsor individuals and organizations via an invoice</p>\n<p dir=\"auto\"><strong>Reasoning</strong><br>\nLarge institutions—companies, enterprises, governments, and more—are the biggest users of open source. They have a clear interest to ensure the projects and developers they depend on not only survive but thrive. Funding open source will help these sponsors to avoid abandonware, keep security tight, and attract technical talent while they’re at it.</p>\n<p dir=\"auto\"><strong>Notes</strong><br>\nThis is the successor to <a href=\"https://github.com/github/roadmap-internal/issues/79\">https://github.com/github/roadmap-internal/issues/79</a></p>",
            "url": "https://github.com/github/roadmap/issues/618",
            "title": "GitHub Sponsors for companies – invoiced billing GA",
            "date_modified": "2022-11-16T18:45:05.000Z",
            "date_published": "2022-11-16T18:41:10.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><strong>Summary</strong><br>\nThe GitHub Actions Runner now supports Windows ARM64 architecture.</p>\n<p dir=\"auto\"><strong>Intended Outcome</strong><br>\nPreviously, the Actions runner did not include Windows ARM64 as a supported OS &amp; Arch combination. This new release of the runner enables customers to use their Windows ARM64 environments as self-hosted runners for GitHub Actions.</p>\n<p dir=\"auto\"><strong>How will it work?</strong><br>\nDuring the self-hosted runner creation flow, customers will select the Windows ARM64 release for deployment. For additional information on how to set up a self-hosted Windows ARM64 runner, please refer to our <a href=\"https://docs.github.com/en/actions/hosting-your-own-runners/using-self-hosted-runners-in-a-workflow#using-default-labels-to-route-jobs\">documentation</a>. If you have any feedback or questions for Actions self-hosted Windows ARM support, you can submit an issue in the <a href=\"https://github.com/actions/runner/issues\">runner repository</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/616",
            "title": "Actions: Self-hosted runners now support Windows ARM64",
            "date_modified": "2022-11-16T18:24:44.000Z",
            "date_published": "2022-11-16T18:23:47.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><strong>Summary</strong> <br>\nOrganization and Enterprise Admins can now better understand what is driving their GitHub Action use by repo, workflow and Organization. Organization Admins can now self-serve information to empower them to answer questions like which repo is using the most minutes, which workflows have changed resulting in more use and how their split of minutes usage compares across different operating systems.</p>\n<p dir=\"auto\"><strong>Intended Outcome</strong><br>\nPreviously, Admins had to look across a range of un-supported data sources extracting information and then still struggled to answer questions like ‘which workflow is driving the most use across all of my runner types’. For self-hosted customers, managing their fleets and finding bottlenecks was also hard, requiring them to source verbatim rather than use a real data source. With the new data view CodeBlock, CI/CD admins can create views of Actions data for them and other team members to consume across their organization. With the new API GitHub Admins can query for a range of data allowing them to answer questions about all of their runners and workflows in GitHub.</p>\n<p dir=\"auto\"><strong>How will it work?</strong> <br>\nGetting started will be easy. You will be able to fork one of our sample codeblocks into your organization to start building your own dashboard.<br>\nIn this release you will have access to:</p>\n<ul dir=\"auto\">\n<li>Org name</li>\n<li>Repo name</li>\n<li>Workflow name</li>\n<li>Queued time</li>\n<li>Workflow start time</li>\n<li>Workflow end time</li>\n<li>Labels used</li>\n<li>Repo visibility</li>\n<li>Currently available runner count\n<ul dir=\"auto\">\n<li>By repo</li>\n<li>By runner group</li>\n<li>By scaleset- future</li>\n</ul>\n</li>\n<li>Current GitHub concurrency</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/615",
            "title": "Actions: New API and Insights CodeBlock for GitHub Action’s data",
            "date_modified": "2022-11-16T18:24:42.000Z",
            "date_published": "2022-11-16T18:23:44.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><strong>Summary</strong><br>\nEnterprise customers can now set up Actions to connect with their internal networks in under 10 minutes! GitHub has introduced a turnkey set of tools that allow enterprise admins to give GitHub Actions access to the resources their teams need inside their private networks. This means that teams can now access their internal APIs, Databases, Artifactory instances and more from GitHub’s hosted runners.</p>\n<p dir=\"auto\"><strong>Intended Outcome</strong><br>\nThis enables Actions to connect to Azure services, such as Azure Storage, in a secure manner using service endpoints or to on-premises data sources, taking advantage of user-defined routes. You can also connect Actions to a network virtual appliance to inspect all outbound traffic and take actions according to allow and deny rules. Finally you can configure Actions to use custom DNS and configure network security group (NSG) rules to specify egress traffic restrictions.</p>\n<p dir=\"auto\"><strong>How will it work?</strong><br>\nWith the introduction of GitHub’s secure networking for Actions, customers on Azure can now set up an integration with their <a href=\"https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview\" rel=\"nofollow\">Azure subscriptions Virtual Networks </a>(VNets). This solution enables service traffic to go through the Azure backbone network, isolating communication from the public Internet and effectively injecting the Actions runner into your private network.</p>",
            "url": "https://github.com/github/roadmap/issues/614",
            "title": "Actions: Private networking support (Ubuntu & Windows) for secure connections to customer VNETs",
            "date_modified": "2022-11-16T18:24:41.000Z",
            "date_published": "2022-11-16T18:23:41.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">In order to help teams migrate over from projects classic, we have a number of areas where we are working towards feature parity. In this quarter, we hope to address the following:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Project events are included in issue / pull request timelines</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Ability to inherit permissions from a linked repo; improved creation experience from the repo projects index</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Activity history for a project</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Ability to deep link to an issue within a project</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/613",
            "title": "Projects: Parity with Projects (classic) Milestone 3",
            "date_modified": "2022-11-16T18:24:40.000Z",
            "date_published": "2022-11-16T18:23:38.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">To better protect npm users from supply chain attacks, we are adding support for verifiable links between the source and the built packages in npm packages. You can read more about the proposed approach in the detailed <a href=\"https://github.com/npm/rfcs/pull/626\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/npm/rfcs/pull/626/hovercard\">RFC</a>.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">npm is the most widely used package manager on the planet today, and is therefore a potential target from malicious actors who want to exploit security weaknesses. By adding verifiable linking between a the source code repository, the build run that generated the package, and the package itself, we can mitigate certain supply chain attacks.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Read more about the proposed approach in the <a href=\"https://github.com/npm/rfcs/pull/626\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/npm/rfcs/pull/626/hovercard\">RFC</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/612",
            "title": "npm supports creating verifiable links between a package version and its source/build - Public beta",
            "date_modified": "2022-11-16T18:22:25.000Z",
            "date_published": "2022-11-16T18:21:45.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Today, GitHub’s audit log streaming feature requires storage of cloud secrets in GitHub when configuring your stream. Going forward, the audit log feature will support OpenID Connect (OIDC) for streaming partners. OIDC allows for the use of short-lived tokens that are automatically rotated for each configuration.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ul dir=\"auto\">\n<li>With the new OpenID Connect (OIDC) support, you can stream to one of our five streaming partners</li>\n<li>OpenID token exchange eliminates the need for storing any long-lived cloud secrets in GitHub</li>\n<li>Enterprise owners can use the security mechanisms of their cloud provider to ensure minimal access to cloud resources</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">OIDC will establish an identity layer between GitHub and AWS for the purposes of authenticating GitHub to stream audit log events to a specified AWS S3 bucket. Enterprise owners will establish trust with the GitHub audit log application and assign audit log a role with write permissions to the S3 bucket. When streaming GitHub events via audit log streaming, GitHub will authenticate the cloud role and the Github audit log identity using short lived tokens.</p>",
            "url": "https://github.com/github/roadmap/issues/611",
            "title": "Open ID Connect (OIDC) for GHEC Audit Log Streaming to AWS S3 - [GA]",
            "date_modified": "2022-11-16T19:41:34.000Z",
            "date_published": "2022-11-16T18:21:42.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Audit log streaming enables customers to stream a high-fidelity set of audit log and git event data to a log collection point of their choosing. This capability will sit alongside our existing audit log API and UI. The purpose of this release is to enable Datadog as a streaming endpoint.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">We want enterprise administrators to be able to use the right tools for their job, whether that be short term investigation or longer term threat analysis and prevention. With audit log streaming, customers can be assured that no audit log event will be lost, and that they will be able to satisfy longer term data retention goals by storing streamed events within their own log aggregation systems. Administrators will be able to analyze GitHub audit log data using Datadog's products.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">An enterprise owner will be able to configure a destination domain, port, and token with write authorization to the streaming endpoint.</p>",
            "url": "https://github.com/github/roadmap/issues/610",
            "title": "Audit Log Streaming to Datadog - [GA]",
            "date_modified": "2022-11-16T19:40:34.000Z",
            "date_published": "2022-11-16T18:21:39.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Today by default, only those with the <code class=\"notranslate\">admin</code> role for a repository can view or modify Dependabot alerts. With this change, anyone with <code class=\"notranslate\">write</code> or <code class=\"notranslate\">maintain</code> roles will also have permissions to view and modify Dependabot alerts by default.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Starting January 2023, default permissions for Dependabot alerts are changing so that the right collaborators can see and action on Dependabot alerts.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Based on your repository permissions, if you have <code class=\"notranslate\">write</code> or <code class=\"notranslate\">maintain</code> access, you'll be able to view and action on Dependabot alerts.</p>\n</li>\n<li>\n<p dir=\"auto\">Based on your user notification settings and per-repository watching settings, you'll begin receiving notifications on Dependabot alerts.</p>\n</li>\n</ul>\n<p dir=\"auto\">You can adjust your user notifications settings and per-repository watching settings to make sure you're receiving notifications on Dependabot alerts for the repositories you care about.</p>",
            "url": "https://github.com/github/roadmap/issues/609",
            "title": "Dependabot Alerts default permissions: `write` and `maintain` roles",
            "date_modified": "2022-11-16T18:22:20.000Z",
            "date_published": "2022-11-16T18:21:36.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">A new enterprise membership CSV report enables enterprise administrators to better analyse their membership and take action based on that information. Alongside this, we have also improved the enterprise consumed licenses report to provide more information to administrators.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">With these enhanced reports, customers should be able to more easily answer license consumption and enterprise access questions.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">The Consumed Licenses report is available both in GHEC UI on the enterprise account's <code class=\"notranslate\">settings</code> &gt; <code class=\"notranslate\">enterprise licensing</code> page as a download button for <code class=\"notranslate\">User licenses</code> as well as via API.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/58748846/193249774-09ac320f-f401-429c-9b29-b984cb4aa55f.png\"><img width=\"1425\" alt=\"Screen Shot 2022-09-30 at 6 22 01 AM\" src=\"https://user-images.githubusercontent.com/58748846/193249774-09ac320f-f401-429c-9b29-b984cb4aa55f.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">The enterprise membership report, it is downloadable via the enterprise account's <code class=\"notranslate\">People</code> page as a download button.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/58748846/193250107-e72fcfe7-a60a-4f2e-ab21-92cd62d352da.png\"><img width=\"1407\" alt=\"Screen Shot 2022-09-30 at 6 24 01 AM\" src=\"https://user-images.githubusercontent.com/58748846/193250107-e72fcfe7-a60a-4f2e-ab21-92cd62d352da.png\" style=\"max-width: 100%;\"></a></p>",
            "url": "https://github.com/github/roadmap/issues/608",
            "title": "Enterprise Membership & Improved Consumed License Reports",
            "date_modified": "2022-11-29T22:58:19.000Z",
            "date_published": "2022-11-16T18:21:33.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">This feature enables GitHub Enterprise Cloud administrators to move organization move from one enterprise account to another without having to drop the org into a free state or request that GitHub Support transfers the organization for them.</p>\n<p dir=\"auto\">Note this feature enables the transfer of an organization between enterprise accounts only if both enterprise accounts are GHEC Classic accounts - not EMUs - and the administrator is an enterprise owner for both enterprise accounts. A future roadmap item will bring the ability to transfer an organization between GHEC Classic accounts which have different enterprise owners.</p>\n<p dir=\"auto\">Customers wishing to move organizations into a GHEC EMU enterprise are advised to use the <a href=\"https://docs.github.com/en/early-access/enterprise-importer\">GitHub Enterprise Importer</a> to manage this.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Customers who are growing through acquisitions and partnerships can easily, confidently and quickly transfer organizations into their enterprise cloud account.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">An enterprise administrator with access to two enterprise accounts will:</p>\n<ul dir=\"auto\">\n<li>See a UI option in the enterprise account that is available within the organization's gear drop-down to <code class=\"notranslate\">transfer</code> an organization</li>\n<li>Have the ability to invite an organization from another enterprise account to pull an organization over via the invitation flow</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/607",
            "title": "Transfer Organizations between GHEC Classic Enterprise Accounts",
            "date_modified": "2022-11-16T19:37:08.000Z",
            "date_published": "2022-11-16T18:21:30.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Code scanning will include a new tool status page, which will show detailed information about the security tools/engines (including CodeQL) set up on a repository, and will provide information like coverage of files and directories. Users will be able to see errors for analysis and its configuration.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">The code scanning tool status page will help users complete the setup successfully by raising awareness if the setup has failed or is incomplete. It will also allow users to maintain a successful setup by understanding if the success status has changed due to the latest changes in the repository. The tool status page will be a new entry point to debug and configure code scanning tools.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Code scanning will report the status of the tool based on the number of files that were built and analysed. Users will be able to tweak and improve their analysis configuration based on the provided information.</p>",
            "url": "https://github.com/github/roadmap/issues/606",
            "title": "Code scanning tool status page ",
            "date_modified": "2022-11-16T18:47:32.000Z",
            "date_published": "2022-11-16T18:19:29.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">A REST API to enable GitHub Advanced Security, secret scanning, and push protection.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Customers can use the enterprise level REST API to automate processes around the enablement of secret scanning and push protection.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">With the enterprise REST API, GitHub Advanced Security customers can:</p>\n<ul dir=\"auto\">\n<li>Enable or disable GitHub Advanced Security</li>\n<li>Enable or disable secret scanning</li>\n<li>Enable or disable push protection for secret scanning</li>\n<li>Add or update a custom link to display to contributors who are blocked from pushing a secret</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/605",
            "title": "Secret scanning: Enable at the enterprise level with the Enterprise-level REST API",
            "date_modified": "2022-11-16T18:47:31.000Z",
            "date_published": "2022-11-16T18:19:26.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">In-product metrics on how a specific custom pattern is performing. The metrics can be accessed in the UI page of the specific custom pattern.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">We want to provide customers with insight into how their custom patterns perform. Based on those metrics, admins can take action to enable the custom pattern for push protection, edit the pattern to make it less noisy, or leave the pattern running as is.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">When viewing a custom pattern, admins will be able to view metrics about the specific custom pattern. Metrics will include the number of false positives, open alerts, etc.</p>",
            "url": "https://github.com/github/roadmap/issues/604",
            "title": "Secret scanning: Metrics for custom patterns",
            "date_modified": "2022-11-16T18:47:30.000Z",
            "date_published": "2022-11-16T18:19:23.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">In-product metrics that will live in an organization's security overview pages on how a push protection is performing, e.g. number of blocked and bypassed secrets.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Allow GitHub Advanced Security customers to understand the value of push protection for their organization and take any needed action based on the provided metrics.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">In an organization's \"Security\" tab, organization admins can view metrics specific to push protection. These metrics include the number of blocked secrets, whether or not those secrets were bypassed to create alerts.</p>",
            "url": "https://github.com/github/roadmap/issues/603",
            "title": "Secret scanning: Metrics for push protection",
            "date_modified": "2022-11-16T18:47:29.000Z",
            "date_published": "2022-11-16T18:19:20.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">For enterprise audit log events where a token - PAT (Classic), fine-grained PAT, OAuth, GitHub Apps - was used as the method of authentication, the audit log will contain a hashed rendering of the token used for authentication, as well as the token type and token scope. In doing so, customers will be able to query actions a token has been used to perform on enterprise assets.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Compromised tokens have the potential to provide threat actors with access to private data. After learning of a token compromise, we know that administrators and security professionals want to understand the actions taken using the corrupt token. To support Enterprise customers to complete these investigations, we will enhance the audit log data by logging identifiable and queryable token data in the audit log for events using tokens for authentication.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">The audit log will display the authentication methods, as well as the last 8 chars of the token for authentication, for audit log events using any token for authentication. This data will be available in the GitHub enterprise account UI, the audit log API, streaming, and in the Site Admin dashboard for GHES customers.</p>",
            "url": "https://github.com/github/roadmap/issues/602",
            "title": "Token data used for authorization is included in enterprise audit log events - [GA]",
            "date_modified": "2022-11-16T19:34:32.000Z",
            "date_published": "2022-11-16T18:19:17.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Fine-grained personal access tokens (PATs) currently require you to be a member of the organization you wish to mint a token for. This requirement blocks outside collaborators from minting fine-grained PATs for their repos, because they're not a member of the organization that owns that repo.</p>\n<p dir=\"auto\">This update enables outside collaborators to access repos with a fine-grained PAT.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">If a user is an outside collaborator in a repo owned by an organization, they'll be able to mint a fine-grained PAT for that repo.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">While the UI is still under consideration, the expectation is that outside collaborators will see the organization in the Resource Owner dropdown, and be able to select it.  The token will only be able to access the repo(s) that they are collaborators on.</p>\n<p dir=\"auto\">This work does not necessarily allow a developer to mint a PAT for a repo that they're a collaborator on, that's owned by a user account. That will be covered in an additional roadmap item.</p>",
            "url": "https://github.com/github/roadmap/issues/601",
            "title": "Outside collaborator support for organization-owned repositories for fine-grained PATs",
            "date_modified": "2022-11-16T18:47:27.000Z",
            "date_published": "2022-11-16T18:19:14.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Fine-grained PATs currently require you to be a member of an Organization, in order to mint a token that targets repos in that Organization. However, in open source workflows it's quite common for users to <em>not</em> be a member of the Organization they're contributing to. This work permits a fine-grained PAT to be used against repositories in an Organization that the user is not a member of, including repositories that the user is an Outside Collaborator on</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Developers can mint a fine-grained PAT that targets all open-source repositories. They can choose any of the fine-grained permissions available on repositories. Their access to the repository will be determined by both these permissions as well as the settings on the repository.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">The UI is still being determined, but developers will likely be able to create a PAT that's not targeted to their personal account or an Organization, but instead \"all other / public repos\".  Alternatively, they may be able to tick a checkbox which indicates that the token they're creating is targeted to both the targeted Organizations and repositories as well as all public repositories.</p>",
            "url": "https://github.com/github/roadmap/issues/600",
            "title": "Fine-grained PAT support for open source and personally-owned repos",
            "date_modified": "2022-11-16T18:47:26.000Z",
            "date_published": "2022-11-16T18:19:11.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Fine-grained personal access tokens currently require all tokens to expire, but administrators who want specific expiration times must manually check each token to validate that they hew to an acceptable expiration time.</p>\n<p dir=\"auto\">Rather than force developers to do a back-and-forth with their organization administrator to discover acceptable expiry times, we want to give administrators defined controls over the acceptable expiration times for fine-grained PATs in their organization.</p>\n<p dir=\"auto\">This work provides organization administrators a policy for maximum acceptable expiry times in their organization. When a developer attempts to create a token with an expiry time longer than what's accepted, they'll immediately be told that a shorter expiration is required.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">We don't want to force a back-and-forth discussion between administrators and developers around discovery of acceptable expiration times on tokens.  Instead, administrators can set this value up front, and the developer will learn about it immediately as part of token creation.</p>\n<p dir=\"auto\">This will allow more administrators to trust in the least privilege access of their developers, and remove their manual approval from the inner-loop of development.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Organization admins will be able to configure a policy in their organization around maximum acceptable token lifetimes.  This policy will apply only to fine-grained PATs, and be enabled by default with an expiration maximum of 1 year.</p>\n<p dir=\"auto\">During PAT creation, developers will see a note as soon as they select the organization as the resource owner, indicating the maximum acceptable expiry time.</p>",
            "url": "https://github.com/github/roadmap/issues/599",
            "title": "Fine-grained PAT expiry policies for organizations",
            "date_modified": "2022-11-16T18:47:25.000Z",
            "date_published": "2022-11-16T18:19:08.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">The <a href=\"https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-with-codeql\">CodeQL analysis engine</a> for <a href=\"https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning\">GitHub code scanning</a> will be able to analyze projects written in C# 11.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Currently, <a href=\"https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/\">CodeQL supports builds and standard language features up to C# 10</a>. C# 11 is due to be released before EOY 2022. Updating CodeQL support will allow customers who want to adopte C# 11 to benefit from CodeQL's comprehensive security analysis.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">If a project contains C# 11 code, or if C# has been <a href=\"https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#changing-the-languages-that-are-analyzed\">configured as a language to be analyzed</a> in the <a href=\"https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#about-code-scanning-configuration\">code scanning workflow</a>, CodeQL will pick up code using C# 11 language features automatically. No further configuration changes are needed. As soon as the analysis is finished, the CodeQL results will then become visible to you in the \"Security\" tab and on pull requests. C# 11 support will also be available through the <a href=\"https://codeql.github.com/docs/codeql-cli/about-the-codeql-cli/\">CodeQL CLI</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/598",
            "title": "CodeQL Support for C# 11",
            "date_modified": "2022-11-16T18:47:24.000Z",
            "date_published": "2022-11-16T18:19:05.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        }
    ]
}