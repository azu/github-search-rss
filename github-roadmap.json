{
    "version": "https://jsonfeed.org/version/1",
    "title": "github/roadmap Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "feed_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "description": "github/roadmap Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">We are providing users with the ability to perform bulk-edits to their board items. This includes updated keyboard shortcuts to navigate through their board and make adjustments to the board items within and between a column, as well as support for multi-select drag and drop to update multiple items at once.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Supporting multi-select drag and drop will allow users to quickly make adjustment to their items when planning out and updating their work, such as moving multiple items from <code class=\"notranslate\">In progress</code> to <code class=\"notranslate\">Done</code> in a single action. Providing keyboard shortcuts to navigate the board and update items will make it easy to quickly change where an item ranks within a column, as well moving it to a different column.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Select multiple board items to drag and drop them from one column to another, or utilize keyboard shortcuts to move an item within a column or to a different column.</p>",
            "url": "https://github.com/github/roadmap/issues/762",
            "title": "Projects: Bulk edit items in board layout",
            "date_modified": "2023-04-11T18:02:32.000Z",
            "date_published": "2023-04-11T18:02:05.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">We are updating the Projects header by surfacing project view configurations directly from the view, rather than within the view configuration dropdown menu. This includes options such as sorting, grouping, and visible fields. This will allow users to easily set up and configure their project views by making them more discoverable, accessible, and easy to use.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">We want to make it easy for users to set up and configure their project, as well as knowing how an existing project is set up. Updating the Projects header to include more customizations directly from the view will make these less confusing and less hidden.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">When a user creates a new project or updates an existing project, they will be able to explore and use the view-level customizations from a more visible and discoverable location, so they can select and configure options such as their <code class=\"notranslate\">sort</code> field, <code class=\"notranslate\">group</code> field, or visible <code class=\"notranslate\">fields</code> to display on the view. When creating a new project view, a user will also be able to select the layout type directly.</p>",
            "url": "https://github.com/github/roadmap/issues/761",
            "title": "Projects: Updated Projects header",
            "date_modified": "2023-04-11T18:02:29.000Z",
            "date_published": "2023-04-11T18:02:02.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/16281246/214384373-b99a25ef-bfd2-4ae8-b0f6-3803c96822f5.png\"><img src=\"https://user-images.githubusercontent.com/16281246/214384373-b99a25ef-bfd2-4ae8-b0f6-3803c96822f5.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">Users will now have the ability to navigate, explore and work with a hierarchy of Issues on GitHub!</p>\n<h2 dir=\"auto\">Feature Highlights:</h2>\n<ul dir=\"auto\">\n<li>Tasklists are powered by a unique Markdown formatting and can easily be added to Issue Templates or created via the API</li>\n<li>Create multi-level hierarchies of Issues from the Issues page or GitHub Projects</li>\n<li>See relevant labels, assignees, and child issues in tasklists</li>\n<li>Explore the hierarchy using breadcrumbs in the Projects side-panel</li>\n<li>Keep track of Issue tasklist completion with the new \"Tracks\" and \"Tracked by\" columns in Projects</li>\n<li>Quickly edit Issue meta-data with in-line editing capabilities</li>\n</ul>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Managing software projects at scale can be challenging without Issue hierarchies. Customers want the ability to create large batches of work (sometimes called Epics) and break those batches down into smaller more manageable tasks; all while tracking progress in a single GitHub Issue or from GitHub Projects.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">See docs: <a href=\"https://docs.github.com/en/issues/tracking-your-work-with-issues/about-tasklists\">https://docs.github.com/en/issues/tracking-your-work-with-issues/about-tasklists</a></p>\n<p dir=\"auto\">In short, custom Markdown formatting with custom rendering, will allow users to create structured Hierarchies of Issues.</p>\n<hr>\n<p dir=\"auto\">If you'd like to gain early access, sign up for the Private Beta here: <a href=\"https://github.com/features/issues/signup\">https://github.com/features/issues/signup</a></p>",
            "url": "https://github.com/github/roadmap/issues/760",
            "title": "[Public Beta] Issue Hierarchy powered by Tasklist",
            "date_modified": "2023-04-10T21:40:30.000Z",
            "date_published": "2023-04-10T21:39:58.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Code scanning default setup will now also analyze the repository's default branch following a pre-configured schedule (like <a href=\"https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule\">GitHub Actions' <code class=\"notranslate\">on: schedule</code> trigger</a>).</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Analyzing the default branch on schedule ensures that a repository's code is scanned and protected even when it is not actively contributed to. This means that repositories will automatically benefit from updates to the CodeQL analysis, even when there are no code changes. This brings the CodeQL default setup configuration in line with the CodeQL starter workflow.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Code scanning default setup sets up CodeQL on a repository without committing a workflow file. This now also analyzes the default branch on weekly schedule. This brings the CodeQL default setup configuration in line with the CodeQL starter workflow.</p>",
            "url": "https://github.com/github/roadmap/issues/759",
            "title": "Code scanning default setup scans `on:schedule`",
            "date_modified": "2023-04-10T22:10:07.000Z",
            "date_published": "2023-04-10T21:39:51.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Users can optionally select the <code class=\"notranslate\">security-extended</code> query suite for analyzing their code code through the code scanning default setup configuration.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Allow repositories to increase query suite coverage in their default setup analysis.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users can manually choose to analyze the <code class=\"notranslate\">security-extended</code> query suite in the code scanning default setup configuration. This query suite will be in addition to the default query suite. <code class=\"notranslate\">security-extended</code> query suite will not be analyzed unless explicitly included in the configuration settings by the user. It will also be possible to change the query suite selection after initial setup.</p>",
            "url": "https://github.com/github/roadmap/issues/758",
            "title": "Code scanning default setup makes it possible to use `security-extended` CodeQL query suite",
            "date_modified": "2023-04-10T22:10:20.000Z",
            "date_published": "2023-04-10T21:39:48.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Most of the GHES customers are set up in HA mode, and many of them (especially larger customers) have geo replication and multiple HA replicas in their configuration. However, we have seen many issues with setup / configure / teardown / failover with multiple replicas. For example: GHES HA failover not working when the primary is unavailable. This impacts the customer experience and deteriorates the perceived reliability of the system.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">The efforts we have planned this quarter will make HA configuration scripts much more reliable, we will improve error handling, and handle failover scenarios more gracefully.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<ul dir=\"auto\">\n<li>Improve connection checks and reliability of <code class=\"notranslate\">ghe-repl-*</code> commands</li>\n<li>Better error handling for offline replicas</li>\n<li>Reliable teardown if primary or any of the replicas are not accessible</li>\n<li>Prevent <code class=\"notranslate\">ghe-config-apply</code> from running if replica is not fully setup</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/757",
            "title": "GHES HA Offering Improvements",
            "date_modified": "2023-04-11T18:02:27.000Z",
            "date_published": "2023-04-10T21:37:37.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">In an effort to make it easier for customers to administer GHES and to minimize unintended mis-configurations, we will support a Cluster HA offering. This will enable a Hot/Hot configuration for stateless services and Hot/Warm cluster topology for stateful services/infrastructure.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Our Cluster HA solution will enable customers with the ability to scale horizontally and more efficiently manage traffic. We choose to be vigilant in meeting the evolving needs and expectations of our customers as their data and organizations grow on GitHub.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<ul dir=\"auto\">\n<li>Make use of secondary cluster hardware to serve traffic</li>\n<li>Fix cluster replication related bugs</li>\n<li>Cluster HA active/passive for stateful nodes only</li>\n<li>Cluster HA active/active (read-only)</li>\n<li>robust tests for Cluster HA</li>\n<li>Improved monitoring and observability</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/756",
            "title": "GHES  Cluster High Availability",
            "date_modified": "2023-04-11T18:02:26.000Z",
            "date_published": "2023-04-10T21:37:34.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Actions currently supports <a href=\"https://docs.github.com/en/actions/using-workflows/storing-workflow-data-as-artifacts#downloading-or-deleting-artifacts\">Artifacts</a> that enable sharing data between jobs in a workflow and store data once that workflow has completed. We are now enhancing artifacts to support decoupling build and deployment workflows and to trigger on-demand deployments from those artifacts.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Previously, we supported only the downloading of artifacts that were uploaded in the same workflow run using the <code class=\"notranslate\">download-artifact</code> action.</p>\n<p dir=\"auto\">These new improvements around Artifacts will now enable teams who want to decouple their CI &amp; CD workflows: build many times but deploy only a specific built artifact version. They could refer-to/download the artifacts that were created as part of a previous run of the same workflow or a different workflow run to trigger a new deployment workflow run.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Developers and DevOps managers can now use the new artifact triggers to orchestrate their on-demand deployments and releases by chaining their build &amp; deployment workflows for specific artifact sources and versions. They can also use the new \"artifact views\" to:</p>\n<ul dir=\"auto\">\n<li>View the full history of artifacts generated in a repository or</li>\n<li>Apply filters across workflows to trace each artifact version back to the specific build run that produced it or</li>\n<li>Understand which of the artifact versions is actually deployed to a specific deployment environment.</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/755",
            "title": "Actions: Artifact-based Deployments",
            "date_modified": "2023-04-11T18:02:25.000Z",
            "date_published": "2023-04-10T21:37:31.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">We have seen GitHub Enterprise Server customers encounter problems with backups and restores due to issues with the way the host that is running <a href=\"https://github.com/github/backup-utils\">backup-utils</a> is set up. We want to update the backup and restore tools so that customers can identify and fix these issues before continuing with the backup or restore operation.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Before running a backup or restore using <code class=\"notranslate\">backup-utils</code> customers understand whether the host they are running <code class=\"notranslate\">backup-utils</code> on meets our software version and disk space requirements.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">We have updated <code class=\"notranslate\">ghe-host-check</code> to output additional information about whether the backup host satisfies the software version and disk space requirements:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/6233292/223197039-87dfacb8-6abe-42b9-a25e-670bec3bf5e7.png\"><img src=\"https://user-images.githubusercontent.com/6233292/223197039-87dfacb8-6abe-42b9-a25e-670bec3bf5e7.png\" alt=\"Image\" style=\"max-width: 100%;\"></a></p>",
            "url": "https://github.com/github/roadmap/issues/754",
            "title": "Backup-utils: Add preflight checks",
            "date_modified": "2023-04-11T18:02:24.000Z",
            "date_published": "2023-04-10T21:37:28.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub apps will be able to call APIs on the enterprise object, by being installed on an enterprise and granted new, fine-grained permissions that control access to the Enterprise. This allows administrators to deprecate the use of PATs (classic) and OAuth apps to manage their enterprises.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">GitHub apps need to be able to operate at the Enterprise layer in order to best automate enterprise operations like managing settings, provisioning users, and reading the audit log. This update helps remove one of the last reasons developers and administrators are forced to use OAuth apps instead of the more secure and manageable GitHub app platform.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">App developers will be able to specify Enterprises as a resource target, similar to how organizations and users are selected today. New fine-grained permissions (such as <code class=\"notranslate\">enterprise_audit_log:read</code>) will be created, which administrators can then grant to apps installed on their enterprise.</p>",
            "url": "https://github.com/github/roadmap/issues/753",
            "title": "Enterprise access for GitHub apps",
            "date_modified": "2023-04-11T18:02:23.000Z",
            "date_published": "2023-04-10T21:37:25.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">The <a href=\"https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning-with-codeql\">CodeQL analysis engine</a> for <a href=\"https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning\">GitHub code scanning</a> will be able to analyze projects written with using new C# 11 language features.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Currently, <a href=\"https://codeql.github.com/docs/codeql-overview/supported-languages-and-frameworks/\">CodeQL supports builds and standard language features up to C# 10</a>. C# 11 is due to be released before EOY 2022. Updating CodeQL support will allow customers who want to adopt C# 11 to benefit from CodeQL's comprehensive security analysis, while using C#11 latest features.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">If a project contains C# 11 code, or if C# has been <a href=\"https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#changing-the-languages-that-are-analyzed\">configured as a language to be analyzed</a> in the <a href=\"https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#about-code-scanning-configuration\">code scanning workflow</a>, CodeQL will pick up code using C# 11 language features automatically. No further configuration changes are needed. As soon as the analysis is finished, the CodeQL results will then become visible to you in the \"Security\" tab and on pull requests. C# 11 support will also be available through the <a href=\"https://codeql.github.com/docs/codeql-cli/about-the-codeql-cli/\">CodeQL CLI</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/663",
            "title": "CodeQL Support for C# 11 language features",
            "date_modified": "2023-04-10T21:44:55.000Z",
            "date_published": "2023-02-22T18:11:26.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Code scanning will allow users to filter alerts by language, in order for individual developers to be able to focus on the code they know (and care about) most.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">The code scanning language filter will help users to sort and manage alerts efficiently by focusing on a specific language. It will also support users to review all language-specific alerts faster after enabling analysis for a new language.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users will be able to filter alerts by language on the code scanning page on the 'Security' tab at the repository level. Filtering will work based on file extension, which means it will work for all code scanning tools, including CodeQL.</p>",
            "url": "https://github.com/github/roadmap/issues/662",
            "title": "Code scanning: Filter alerts by language",
            "date_modified": "2023-04-10T21:44:54.000Z",
            "date_published": "2023-02-22T18:11:23.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Code scanning will allow users to filter alerts by file path, in order for individual developers and security teams to be able to focus on the part of the code they know (and care about) most.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">The code scanning file path filter will help users to sort and manage alerts efficiently by focusing on a specific part of the code related to the project. It will also enable users who work on big repositories (like monorepos) to review all alerts specific to the part of the code they are responsible for.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users will be able to filter alerts by file path on the code scanning page on the 'Security' tab at the repository level. Filtering will work based on file path and extension, which means it will work for all code scanning tools, including the CodeQL engine.</p>",
            "url": "https://github.com/github/roadmap/issues/661",
            "title": "Code scanning: Filter alerts by file path",
            "date_modified": "2023-04-10T21:44:53.000Z",
            "date_published": "2023-02-22T18:11:20.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GHES Management Console authentication is currently based on a single admin password. For many customers this is a security risk since this password is shared and there is no way of having an audit trail about which user made changes to the system.</p>\n<p dir=\"auto\">We are therefore introducing a multi-user concept with a user management interface to the Management Console which will allow administrators to invite new users with different types of roles.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Allow GHES administrators to create separate logins for each user that needs access to the Management Console in GHES.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">GHES administrators can create and manage users that have access to the Management Console from within the Management Console itself. Please note that these users are specific to the Management Console and are not system users, so the <code class=\"notranslate\">admin</code> account will continue to be the only account that can be used to ssh into the appliance.</p>",
            "url": "https://github.com/github/roadmap/issues/660",
            "title": "Multi-user authentication for GHES Management Console - [GA]",
            "date_modified": "2023-03-10T19:49:26.000Z",
            "date_published": "2023-02-22T18:11:17.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">In order to provide users with a consistent sorting experience across all layouts in Projects, the ability to sort board views by field values will be supported. This will allow users to further customize and tailor their views by reordering their items in a way that is most helpful to them.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Supporting the ability to sort work items on a project will allow users to automatically order their items, removing the need to manually reorder work items in board columns and lessening confusion about default sorting order.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users will be able to specify the field they would like to sort their project items by from the view configuration menu, alongside other project customizations.</p>",
            "url": "https://github.com/github/roadmap/issues/659",
            "title": "Projects: Sorting on board layout",
            "date_modified": "2023-04-10T21:44:52.000Z",
            "date_published": "2023-02-22T18:11:14.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Users will be able to create a Roadmap view to visualize issues and their relationships across a timespan and track a body of work towards a deadline.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Providing users with a Roadmap layout will allow them to plan and track their work over time and towards a deadline. It gives users a visual component to understand the timing and progress of their initiatives and communicate with stakeholders.</p>\n<p dir=\"auto\">In addition to the table and board layout types, a roadmap layout will provide users with a visual at-a-glance view of their work items.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">When creating a new project or project view, a user will be able to select a Roadmap layout alongside the table and board layouts. This will populate their work items along a time-based axis, driven by date or iteration fields within the project. They can customize their roadmap view by grouping, sorting, and filtering their work items, as well as selecting a zoom level depending on the granularity they would like to see.</p>\n<p dir=\"auto\">More details can be found in the <a href=\"https://docs.github.com/en/issues/planning-and-tracking-with-projects/customizing-views-in-your-project/customizing-the-roadmap-layout\">documentation</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/658",
            "title": "Projects: Roadmap Layout [GA] ",
            "date_modified": "2023-04-10T21:44:51.000Z",
            "date_published": "2023-02-22T18:11:11.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Today it's hard to know where a npm package came from - what's the source code and how was the package built? Maintainers can optionally specify this information, but it's easy for malicious folks to spoof.</p>\n<p dir=\"auto\">Provenance creates verifiable links back to the source code and build instructions for public npm packages. This gives users of these packages a way to verify the package does what it says. This is a new security capability for package managers, in collaboration with the Sigstore open source project, and it is debuting on npm.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">To increase confidence of supply chain security in the npm ecosystem.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Provenance starts when you build your npm package in a cloud CI/CD provider, like GitHub Actions.</p>\n<p dir=\"auto\">While the build is running, we request an OIDC token from GitHub Actions, which is a signed JWT that includes information about the organization, repository, commit, branch, workflow... all the metadata associated with the build. That signed JWT is sent to Sigstore's public servers, where they verify it came from GitHub, issue a signing certificate to the build with the build metadata stored in X.509 extension OIDs, and record the information on a public ledger.</p>\n<p dir=\"auto\">When the build publishes to npm, it uses a special flag (<code class=\"notranslate\">npm publish --provenance</code>) that includes the Sigstore signing certificate along with the built package. The npm registry records this information and displays it to users via the website and API.</p>",
            "url": "https://github.com/github/roadmap/issues/657",
            "title": "npm package provenance - GA",
            "date_modified": "2023-04-10T21:44:50.000Z",
            "date_published": "2023-02-22T18:05:22.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">For many of our security features (e.g., Dependabot alerts, secret scanning, code scanning), you can enable the feature for all repositories in an organization or for one repository at a time. We intend to provide a solution for organizations to easily filter their repositories on security overview's security coverage page and enable security features for the filtered set of  repositories all with a few clicks.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Enabling and configuring security features on multiple repositories will make it easier to quickly roll out security features across an entire organization.</p>",
            "url": "https://github.com/github/roadmap/issues/656",
            "title": "Bulk-enable security features for multiple repositories",
            "date_modified": "2023-04-10T21:44:49.000Z",
            "date_published": "2023-02-22T18:05:19.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Today, organizations can see only the current status of security alerts and security feature enablement for their repositories.  It's not possible to get a historical view.  We intend to provide trends graphs at the organization level for both security feature enablement and security alerts.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Trend graphs will enable organizations to analyze their security program's performance and gauge overall changes in their security posture.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">We will offer two new pages in security overview: security coverage trends and risk trends that will house trends graphs for the following security features:</p>\n<ul dir=\"auto\">\n<li>Dependabot alerts</li>\n<li>Code scanning alerts</li>\n<li>Secret scanning alerts</li>\n<li>Push protection <em>(enablement trends graph only)</em></li>\n<li>GitHub Advanced Security <em>(enablement trends graph only)</em></li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/655",
            "title": "View a trend of security feature enablement/security alerts",
            "date_modified": "2023-04-10T21:44:48.000Z",
            "date_published": "2023-02-22T18:05:16.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Currently developers use the <a href=\"https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#environment-protection-rules\">environment protection rules</a> to require specific conditions to pass before a deployment job referencing the environment can proceed.</p>\n<p dir=\"auto\">We are now enabling repository administrators to bypass all the protection rules on a given environment (break glass) by default and force the pending jobs referencing the environment to proceed.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Previously, deployments (jobs) gated on the protection rules defined on an environment had to wait until all the configured protection rules passed.</p>\n<p dir=\"auto\">This new feature provides the ncessary granular control for administrators to allow/disallow bypassing the protection rules on specific environments.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">During a workflow run executing multiple deployment Jobs referencing environments, Admins can now choose the specific environments where they would like to bypass the protection rules and force deployments.</p>\n<p dir=\"auto\">We allow admins to bypass protection rules and manually force deployments by default. Alternatively, Environments can also be configured in advance to disallow the bypass feature and enforce the protection rules for all deployments to the environment.</p>",
            "url": "https://github.com/github/roadmap/issues/654",
            "title": "Actions - Granular control for admins to bypass protection rules on an environment (break glass) - [GA] ",
            "date_modified": "2023-04-10T21:44:47.000Z",
            "date_published": "2023-02-22T18:05:13.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        }
    ]
}