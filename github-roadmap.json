{
    "version": "https://jsonfeed.org/version/1",
    "title": "github/roadmap Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "feed_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "description": "github/roadmap Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">It's no easy feat to search and triage issues across repositories when you have many teams working towards a shared goal. Issue types will allow users to classify and manage different types of issues across repositories.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/94867353/265118999-2b2968f8-0e40-4562-adc6-5dcad851bd9c.png\"><img src=\"https://user-images.githubusercontent.com/94867353/265118999-2b2968f8-0e40-4562-adc6-5dcad851bd9c.png\" alt=\"Image\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Some folks have tried to use labels in order to do this - however labels are tied to repositories and label syntax can drift across repos. This makes triaging issues across repos difficult.</p>\n<p dir=\"auto\">We believe that by creating a shared language to standardize work items across repositories we'll unlock reporting and automation use-cases.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users will be able to define issue types (ex. bug, feature request, spike) at the org level and apply this syntax to an issue in a repo.</p>",
            "url": "https://github.com/github/roadmap/issues/837",
            "title": "Issues: Issue Types",
            "date_modified": "2023-11-08T20:09:44.000Z",
            "date_published": "2023-11-08T20:09:03.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">The GitHub-hosted runner portfolio is expanding to include Arm-based hosted runners. These runners will be fully managed by GitHub with a base image containing a foundational set of tools. Powered by the Ampere Altra Arm–based processor, these runners offer a power efficient compute layer which can increase price to performance ratios, allowing customers to optimize compute costs.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Customers are refactoring their applications to take advantage of the price performance benefits of ARM architecture. Developers can now run their workloads on Arm-based hardware hosted by GitHub to build and deploy their release assets anywhere Arm’s architecture is used. These new runners provide power, performance &amp; sustainability improvements for all your Actions jobs.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">To get started using Arm-based GitHub-hosted runners, create a runner in a runner group choosing Arm as the hardware. Then update the <code class=\"notranslate\">runs-on:</code> key in your Actions workflow YAML to have those jobs target the new runner.</p>\n<p dir=\"auto\">To sign up, please visit <a href=\"https://resources.github.com/devops/accelerate-your-cicd-with-arm-and-gpu-runners-in-github-actions/\">this link</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/836",
            "title": "GitHub Actions: Arm based hosted runners (Limited Beta)",
            "date_modified": "2023-11-08T20:09:43.000Z",
            "date_published": "2023-11-08T20:09:00.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Summary</h2>\n<p dir=\"auto\">Customers using GitHub Enterprise Importer, depending on the configuration of their systems, may need to add GitHub's IP addresses to various IP allow lists for migrations to work.</p>\n<p dir=\"auto\">This isn't just GitHub's IP allow list - other IP allow lists can also be involved, for example on Azure DevOps (for migrations from ADO) or AWS S3/Azure Blob Storage storage (for migrations from GitHub Enterprise Server or Bitbucket Data Center/Server).</p>\n<p dir=\"auto\">We're introducing a new IP range, <code class=\"notranslate\">20.125.12.8/29</code>, that customers will need to add to their allow list(s) by November 8, 2023.</p>\n<p dir=\"auto\">If you use IP allow listing on your GitHub enterprise/organization, Azure DevOps organization or blob storage account, and you haven't updated your allow lists by November 8, your migrations may start to fail.</p>",
            "url": "https://github.com/github/roadmap/issues/835",
            "title": "Updated IP ranges for GitHub Enterprise Importer (October 2023)",
            "date_modified": "2023-11-08T20:09:41.000Z",
            "date_published": "2023-11-08T20:08:57.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">On January 8, 2024, we will turn off Subversion support in GitHub.com. We will also turn off Subversion support in the first GitHub Enterprise Server release after January 8, 2024.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Subversion support is little-used by customers (in aggregate) but represents an above-average ongoing support and maintenance burden. Removing it will free up resources to focus on features and support more relevant to the vast majority of our customers.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">After a few brownouts, we will remove the code which powers Subversion support.</p>",
            "url": "https://github.com/github/roadmap/issues/834",
            "title": "Sunset Subversion support",
            "date_modified": "2023-11-08T20:10:55.000Z",
            "date_published": "2023-11-08T20:08:54.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Actions Usage Metrics is an observability tool for DevEx and DevOps teams interested in understanding how Actions workflows are being used by their organization.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Organization administrators will have enough high quality, relevant and actionable data about an their repositories' Actions usage to make important decisions about their Actions consumption and to ensure the success of any future CI/CD workflow change. This data will also help organization administrators control costs and/or improve productivity for developer experience teams.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Actions Usage Metrics is an in-application experience offering granular details about the frequency, duration and total consumption of an organization's Actions workflow files to help identify potential inefficiencies and bottlenecks which, when fixed, may result in increased productivity of engineering teams. An organization admin can breakdown usage by</p>\n<ul dir=\"auto\">\n<li>workflow file</li>\n<li>repository</li>\n<li>runner os</li>\n<li>runner type (hosted, self hosted, larger hosted runners)</li>\n</ul>\n<p dir=\"auto\">Filters and summations will be available to allow for more granular views of the data. Data will also be exportable via .csv file.</p>",
            "url": "https://github.com/github/roadmap/issues/833",
            "title": "Actions Usage Metrics",
            "date_modified": "2023-11-08T20:09:38.000Z",
            "date_published": "2023-11-08T20:08:51.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Thousands of customers use <a href=\"https://docs.github.com/en/migrations/using-github-enterprise-importer\">GitHub Enterprise Importer</a> every month to migrate repositories to GitHub Enterprise Cloud.</p>\n<p dir=\"auto\">We see a very high success rate for migrations today - as high as 99%. But the migration process is much less reliable for the largest repositories - for the biggest 0.1% of repositories, we see a success rate of just 50%.</p>\n<p dir=\"auto\">We're working on significant architectural changes to the tool which we expect to make these large migrations faster and more reliable.</p>\n<p dir=\"auto\">First, we'll test against particular large repos in a private beta. Later, we'll roll out this new architecture to all migrations to provide a fast and reliable migration experience across the board.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Reliably migrate large and complex repos with GitHub Enterprise Importer</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">The flow and functionality will work exactly as it does today ❤</p>",
            "url": "https://github.com/github/roadmap/issues/832",
            "title": "More reliable migrations for large repos in GitHub Enterprise Importer [general availability]",
            "date_modified": "2023-11-08T20:09:37.000Z",
            "date_published": "2023-11-08T20:08:48.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Dependabot security updates creates pull requests to update dependencies that have a vulnerability issued against it. It currently creates one pull request per dependency, but that results in a lot of noise for developers. With this feature, developers will be able to receive multiple security updates in a single pull request.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">We would like to reduce the perceived \"noise\" of Dependabot (i.e. reduce the number of pull requests it opens) while increasing the merge rate of Dependabot pull requests (currently ~20%)</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">People will be able to turn this feature on from repository settings and then Dependabot will group multiple updates into single pull requests</p>",
            "url": "https://github.com/github/roadmap/issues/831",
            "title": "Dependabot Grouped Security Updates [Public Beta]",
            "date_modified": "2023-12-08T18:38:54.000Z",
            "date_published": "2023-11-08T20:08:45.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">We are providing users with the ability to report on the progress, timing, and status of a project through status updates, so everyone can understand the most important high level details about a project. Users will be able to add updates, view the history of updates in a feed, and find all project related information in a single place to understand what a project is about and how it is progressing.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer nofollow\" href=\"https://user-images.githubusercontent.com/101840513/279213051-bc033556-24d4-4ccd-9a3f-dc7372f62542.png\"><img src=\"https://user-images.githubusercontent.com/101840513/279213051-bc033556-24d4-4ccd-9a3f-dc7372f62542.png\" alt=\"project status update\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">By providing users with the ability to add status updates to a project, we will help them</p>\n<ul dir=\"auto\">\n<li>Report on progress, timing, and high-level details from the same place that they're planning and tracking a body of work through issues and pull requests. It will be a central place to understand the details and overview about a project.</li>\n<li>View the history for a project, so they can understand and identify details such as when a project started and completed, why a date shifted, or why it was put on pause.</li>\n<li>Share and surface the most important details about a project, so everyone involved is kept in the loop on the high-level information, and risks can be flagged that require further attention or conversations.</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users will be able to add status updates to a project by specifying the status, dates, and additional information and details. They can view these updates in a feed to understand the progress of a project over time and share out important information.</p>",
            "url": "https://github.com/github/roadmap/issues/830",
            "title": "Projects: Project status updates",
            "date_modified": "2023-11-08T20:09:34.000Z",
            "date_published": "2023-11-08T20:08:42.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Customizable version of <a href=\"https://github.com/pulls\">https://github.com/pulls</a> designed to help users quickly see which pull requests need their attention. Users today must click through multiple tabs and continually refresh the page to get the same list, often resulting in delays and inconvenience on other users that must continually \"ping\" other users to review or perform other actions on their pull requests.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ol dir=\"auto\">\n<li>Help users quickly tell which pull requests are waiting on them</li>\n<li>Reduce the avoidable delays that inevitably happen in every pull request that slow or block progress</li>\n<li>Higher productivity for individual contributors and teams</li>\n</ol>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">When a user navigates to <a href=\"https://github.com/pulls\">https://github.com/pulls</a>, they will see a consolidated view of the pull requests needing attention. This view can be easily filtered or adjusted and saved as a custom view that can be returned to later. This view is also updated on the fly to ensure the latest status is presented so the user can stay on top of the pull requests they are involved in.</p>",
            "url": "https://github.com/github/roadmap/issues/828",
            "title": "Pull Request Dashboard",
            "date_modified": "2023-10-04T19:38:55.000Z",
            "date_published": "2023-10-04T19:30:09.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">This is the initial GA release of Organization Archiving, building on the public beta phase 🎉</p>\n<p dir=\"auto\">This feature enables organization administrators to archive an entire organization at once.</p>\n<p dir=\"auto\">Enterprises with deep usage of GitHub often end up with a confusing and hard-to-manage proliferation of organizations that can number in the dozens or even hundreds. Many of these are stale or obsolete, but previously there was no easy way to archive a once-active organization: you had to individually archive each repository in the org, and even then the top-level org still permitted repo creation, new teams, etc. This added to the toil of enterprise administration and made for an inconsistent, unpleasant experience for open source maintainers, OSPO managers, and IT teams responsible for managing their GitHub presence.</p>\n<p dir=\"auto\">Our new feature lightens this burden by adding a button to the Organization Settings \"Danger Zone\" which will:</p>\n<ul dir=\"auto\">\n<li>archive all the repositories in the organization</li>\n<li>restrict many \"write\" activities in that organization, such as creating new repos</li>\n<li>set a key in the API to indicate the org has been archived</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/827",
            "title": "Organization Archiving - GA",
            "date_modified": "2023-11-08T20:09:33.000Z",
            "date_published": "2023-10-04T19:16:34.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Actions Hosted runners will now include the option to build your own virtual machine image to power your workflows that are run on GitHub Actions. This allows developers to gain control over their supply chain and reduce the average duration of their workflows by customizing the software, tools, and files on Actions Hosted runners before a workflow starts.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">33% of Actions people run are to set up tools/dependencies on their machine before they even start to download images/packages that their application is dependent on. This takes time on every run of that workflow. With custom images developers can now customize those pre-installed tools, saving time by creating a \"pre-warmed\" machine.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">GitHub's image customization allows developers to use their existing workflow YAML to produce images which can be used as the base for their different developer environments. Developers can use the new syntax to take the state of their current environment and save that to an image to be used in future workflows.</p>",
            "url": "https://github.com/github/roadmap/issues/826",
            "title": "Actions: Custom VM Images for GitHub-hosted runners (Beta)",
            "date_modified": "2023-11-08T20:12:02.000Z",
            "date_published": "2023-09-14T16:01:34.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">We are now shipping a few enhancements around Actions environments guarded by \"deployment protection rules\" to make it easy for admins to secure their deployment rollouts.</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><strong>Prevent self-reviews</strong> : Actions environments allows <a href=\"https://docs.github.com/en/actions/reference/environments#required-reviewers\">required reviewers</a> to provide manual approvals to control deployments across environments. Previously, a user could trigger a workflow and also self-approve a deployment that references an environment where they are one of the required reviewers. We are now introducing an option for environment admins to prevent self-reviews and secure their deployments targeting their critical environments. This would require a different approver to review and sign off the deployments, rather than the same user who triggered the run - making the deployments more secure.</p>\n</li>\n<li>\n<p dir=\"auto\"><strong>Allow deployments only for selected Tag patterns</strong> - Previously we supported <a href=\"https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#deployment-branches\">Deployment Branches</a> with \"Selected Branches\" option. We are now enhancing this feature for controlling deployments to an environment based on “selected tag patterns”.</p>\n</li>\n<li>\n<p dir=\"auto\"><strong>Configurable timeout for protection rules</strong> - Currently required reviewers (manual approvals) and other deployment protection rules (including <a href=\"https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment#custom-deployment-protection-rules\">custom protection rules</a> that are powered by GitHub Apps) configured on an environment have a default of 30 days, post which the deployments timeout and will be considered as \"failed\" deployments. We are now reducing this default to 5 days and allowing it to be configurable upto 15 days as it will help more controlled deployment rollouts.</p>\n</li>\n</ul>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">These enhancements will help admins to have more secure and controlled deployments across Environments</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Admins who want to have more controlled deployments can now prevent self-reviews, configure Tag patterns to say, allow only Releases/* Tags to deploy to their Production Environment. And also configure that if a reviewer doesn't approve a deployment beyond 5 days, then the deployment would just fail.</p>",
            "url": "https://github.com/github/roadmap/issues/825",
            "title": "Actions: More secure deployments to protected environments",
            "date_modified": "2023-11-08T20:09:32.000Z",
            "date_published": "2023-09-14T16:01:30.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Currently, all status checks configured as \"required\" for a branch in branch protections or repository rules must pass before a pull request can be merged or added to the queue. These same checks must also pass before a change is merged by the queue. Sometimes it's unnecessary to run certain checks in both places, but there's currently no way around this if the status check is required.</p>\n<p dir=\"auto\">There are also cases where different sets of status checks need to be run based on the changes made in the pull request. This is usually done to reduce CI time and cost and ensure only necessary status checks are run. However, a status check that does not always run cannot be configured as required since it would block merging of changes were the check wasn't run.</p>\n<p dir=\"auto\">The solution is giving teams more ways to configure which status checks are required in different contexts and without having to configure a fixed set of status checks upfront.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ul dir=\"auto\">\n<li>Reduce CI costs by not running unnecessary checks</li>\n<li>Reduce time-to-merge</li>\n<li>Avoid requirement to use custom apps and workflows to rollup and report summary when the set of required checks is variable</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Admins have other options for choosing which status checks are required. For example, one option may be to require all reported status checks must pass.</p>",
            "url": "https://github.com/github/roadmap/issues/824",
            "title": "More control over required status checks for pull requests",
            "date_modified": "2023-11-08T20:13:34.000Z",
            "date_published": "2023-09-06T18:09:07.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">When a user accepts a code snippet that has a match to public code, we will now notify them via a pop-up message and an alert in their Visual Studio Code status bar. Upon clicking the notification, they'll be able to review the sets of repos where matching code exists as well as an aggregate count of the associated licenses.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Last year, we introduced a GitHub Copilot feature that allows developers to silently block suggestions greater than 150 characters that match public code. But the world’s developers have a diverse perspective of wants and needs when they’re building. While simply blocking public code can be useful, a number of developers told us they actually want to see code matches. Some want to learn from other’s code;  some may want to take a package dependency rather than introduce new business logic; still others want to give or receive credit for similar work. With this feature, we hope to enable them to review extra information about the match and make the decision best fit for them.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">If GitHub Copilot makes a suggestion matching public code, it’ll share a list of the repositories where that code can be found, and their licenses – all right in the editor. If there’s a match, a pop-up window appears that shows you all of the code matches, what their repository licenses are, and how many repositories—including repositories without licenses—that code appears in, as well as links to those repositories.</p>",
            "url": "https://github.com/github/roadmap/issues/823",
            "title": "Code referencing for code completion in Visual Studio Code",
            "date_modified": "2023-10-12T16:41:43.000Z",
            "date_published": "2023-09-06T18:09:00.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Copilot for Business users will now be able to review updates and changes to their Copilot settings through the <a href=\"https://docs.github.com/en/organizations/keeping-your-organization-secure/managing-security-settings-for-your-organization/reviewing-the-audit-log-for-your-organization#accessing-the-audit-log\">audit log</a>.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">With any large organization or enterprise, it's important to be able to trace settings updates and purchases. We want to empower our organization and enterprise admins to be able to investigate any changes to their Copilot for Business account and settings without having to reach out to support.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">We'll integrate with the existing audit log feature by emitting relevant events from the Copilot for Business service. These events will include but are not limited to:</p>\n<ul dir=\"auto\">\n<li>Adding Copilot access for a user/team</li>\n<li>Removing Copilot access for a user/team</li>\n<li>Updating the duplicate detection policy</li>\n<li>Updating the seat assignment policy (No members, all org members, select members)</li>\n<li>Updating the chat access policy</li>\n</ul>",
            "url": "https://github.com/github/roadmap/issues/822",
            "title": "Audit Log: Copilot for Business events",
            "date_modified": "2023-11-08T19:23:20.000Z",
            "date_published": "2023-09-06T18:08:58.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Customers can now configure a list of IP address or domains that are allowed to be accessible by GitHub-hosted runners.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">This feature allows platform administrators to control their Enterprise or org-owned GitHub-hosted runners to only access approved destinations while blocking access to everything else giving them control on the network security of their build machines. This also enables teams to run workflows on GitHub-hosted runners that require access to private resources (private artifact repository, on-prem test database, cloud-based storage etc.) as software is deployed.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Platform administrators can enter a range of allowed IPs or domains while configuring a runner group. All runners created as part of that runner group will inherit the outbound allow-list and will only be able to reach the approved destinations.</p>",
            "url": "https://github.com/github/roadmap/issues/821",
            "title": "Actions: Outbound network control for GitHub-hosted runners",
            "date_modified": "2023-11-08T20:12:01.000Z",
            "date_published": "2023-09-06T18:07:30.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Actions Importer helps users plan, forecast, and automate the migration of their existing CI/CD pipelines to GitHub Actions. With this update, we will be adding support for Atlassian's CI/CD products: Bamboo Server, Bamboo Data Center, and BitBucket. Users can migrate their Bamboo and BitBucket pipelines to GitHub Actions easily and for free using the official GitHub CLI or our issue ops flow.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ul dir=\"auto\">\n<li>Simplify the pipeline migration process for Bamboo Server, Bamboo Data Center &amp; BitBucket Pipeline users by automating manual and tedious steps</li>\n<li>Reduce the potential for errors during migration and speed up development teams</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users will be able to migrate existing Bamboo &amp; BitBucket pipelines to GitHub Actions using the <code class=\"notranslate\">audit</code>, <code class=\"notranslate\">forecast</code>, <code class=\"notranslate\">dry-run</code>, and <code class=\"notranslate\">migrate</code> subcommands of gh actions-importer</p>",
            "url": "https://github.com/github/roadmap/issues/820",
            "title": "GitHub Actions Importer: Bamboo & BitBucket Support",
            "date_modified": "2023-11-08T20:12:00.000Z",
            "date_published": "2023-09-06T18:07:27.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub launched public betas for both Apple Silicon and more powerful Intel runners in the past calendar year. We are thrilled to announce that our latest macOS runners are now generally available to developers worldwide.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">GitHub Actions makes it easy for developers, teams, and enterprises who need the latest Mac hardware to run workflows on either Apple Silicon (M1) or the latest Intel hardware. Having multiple VM sizes provides the option to choose the right level of performance for your CI/CD workloads.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">To begin using larger macOS runners, you can update the \"runs-on\" key in your Actions workflow to the target runner images that are compatible with the larger runners.</p>",
            "url": "https://github.com/github/roadmap/issues/819",
            "title": "GitHub Actions: macOS Larger Runners (GA)",
            "date_modified": "2023-11-08T20:11:59.000Z",
            "date_published": "2023-09-06T18:07:24.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">We released our <a href=\"https://github.blog/changelog/2023-06-13-enterprise-managed-users-connector-support-for-ping-federate-is-now-in-public-beta\" rel=\"nofollow\">support for Ping Identity's GitHub EMU Connector for Ping Federate in June of this year</a>. We are on track for general availability on 2023-09-06.</p>\n<hr>",
            "url": "https://github.com/github/roadmap/issues/818",
            "title": "Ping Federate Connector for EMU enterprises",
            "date_modified": "2023-09-25T19:13:09.000Z",
            "date_published": "2023-09-06T18:07:21.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">We want to improve the experience for GitHub Enterprise Server administrators by offering a command line interface (CLI) for the <a href=\"https://docs.github.com/en/enterprise-server@latest/rest/enterprise-admin/manage-ghes?apiVersion=2022-11-28\">Manage GitHub Enterprise Server API</a>. This gives administrators control over their Enterprise Server instance without requiring SSH access.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Enterprise Server administrators will be able to manage their instance/s using the CLI, either from on the instance or from an external host.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">We will extend the existing <code class=\"notranslate\">gh</code> CLI to include commands for all of the endpoints currently in the <a href=\"https://docs.github.com/en/enterprise-server@3.10/rest/enterprise-admin/manage-ghes?apiVersion=2022-11-28\">Manage GitHub Enterprise Server API</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/817",
            "title": "Create a command line interface for the Manage GitHub Enterprise Server API",
            "date_modified": "2023-11-08T20:11:58.000Z",
            "date_published": "2023-09-06T18:07:18.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        }
    ]
}