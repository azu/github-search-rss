{
    "version": "https://jsonfeed.org/version/1",
    "title": "github/roadmap Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "feed_url": "https://azu.github.io/github-search-rss/github-roadmap.json",
    "description": "github/roadmap Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub will release substantial improvements to searching code, including flexible search syntax, filtering by language and path, smart ranking of results, and rich symbol information and navigation.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Developers frequently need to pause their work to search, discover, navigate, and understand other code. This is particularly challenging when the answers are spread across multiple organizations and repositories. The longer it takes for developers to find what they need, the more context they lose about their work in progress and the more difficult it is to get back into a flow state. GitHub's vision for this roadmap item is to help developers find what they need quickly and intuitively to sustain their context and productivity.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">In December 2021, we released a technology preview of these new capabilities, now with a search index of over 12 million repositories. We encourage you to <a href=\"https://cs.github.com/about\">sign up for it now</a> and <a href=\"https://github.com/github/feedback/discussions/categories/code-search-and-navigation-feedback\">give us your feedback</a>. Using what we're learning from the technology preview, our next step is to graduate its capabilities to GitHub.com proper, replacing its current code search experience. This roadmap item represents the culmination of that effort. Here are a few of the anticipated features:</p>\n<ul dir=\"auto\">\n<li>Easily find what you’re looking for among the top results, with smart ranking and an index that is optimized for code.</li>\n<li>Search for an exact string, with support for substring matches and special characters, or use regular expressions (enclosed in <code class=\"notranslate\">/</code> separators).</li>\n<li>Scope your searches with <code class=\"notranslate\">org:</code> or <code class=\"notranslate\">repo:</code> qualifiers, with auto-completion suggestions in the search box.</li>\n<li>Refine your results using filters like <code class=\"notranslate\">language:</code>, <code class=\"notranslate\">path:</code>, <code class=\"notranslate\">extension:</code>, and Boolean operators (<code class=\"notranslate\">OR</code>, <code class=\"notranslate\">NOT</code>). Search for definitions of a symbol with <code class=\"notranslate\">symbol:</code>.</li>\n<li>Get your bearings quickly with additional features like symbol information for the active scope, find references, jump-to-definition, select-to-search, and more!</li>\n</ul>\n<p dir=\"auto\">This mockup image shows how certain features might look:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/167199532-1c9e3fe1-a6ce-4205-a122-58f766f33a69.png\"><img src=\"https://user-images.githubusercontent.com/1767415/167199532-1c9e3fe1-a6ce-4205-a122-58f766f33a69.png\" alt=\"A mockup image that shows how some of the features might look\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">For more details, visit <a href=\"https://cs.github.com/about/faq\">frequently asked questions</a> of the technology preview and check out the preview's <a href=\"https://cs.github.com/about/syntax\">search syntax</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/517",
            "title": "Powerful new code search capabilities",
            "date_modified": "2022-05-18T19:28:09.000Z",
            "date_published": "2022-05-18T19:27:17.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Pull requests are an important way to keep repositories safe from untrusted code. Using a <a href=\"https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule\">branch protection rule</a>, admins can require pull requests and approving reviews before changes can be merged into a target branch. That setup is shown here:</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/163292820-8d7aeba3-29c0-4243-bf40-d88cbbc83827.png\"><img width=\"776\" alt=\"Require pull requests with at least two approvals\" src=\"https://user-images.githubusercontent.com/1767415/163292820-8d7aeba3-29c0-4243-bf40-d88cbbc83827.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">But what if the threat is from someone reviewing the pull request? A bad actor with the right permissions could patch a pull request with malicious code and leave an approving review <em>themselves</em>. Their approval may be all that's needed to merge the code into a mainline branch where it can find its way into production.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">A new branch protection setting will prevent users who push changes to a pull request from being able to approve that pull request (or have their existing approval count). That helps ensure that changes are reviewed by someone other than the person who made them. GitHub initially built this protection for itself to meet <a href=\"https://en.wikipedia.org/wiki/FedRAMP\" rel=\"nofollow\">FedRAMP</a> security requirements. Now that it's baked, we're making it available to customers. This is part of GitHub's overall effort to strengthen repository security.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">To use the feature, <a href=\"https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule\">create or edit a branch protection rule</a>. While editing the rule's settings, it's a best practice to enable the top option, <strong>Require a pull request before merging</strong>, and choose a number of required approvals. Then, enable the new feature by selecting <strong>Ignore approving reviews from pull request contributors</strong>, shown below. Be sure to save the settings.</p>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/163297750-e2cf2598-4971-4384-af2a-e708170dab0b.png\"><img width=\"773\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1767415/163297750-e2cf2598-4971-4384-af2a-e708170dab0b.png\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\"><strong>Tip:</strong> it can be frustrating for developers to contribute to a pull request and then discover that they can no longer approve it. To help avoid this, make everyone aware of the policy and ensure that enough people are available to meet the required number of approvals.</p>",
            "url": "https://github.com/github/roadmap/issues/516",
            "title": "Admins can require PR approvals to be from people who didn't contribute to the PR",
            "date_modified": "2022-05-18T19:28:08.000Z",
            "date_published": "2022-05-18T19:27:14.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<h4 dir=\"auto\">Background</h4>\n<p dir=\"auto\">With <a href=\"https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/about-protected-branches\">branch protection rules</a>, you can enforce certain workflows or requirements before a collaborator can push changes to a branch in your repository, including merging a pull request into the branch. Some branch protection settings allow exempting certain users, teams, or <strong>GitHub Apps</strong> from specific requirements. This image shows the Hubot GitHub App being enabled to bypass a branch protection setting:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/166243534-88105d99-0ceb-4a65-a3e9-06acf6328619.png\"><img src=\"https://user-images.githubusercontent.com/1767415/166243534-88105d99-0ceb-4a65-a3e9-06acf6328619.png\" alt=\"Image of a GitHub App being enabled to bypass a branch protection setting\" style=\"max-width: 100%;\"></a></p>\n<h4 dir=\"auto\">Problem</h4>\n<p dir=\"auto\">Currently, some branch protection settings allow exempting users and teams, but not GitHub Apps, as shown here:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/166244604-0e04c8e9-ca20-489b-bee6-8ef0b5f3f252.png\"><img src=\"https://user-images.githubusercontent.com/1767415/166244604-0e04c8e9-ca20-489b-bee6-8ef0b5f3f252.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">This doesn't allow a repository's automation - often in the form of a GitHub App - to be configured as an exception. For example, when pull requests are required of users, a project's automation would not be able to bypass pull requests to perform a Git <code class=\"notranslate\">push</code>.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">This feature will add support for GitHub Apps as exceptions to any branch protection setting that allows exceptions.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">As shown in the top image above, you will be able to add GitHub Apps to the exception list of any branch protection setting that supports exceptions.</p>\n<p dir=\"auto\">We appreciate feedback on this and other topics in GitHub's <a href=\"https://github.com/github/feedback/discussions/\">public feedback discussions</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/515",
            "title": "GitHub Apps can be added to all branch protection setting exception lists",
            "date_modified": "2022-05-18T19:28:07.000Z",
            "date_published": "2022-05-18T19:27:11.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">This feature will let admins require developers to sign off on commits made through GitHub's web interface, such as when editing a file or merging a pull request. It will also make it easier for developers to complete those signoffs.</p>\n<p dir=\"auto\"><strong>Note:</strong> Signing off on a commit is different than <a href=\"https://docs.github.com/en/authentication/managing-commit-signature-verification/signing-commits\">signing a commit</a>, such as with a GPG key.</p>\n<h4 dir=\"auto\">Background</h4>\n<p dir=\"auto\">The Git command line interface has a <a href=\"https://git-scm.com/docs/git-commit#Documentation/git-commit.txt--s\" rel=\"nofollow\"><code class=\"notranslate\">--signoff</code></a> option that developers use to sign off on their commits. Many open-source organizations require developers to sign off on changes to affirm their compliance with repository rules and licensing. Git's <code class=\"notranslate\">--signoff</code> option appends a specially formatted line to the commit message, as shown here:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"Signed-off-by: Mona Lisa &lt;mona@github.com&gt;\"><pre class=\"notranslate\"><code>Signed-off-by: Mona Lisa &lt;mona@github.com&gt;\n</code></pre></div>\n<p dir=\"auto\">This text is often called a “DCO signoff” because the most common signoff agreement is the <a href=\"https://developercertificate.org/\" rel=\"nofollow\">Developer Certificate of Origin (DCO)</a> from the Linux Foundation.</p>\n<h4 dir=\"auto\">Problems</h4>\n<p dir=\"auto\">Open-source projects often use pull request checks to block commits from being merged unless they're signed off. Here’s an example of a commit being blocked in the open-source <a href=\"https://github.com/gradle/gradle-profiler/\">Gradle Profiler</a> repository which requires DCO signoffs:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/166159897-49cfbbc0-c7be-4efb-ab14-15d5a7bf5659.png\"><img src=\"https://user-images.githubusercontent.com/1767415/166159897-49cfbbc0-c7be-4efb-ab14-15d5a7bf5659.png\" alt=\"A pull request check that failed because a commit was not signed off\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">This problem is more likely when committing from GitHub's web interface where Git’s <code class=\"notranslate\">--signoff</code> option isn't available. To sign off there, developers must manually add the <code class=\"notranslate\">Signed-off-by:</code> text to their commit message. That's easy to overlook or misformat, resulting in the commit being blocked from merging. Resolving this situation can be complicated and slow developers down, as shown in these instructions to fix one commit:</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/166236147-8ae48936-5cf4-45be-9429-372900e7ff09.png\"><img src=\"https://user-images.githubusercontent.com/1767415/166236147-8ae48936-5cf4-45be-9429-372900e7ff09.png\" alt=\"Instructions for amending a commit that is not signed off\" style=\"max-width: 100%;\"></a></p>\n<p dir=\"auto\">In the words of an open-source contributor:</p>\n<blockquote>\n<p dir=\"auto\">As a pull request reviewer, this is my biggest pain point. If someone forgets to manually sign off on a commit in the web UI, the pull request check fails, and the only resolution is to rebase or squash and force push to fix the commit message. Either way, the review history becomes unclear. This is high friction for new/infrequent contributors and people forget.</p>\n</blockquote>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">This feature will simplify signing off on commits made in GitHub's web interface so that it's easier for developers, fewer commits are blocked from merging, and less time is spent resolving the blocked commits.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<ul dir=\"auto\">\n<li>Admins will be able to toggle a setting that requires developers to sign off on commits made through GitHub's web interface.</li>\n<li>When the setting is enabled, the web interface will inform developers that their action of committing will also constitute signing off. It will look similar to the mocked-up image below. Like using Git's <code class=\"notranslate\">--signoff</code> option on the command line, signing off in GitHub's web interface will automatically append the <code class=\"notranslate\">Signed-off-by:</code> text to the developer's commit message.</li>\n</ul>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/1767415/166171381-b70438c7-928a-4429-8947-610e74178eec.png\"><img src=\"https://user-images.githubusercontent.com/1767415/166171381-b70438c7-928a-4429-8947-610e74178eec.png\" alt=\"GitHub's web interface for committing will inform developers that they are also signing off when they commit\" style=\"max-width: 100%;\"></a></p>\n<h3 dir=\"auto\">Other information</h3>\n<p dir=\"auto\">Related to this feature, GitHub is planning a repository protection that blocks commits that aren't signed off, whether the commits are made in GitHub's web interface or pushed from the command line or another Git client.</p>\n<p dir=\"auto\">We appreciate feedback on this and other topics in GitHub's <a href=\"https://github.com/github/feedback/discussions/\">public feedback discussions</a>.</p>",
            "url": "https://github.com/github/roadmap/issues/514",
            "title": "Admins can require that developers sign off on commits made in the web interface",
            "date_modified": "2022-05-18T19:28:06.000Z",
            "date_published": "2022-05-18T19:27:08.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Actions will add the ability to run your workflow jobs on the latest macOS version from Apple, Monterey.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Run your Actions workflow jobs on the latest iteration of Apple's macOS platform.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Update your workflow jobs to include <code class=\"notranslate\">runs-on: macos-12</code></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"jobs:\n  build:\n    runs-on: macos-12\n    steps:\n      - uses: actions/checkout@v2\n      - name: Build\n        run: swift build\n      - name: Run tests\n        run: swift test\"><pre class=\"notranslate\"><code>jobs:\n  build:\n    runs-on: macos-12\n    steps:\n      - uses: actions/checkout@v2\n      - name: Build\n        run: swift build\n      - name: Run tests\n        run: swift test\n</code></pre></div>",
            "url": "https://github.com/github/roadmap/issues/513",
            "title": "Actions: macOS 12 (Monterey) is now generally available for GitHub-hosted runners ",
            "date_modified": "2022-05-18T19:28:04.000Z",
            "date_published": "2022-05-18T19:27:05.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Currently, users can choose to archive a project they are no longer using, we're adding the ability to delete a project.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">When built, this feature will allow users to permanently delete a project.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">The ability to delete a project will be available through the project's settings page.</p>",
            "url": "https://github.com/github/roadmap/issues/512",
            "title": "Ability to delete an existing GitHub Project",
            "date_modified": "2022-05-18T19:28:03.000Z",
            "date_published": "2022-05-18T19:27:02.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">We're releasing an explorable archive for all items archived within your GitHub project.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Added the ability to ...</p>\n<ul dir=\"auto\">\n<li>See when an item was archived and by whom</li>\n<li>Explore their archive quickly and easily with the filter bar</li>\n<li>View previously archived draft issues</li>\n<li>Bulk restore or delete items in the archive</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Check out a walkthrough of the explorable archive below!</p>\n<details open=\"\" class=\"details-reset border rounded-2\">\n  <summary class=\"px-3 py-2\">\n    <svg aria-hidden=\"true\" height=\"16\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" data-view-component=\"true\" class=\"octicon octicon-device-camera-video\">\n    <path fill-rule=\"evenodd\" d=\"M16 3.75a.75.75 0 00-1.136-.643L11 5.425V4.75A1.75 1.75 0 009.25 3h-7.5A1.75 1.75 0 000 4.75v6.5C0 12.216.784 13 1.75 13h7.5A1.75 1.75 0 0011 11.25v-.675l3.864 2.318A.75.75 0 0016 12.25v-8.5zm-5 5.075l3.5 2.1v-5.85l-3.5 2.1v1.65zM9.5 6.75v-2a.25.25 0 00-.25-.25h-7.5a.25.25 0 00-.25.25v6.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-4.5z\"></path>\n</svg>\n    <span aria-label=\"Video description Archive.Walkthrough.mov\" class=\"m-1\">Archive.Walkthrough.mov</span>\n    <span class=\"dropdown-caret\"></span>\n  </summary>\n\n  <video src=\"https://user-images.githubusercontent.com/16281246/162990380-23748538-bbe6-48fd-991e-1527abc17d92.mov\" data-canonical-src=\"https://user-images.githubusercontent.com/16281246/162990380-23748538-bbe6-48fd-991e-1527abc17d92.mov\" controls=\"controls\" muted=\"muted\" class=\"d-block rounded-bottom-2 border-top width-fit\" style=\"max-height:640px;\">\n\n  </video>\n</details>\n",
            "url": "https://github.com/github/roadmap/issues/511",
            "title": "Explorable archive for Projects ",
            "date_modified": "2022-05-18T20:10:09.000Z",
            "date_published": "2022-05-18T19:26:59.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">The GitHub Projects team is releasing one of our <a href=\"https://github.com/github/feedback/discussions/5381\" data-hovercard-type=\"discussion\" data-hovercard-url=\"/github/feedback/discussions/5381/hovercard\">most requested features</a>, a full-featured issue side-panel.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">In part, we're building this feature to achieve parity with legacy projects.</p>\n<p dir=\"auto\">However, alongside the some of the features you know and love from legacy projects (like editing title, description, labels and assignees) we've added the ability to...</p>\n<ul dir=\"auto\">\n<li>Read, add and edit issue comments</li>\n<li>Edit project meta-data (like project-specific single-select fields)</li>\n<li>View and add emoji reactions <g-emoji class=\"g-emoji\" alias=\"sparkles\" fallback-src=\"https://github.githubassets.com/images/icons/emoji/unicode/2728.png\">✨</g-emoji> to issues and issue comments</li>\n<li>Archive or delete issues directly from the side-panel</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">The issue side-panel will be able to be accessed by simply clicking on any issue which is on a project board.</p>\n<p dir=\"auto\">For users who prefer to go directly to the issue page, simply <code class=\"notranslate\">cmd</code> + <code class=\"notranslate\">click</code> on Mac OS or <code class=\"notranslate\">ctrl</code> + <code class=\"notranslate\">click</code> on Windows/Linux to open the issue in a new tab.</p>",
            "url": "https://github.com/github/roadmap/issues/510",
            "title": "Adding an Issue Side-Panel to Github Projects",
            "date_modified": "2022-05-18T19:28:00.000Z",
            "date_published": "2022-05-18T19:26:56.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Last year, we shipped support for <a href=\"https://github.blog/changelog/2021-09-23-github-advisory-database-now-includes-rust-advisories/\" rel=\"nofollow\">Rust in the Advisory Database</a>, and have already curated around <a href=\"https://github.com/advisories?query=type%3Areviewed+ecosystem%3Arust\">400 advisories</a> impacting specific Crates in the Cargo package registry. In this feature, we will enable Rust end to end across the our supply chain features including Dependabot and the dependency graph.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Rust is an increasingly important programming language community, especially for mission critical applications which need memory safety and performance.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">The dependency graph parses the manifest files that developers check into their repositories. We will parse <code class=\"notranslate\">Cargo.toml</code> files to better understand what Cargo crates a repository uses and populate those into the dependency graph. If the Advisory Database has advisories for those specific crates, then we will generate Dependabot alerts</p>",
            "url": "https://github.com/github/roadmap/issues/509",
            "title": "Dependency graph and Dependabot alerts add support for Rust ",
            "date_modified": "2022-05-18T19:27:59.000Z",
            "date_published": "2022-05-18T19:26:53.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Varying by gender and geography, color blindness could affect up to 8% of the world's population, with a majority impacted by the red/green color spectrum. As red and green have become ubiquitous indicators for status (open vs. closed, pass vs. failed) as well as for communicating warning or destructive action states, colorblind users are forced to use shape and iconography to interpret meaning from UI. This new theme swaps colors like red and green across GitHub.com for orange and blue to make GitHub more inclusive for users with Protanopia &amp; Deuteranopia color blindness.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Users with Protanopia &amp; Deuteranopia color blindness are able to use github.com with a light and dark theme that uses more colors within their visible spectrum.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">From the <a href=\"https://github.com/settings/appearance\">appearance settings</a> page, a user is able to choose from the light and dark Protanopia &amp; Deuteranopia colorblind themes in their preferred theme settings.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/33528647/135456151-7d12909b-5848-4e66-a0d3-3b656be9718a.gif\"><img src=\"https://user-images.githubusercontent.com/33528647/135456151-7d12909b-5848-4e66-a0d3-3b656be9718a.gif\" alt=\"colorblind theme preview\" data-animated-image=\"\" style=\"max-width: 100%;\"></a></p>",
            "url": "https://github.com/github/roadmap/issues/508",
            "title": "Protanopia & Deuteranopia Colorblind Theme Beta",
            "date_modified": "2022-05-18T21:53:44.000Z",
            "date_published": "2022-05-18T19:26:50.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">The GitHub Actions runner application is now compatible with Apple silicone based hardware, which gives developers the capability to execute workflows using Apple’s latest M1 processor. Developers around the world running Actions workflows via self-hosted runner, will now be able unlock the full potential of their macOS development ecosystem.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">The GitHub Actions runner application is now compatible with Apple’s latest M1 processor providing developers with the ability to run self-hosted macOS workflows in a OSX arm64 runtime.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">To ensure your macOS runner is configured properly, specify the “osx-arm64” runtime in your Actions YAML file.</p>",
            "url": "https://github.com/github/roadmap/issues/507",
            "title": "Actions: Self-hosted runners now support Apple M1 silicon",
            "date_modified": "2022-05-18T19:27:57.000Z",
            "date_published": "2022-05-18T19:26:47.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub-hosted macOS runners now provide more power and choice with the availability of larger macOS runners. Apple developers who need more power to reduce build times and increase velocity will have the hardware required to efficiently build, test, and deploy their software.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">More powerful macOS runners reduce job run times, increasing your development velocity and delivering value faster.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">To get started using more powerful GitHub-hosted macOS runners, create a new GitHub-hosted runner with the desired machine specifications. Then, update the <code class=\"notranslate\">runs-on:</code> key in your Actions workflow YAML to have those jobs target your larger runner. These larger mac instances are based on our current Intel powered machines. For more information about when Apple silicon will be made available in our GitHub-hosted mac runners see the related item elsewhere on the roadmap.</p>",
            "url": "https://github.com/github/roadmap/issues/506",
            "title": "Actions: More powerful macOS runners are now available for GitHub-hosted runners",
            "date_modified": "2022-05-18T19:25:47.000Z",
            "date_published": "2022-05-18T19:25:04.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Action runners will now include the option to choose GPU runners to enable Machine learning Ops workloads to be run on GitHub actions. These new GPU runners come pre-loaded with the drivers and tools developers/data scientists need to.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Enable ML Ops workloads to fully embrace GitHub Actions without the overhead of managing their own infrastructure or paying a 3rd party provider to manage infrastructure for them.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Users will be able to enable GPU machines as part of their runner groups. From here their team will be able to pick up and use these runners simply by changing their <code class=\"notranslate\">runs_on</code> key within their workflow YAML. These are fully managed by GitHub and have all the drivers required for the users to just 'pick up and go' with their ML workloads</p>",
            "url": "https://github.com/github/roadmap/issues/505",
            "title": "Actions: GPU enabled GitHub-hosted runners (Beta)",
            "date_modified": "2022-05-18T20:00:34.000Z",
            "date_published": "2022-05-18T19:25:01.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">GitHub Actions administrators now have a single management plane to look after all of the runners their teams are using in GitHub. This new management plane provides new information such as queue history, average wait time and aggregated runner data so that administrators can proactively add new runner types or capacity to get ahead of their developers having issues. This experience seamlessly brings together GitHub hosted and self hosted runners- providing a single place for administrators to empower their developers to succeed.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">GitHub provides a single experience that empowers administrators to view, understand and manage their teams access to runners regardless of where they are running. Admins can do this in a way that lets them set the right policies and guard rails to keep developers safe, while avoiding interrupting them.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">We will provide runner groups for 'all of GitHub runners', review how labels work to simplify them and provide experiences to understand job history on pools of machines -regardless of where those pools are running. This will all extend on what we have today for runner groups, which empowers administrators to provide the right Actions runners resources to the right repos, with the right guard rails in place.</p>",
            "url": "https://github.com/github/roadmap/issues/504",
            "title": "Actions: Seamless management of GitHub-hosted & self-hosted runners",
            "date_modified": "2022-05-18T20:00:33.000Z",
            "date_published": "2022-05-18T19:24:58.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Organisations no longer need to make users into Org admins so that they can support GitHub Actions. Users can now be given the permissions they need to manage 'just' GitHub Actions at the org level. This reduces the load on admins, allows the right people to have the right control over the runners for their organisation and reduces the risk of giving people more permissions than they need.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">Today many customers are either over burdening their Git admins by also making them into CI/CD admins, due to their only being one permission. Others are having to take their CI/CD admins and make them 'global GitHub Admins' which given the ever growing functionality in GitHub is a significant scope for their role. Each org admin account has a large blast radius if compromised, so reducing the number of Org admins and having the right Role Based Access Controls (RBAC) in place is top of mind for a lot of customers.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">Customers will be able to choose which of their users they want to give 'just' the permissions which are required to manage their GitHub Actions CI/CD experience across their organisation. These users will then be able to only see the Actions settings which allow them to support their teams CI/CD as part of their org settings.</p>",
            "url": "https://github.com/github/roadmap/issues/503",
            "title": "Actions: New permissions to enable management of runners for CI/CD, without requiring administrator privileges",
            "date_modified": "2022-05-18T20:00:32.000Z",
            "date_published": "2022-05-18T19:24:55.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Dependency caching is one of the most effective ways to make jobs faster on GitHub Actions. However, there is no great way to clear caches or debug issues with them. Also, while we evict caches at a certain threshold limit, the cache performance can take a hit when the storage is near its quota. This prevents some customers from using the Actions cache.</p>\n<p dir=\"auto\">In the last quarter we have enabled cache users to view and monitor their current cache storage usage within a Repository. We are now enhancing the Cache management experience for users to list and delete their cache entries within a Repository.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ul dir=\"auto\">\n<li>GitHub Actions enables customers to cache intermediate outputs and dependencies for their workflows. Caching is an effective way to make jobs faster and a management experience for cache usage would further promote its adoption.</li>\n<li>Cache Management makes it easier to debug caching issues and provides greater control over cache usage by enabling users to view and delete existing caches.</li>\n<li>As we expand caching to ES and AE, a self-serve way will all admins to troubleshoot and debug corrupted caches.</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">We will enable cache users to list and delete their cache entries across all the workflows in their repository using APIs and CLI.</p>",
            "url": "https://github.com/github/roadmap/issues/502",
            "title": "Actions: Ability to list and delete caches (Cloud) ",
            "date_modified": "2022-05-18T20:00:31.000Z",
            "date_published": "2022-05-18T19:24:52.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Organisations want to standardise their security and deployment workflows using <a href=\"https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect\">OpenID Connect (OIDC)</a> based cloud policies to define access to specific resources in AWS, Azure, GCP, and other clouds. However this configuration experience is complex for our multi-cloud customers because each cloud has a different way of defining these.</p>\n<p dir=\"auto\">Now, GitHub Actions provides an API that allows customers to customise the OIDC claims sent to each cloud. This allows customers to have a single configuration across all their clouds and meet their compliance and security needs - such as requiring that all deployments for a set of repositories use the same 'Deploy to Kubernetes' workflow that their DevSecOps team has pre-approved.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ul dir=\"auto\">\n<li>Enable enterprises to use reusable workflows and OIDC to enforce consistent deployments across repositories, organizations, or the enterprise.</li>\n<li>Enable OIDC policies based on repo visibility to restrict only private repositories within an organization to assume the cloud role.</li>\n<li>Enable robust and reliable OIDC claims with system generated GUIDs that do not change between renames of entities (ex: repository renames)</li>\n<li>Support advanced OIDC policies based on custom combinations of claims (Eg: environment and branch, branch and actor etc.)</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">With the new API based OIDC configuration enabled by GitHub, developers can now customize the format of standard OIDC claims like “subject” and “Issuer” to further standardize and security harden their deployment steps across all the clouds.<br>\nWe are also adding additional claims like repo ID and repo visibility into the OIDC token to enable more advanced OIDC policies.</p>",
            "url": "https://github.com/github/roadmap/issues/501",
            "title": "Actions: Enhancements to Open ID Connect support to enable secure cloud deployments at scale ",
            "date_modified": "2022-05-18T20:00:30.000Z",
            "date_published": "2022-05-18T19:24:49.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Prebuilds enable fast codespace creation experience regardless of the size and complexity of the repository by performing all the heavy-lifting tasks required to build your development environment beforehand. Think of a prebuild as a 'ready-to-go' template where your source code, editor extensions, project dependencies, commands, or configurations have already been downloaded, installed, and applied so that you don't have to wait for these tasks to finish in real-time every time you create a new Codespace.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">By using prebuilds, the time to create a new codespace for a project can decrease significantly, going from several minutes in some cases down to seconds.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<h4 dir=\"auto\">Existing functionality that will be generally available</h4>\n<ul dir=\"auto\">\n<li>Repository admins can create and manage prebuild configurations in their repo's settings page.</li>\n</ul>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/30297258/166293331-439a66e9-f9b8-4cf7-be79-49e15d679919.png\"><img width=\"700\" alt=\"image\" src=\"https://user-images.githubusercontent.com/30297258/166293331-439a66e9-f9b8-4cf7-be79-49e15d679919.png\" style=\"max-width: 100%;\"></a></p>\n<ul dir=\"auto\">\n<li>Developers can create codespaces from 'prebuild ready' machine types to avail of fast creation times.</li>\n</ul>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/30297258/166293587-ad872a42-f4e0-4571-aac0-7a899a364652.png\"><img src=\"https://user-images.githubusercontent.com/30297258/166293587-ad872a42-f4e0-4571-aac0-7a899a364652.png\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h4 dir=\"auto\">New features that will be released with generally availability</h4>\n<ul dir=\"auto\">\n<li>Repo admins can temporarily disable prebuild workflows to investigate failures and re-enable them when ready</li>\n</ul>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/30297258/166294151-0d7ba293-decb-4788-896a-51c956652618.png\"><img width=\"700\" alt=\"image\" src=\"https://user-images.githubusercontent.com/30297258/166294151-0d7ba293-decb-4788-896a-51c956652618.png\" style=\"max-width: 100%;\"></a></p>\n<ul dir=\"auto\">\n<li>Repo admins can specify a set of members to notify in case of prebuild workflow failures to help with quicker investigations towards mitigating any issues.</li>\n</ul>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/30297258/166294669-a6918bd6-528c-40b8-87d2-a73baebc72a9.png\"><img width=\"700\" alt=\"image\" src=\"https://user-images.githubusercontent.com/30297258/166294669-a6918bd6-528c-40b8-87d2-a73baebc72a9.png\" style=\"max-width: 100%;\"></a></p>\n<ul dir=\"auto\">\n<li>Repo admins can specify how many versions of prebuild configurations should be retained at a given point of time to help with cost control around storage for older versions.</li>\n</ul>\n<p><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://user-images.githubusercontent.com/30297258/166295057-950e0907-0e9f-4d5a-9e11-d7c7523ee594.png\"><img width=\"700\" alt=\"image\" src=\"https://user-images.githubusercontent.com/30297258/166295057-950e0907-0e9f-4d5a-9e11-d7c7523ee594.png\" style=\"max-width: 100%;\"></a></p>\n<h4 dir=\"auto\">Pricing at general availability:</h4>\n<p dir=\"auto\">You can learn more on the pricing for prebuilding codespaces here: <a href=\"https://docs.github.com/en/codespaces/prebuilding-your-codespaces/about-codespaces-prebuilds#about-billing-for-codespaces-prebuilds\">https://docs.github.com/en/codespaces/prebuilding-your-codespaces/about-codespaces-prebuilds#about-billing-for-codespaces-prebuilds</a></p>",
            "url": "https://github.com/github/roadmap/issues/500",
            "title": "Codespaces: Prebuilds general availability ",
            "date_modified": "2022-05-18T20:00:29.000Z",
            "date_published": "2022-05-18T19:24:46.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Today, GitHub’s audit log streaming feature requires storage of cloud secrets in GitHub when configuring your stream. Going forward, the audit log feature will support OpenID Connect (OIDC) for streaming partners.  OIDC allows for the use of short-lived tokens that are automatically rotated for each configuration.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<ul dir=\"auto\">\n<li>With the new OpenID Connect (OIDC) support, you can stream to  one of our five streaming partners</li>\n<li>OpenID token exchange eliminates the need for storing any long-lived cloud secrets in GitHub</li>\n<li>Enterprise owners can use the security mechanisms of their cloud provider to ensure minimal access to cloud resources</li>\n</ul>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">OIDC will establish an identity layer between GitHub and AWS for the purposes of authenticating GitHub to stream audit log events to a specified AWS S3 bucket.  Enterprise owners will establish trust with the GitHub  audit log application and assign audit log  a role with write permissions to the S3 bucket. When streaming GitHub events via audit log streaming, GitHub will authenticate the cloud role and the Github audit log identity using short lived tokens.</p>",
            "url": "https://github.com/github/roadmap/issues/499",
            "title": "Open ID Connect (OIDC) for GHEC Audit Log Streaming to AWS S3",
            "date_modified": "2022-05-18T20:00:28.000Z",
            "date_published": "2022-05-18T19:24:43.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67656570?u=71034939d8d88be6d9b9068038dfdc8158fa69c0&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Enterprise Support Bundles enable GitHub Enterprise Server customers to share information with GitHub, when they need support.</p>\n<p dir=\"auto\">We are making improvements to the efficiency of the end-to-end generation and upload process in order to reduce the amount of time it takes for GitHub to support customers.</p>\n<h3 dir=\"auto\">Intended Outcome</h3>\n<p dir=\"auto\">GitHub Enterprise Server should be a reliable and highly available product for all customers. When customers experience incidents or problems, we work to help them restore service as quickly as possible.</p>\n<p dir=\"auto\">By reducing the amount of time it takes to generate and extract data from an Enterprise Support Bundle, we can help customers diagnose and resolve incidents faster.</p>\n<h3 dir=\"auto\">How will it work?</h3>\n<p dir=\"auto\">This initiative will not result any customer-facing changes to the Support Bundle generation process. We will reduce the time to generate and analyse bundles by optimising data at the point of collection and compression, and optimising GitHub's internal analysis tools to extract insight more quickly.</p>",
            "url": "https://github.com/github/roadmap/issues/498",
            "title": "Enterprise Support Bundles are more efficient",
            "date_modified": "2022-05-18T20:00:27.000Z",
            "date_published": "2022-05-18T19:24:40.000Z",
            "author": {
                "name": "github-product-roadmap",
                "url": "https://github.com/github-product-roadmap"
            }
        }
    ]
}