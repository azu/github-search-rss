{
    "version": "https://jsonfeed.org/version/1",
    "title": "npm/statusboard Issues",
    "home_page_url": "https://azu.github.io/github-search-rss/npm-statusboard.json",
    "feed_url": "https://azu.github.io/github-search-rss/npm-statusboard.json",
    "description": "npm/statusboard Issues on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36607?u=79d8c114db476a7ecc6328b328f71d9d758368c7&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Split audit and node-integration into separate columns outside of status</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Consistently name CI jobs for filtering across repos</li>\n</ul>",
            "url": "https://github.com/npm/statusboard/issues/643",
            "title": "working to get statusboard green",
            "date_modified": "2023-02-13T17:51:15.000Z",
            "date_published": "2023-02-02T18:23:29.000Z",
            "author": {
                "name": "wraithgar",
                "url": "https://github.com/wraithgar"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/424045?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Epic</h3>\n<p dir=\"auto\">A common problem in the npm ecosystem is the need to distribute pre-compiled binary assets. To do this today involves either a <code class=\"notranslate\">postinstall</code> script in the package that fetches the asset that corresponds to the current system, or publishing each binary asset as its own package in npm and using optional dependencies on all of them.</p>\n<p dir=\"auto\">Neither of these alternatives is ideal. A <code class=\"notranslate\">postinstall</code> script means that users cannot use the <code class=\"notranslate\">--ignore-scripts</code> flag or the script won't run. The use of a series of optional dependencies requires the consumer to attempt to require every one of them in sequence until they find one that's installed (or don't!). It also means that the package-lock.json will only include the optional dependency that was actually installed as part of this particular installation.</p>\n<h3 dir=\"auto\">Exit criteria</h3>\n<ol dir=\"auto\">\n<li>A package should have a means of defining <code class=\"notranslate\">distributions</code>, a means of mapping system parameters to specific sub-packages.</li>\n<li>Distribution sets should be <em>fully included</em> in the <code class=\"notranslate\">package-lock.json</code> in order to eliminate churn and correctly lock <em>all</em> distributions available rather than only the one that successfully installed on the current host.</li>\n<li>Only <em>one</em> matching distribution should actually get installed.</li>\n</ol>\n<h3 dir=\"auto\">Tasks</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> review existing RFC</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> answer open questions from RFC</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> investigate potential backwards compatibility</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> determine how the consuming package knows which (if any) distribution is available (<code class=\"notranslate\">require</code> them all?)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> contact some projects who could benefit from distributions and discuss their needs</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> ask ourselves if we're solving the <em>right</em> problem, do we want to make the current workarounds easier or do we want to create a brand new flow?</li>\n</ul>\n<h3 dir=\"auto\">Supporting documentation</h3>\n<ul dir=\"auto\">\n<li><a aria-label=\"Pull request #519\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1122163157\" data-permission-text=\"Title is private\" data-url=\"https://github.com/npm/rfcs/issues/519\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/npm/rfcs/pull/519/hovercard\" href=\"https://github.com/npm/rfcs/pull/519\">npm/rfcs#519</a></li>\n</ul>",
            "url": "https://github.com/npm/statusboard/issues/642",
            "title": "Package Distributions",
            "date_modified": "2023-02-08T18:40:02.000Z",
            "date_published": "2023-01-31T22:01:08.000Z",
            "author": {
                "name": "nlf",
                "url": "https://github.com/nlf"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5888249?u=6523cc0547f97dc9125b1cb19a61f992e7b06a86&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>",
            "url": "https://github.com/npm/statusboard/issues/641",
            "title": "Get the Nodejs contract and alignment documented in Node repo",
            "date_modified": "2023-02-08T18:42:38.000Z",
            "date_published": "2023-01-31T20:35:06.000Z",
            "author": {
                "name": "saquibkhan",
                "url": "https://github.com/saquibkhan"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36607?u=79d8c114db476a7ecc6328b328f71d9d758368c7&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Discussion issue for deciding the <code class=\"notranslate\">engines</code> entry in future npm versions.</p>\n<p dir=\"auto\">Recently the setting has been a balance between all currently supported node versions at the time of setting, and features within those major node versions we expect to use in npm in the next year.</p>\n<p dir=\"auto\">We may want to consider being more aggressive with the floor of the range, only including versions of node in which this version of npm is expected to be targeted for a backport.</p>",
            "url": "https://github.com/npm/statusboard/issues/640",
            "title": "Engines setting for npm 10 and beyond",
            "date_modified": "2023-01-31T18:08:19.000Z",
            "date_published": "2023-01-31T18:00:40.000Z",
            "author": {
                "name": "wraithgar",
                "url": "https://github.com/wraithgar"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/7879476?u=87176db8f8b5699253411865f7d52a90faf5ff54&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">This epic is a continuation of <a href=\"https://github.com/npm/statusboard/issues/414\" data-hovercard-type=\"issue\" data-hovercard-url=\"/npm/statusboard/issues/414/hovercard\">Linked Install Strategy - part 1</a></p>\n<p dir=\"auto\">Bugs</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <a aria-label=\"Issue #637\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1558599556\" data-permission-text=\"Title is private\" data-url=\"https://github.com/npm/statusboard/issues/637\" data-hovercard-type=\"issue\" data-hovercard-url=\"/npm/statusboard/issues/637/hovercard\" href=\"https://github.com/npm/statusboard/issues/637\">#637</a></li>\n</ul>\n<h3 dir=\"auto\">Exit Criteria</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> testing complete\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> MS Outlook hands on testing</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> new smoke tests with linked install strategy</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> cigtm with linked install strategy</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> any major bug fixes closed</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> msft team onboared and migrated to npm</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Performance benchmark and numbers</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> npmjs Document changes</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> announcement blog post</li>\n</ul>",
            "url": "https://github.com/npm/statusboard/issues/639",
            "title": "Linked Install Strategy - part 2 | Testing & Migration",
            "date_modified": "2023-02-23T11:45:11.000Z",
            "date_published": "2023-01-31T16:10:37.000Z",
            "author": {
                "name": "raiyanalam",
                "url": "https://github.com/raiyanalam"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/91213?u=c5d308beaf78f91744200e6507109f04ad881503&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Outcomes</h3>\n<ul dir=\"auto\">\n<li>Performance: Facilitate npm in resource constrained environments (Android, Dev Boards, cheaper CI, better GitHub Actions performance)</li>\n<li>Composibility: Additional Workflows and Modes (<code class=\"notranslate\">npm add</code>, support more community tool workflows)</li>\n<li>Better Dev Momentum (composable approach with isolated logic leads to easier feature adds and bugfixes)</li>\n</ul>\n<h3 dir=\"auto\">Current Shortcomings</h3>\n<ul dir=\"auto\">\n<li>Package tree objects contain getters and setters with a lot of embedded logic, making the debugging of workflows difficult, and supporting more workflows impossible. <a aria-label=\"Issue #469\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1173932050\" data-permission-text=\"Title is private\" data-url=\"https://github.com/npm/statusboard/issues/469\" data-hovercard-type=\"issue\" data-hovercard-url=\"/npm/statusboard/issues/469/hovercard\" href=\"https://github.com/npm/statusboard/issues/469\">#469</a></li>\n<li>State is built across Arborist in a single assumed workflow, making debugging difficult and supporting more features spread everywhere.</li>\n<li>Coding style has an emphasis on a single mixed-in object with strict access restrictions, leading to difficult to read code. Newer JS features makes much of this unnecessary.</li>\n<li>Parallelization and resource restrictions are currently unbounded.</li>\n</ul>\n<h3 dir=\"auto\">Philosophy</h3>\n<p dir=\"auto\">A composable function-based approach, avoiding embedded logic, keeping descriptive tasks isolated and small.</p>\n<ul dir=\"auto\">\n<li>Tree objects should not have embedded logic beyond initialization. Getters should be used sparingly, and setters not at all. Functionally mutating the tree should be done with outside or static functions, isolated in purpose.\n<ul dir=\"auto\">\n<li>Adding or removing nodes from the tree should not mutate other nodes. If mutation logic is required, an external or static function should be used.</li>\n</ul>\n</li>\n<li>Tree attributes should have clearly documented single values (for example, the current <code class=\"notranslate\">Node.name</code> could be any number of values symbolizing the path or package name).</li>\n<li>A dependency tree, disk tree, dependency diff, and disk diff tree serve separate purposes, although may be linked on a node-by-node basis.</li>\n</ul>\n<p dir=\"auto\">The main <code class=\"notranslate\">Arborist</code> class should keep minimal state relating to configuration and command arguments.</p>\n<ul dir=\"auto\">\n<li>Workflow functions keep state logic as scoped variables rather than instance-wide.</li>\n<li>Workflow functions should be clearly labeled by naming convention or comments</li>\n<li>A functions set of purposes of creating new tree object, mutating a tree, accesses io, mutating the disk should be clearly labeled by naming convention, arguments, or comments</li>\n<li>A functions purpose must be kept as singular as practical.\n<ul dir=\"auto\">\n<li>A function should not both mutate a tree and the disk, for example.</li>\n</ul>\n</li>\n</ul>\n<p dir=\"auto\">Workflow functions should manage parallelization intelligently through Promises.</p>\n<ul dir=\"auto\">\n<li>Gathering promises into arrays should be done when parallelization is possible.</li>\n<li><code class=\"notranslate\">Promise.any</code>, <code class=\"notranslate\">all</code>, <code class=\"notranslate\">finally</code>, etc should be used</li>\n<li>IO operations, specifically package retrieval and extraction, should be done ask Tasks that can be parallelized or broken into separate workers or processes.</li>\n</ul>\n<p dir=\"auto\">The API is organized into two tiers for different audiences. The primary APIs should be Query results, Workflow functions, and CLI. Secondarily, developers should have access to the small functions that make up Workflows as well as Tree objects composed of Nodes and Links for writing their own workflows.</p>\n<h3 dir=\"auto\">Testing Brainstorm</h3>\n<p dir=\"auto\">Remove coverage map, fix coverage (1 week)<br>\nFind single point to start new testing.  Tests go in net new area (precedent for this is in npm 7).  This is where we flesh out the starting points for the rest of the epic. (2 weeks)<br>\nThe rest of the quarter is spent writing/porting tests to the new format.  Refactoring can only happen when the new tests fully cover a file we want to change.</p>\n<p dir=\"auto\">Part of this is going to be defining the surface area of Arborist.  This is not easy to do currently and realistically is going to fall out of the new tests. As we write new tests one criteria we need to think about is \"Is this part of the surface area of arborist that we plan on supporting going forward?</p>\n<h3 dir=\"auto\">New testing plan:</h3>\n<p dir=\"auto\">Come up with new / existing mocks for how we want to interface w/ arborist.  This will need to be only what we need each time, but made in a way we can expand as we go.  Mock-registry is the pattern for this.</p>\n<ul dir=\"auto\">\n<li>mock registry (exists, will likely need expanding as we iterate)</li>\n<li>mock packages (mock registry does some of this but not on disk)</li>\n<li>assertions of state need to be meaningful.  What are we testing?  formatSnapshot</li>\n<li>testing disk state.  packuments match fixtures?  what about script execution?</li>\n<li>testing logical state.  formatSnapshot will be the big thing here.  npm query output is maybe a good starting point?  how do nodes serialize?</li>\n</ul>\n<p dir=\"auto\">npm snapshot command tests are probably the best latest iteration on this idea, setting t.context.  for testing both disk and logical state</p>\n<h3 dir=\"auto\">Steps</h3>",
            "url": "https://github.com/npm/statusboard/issues/638",
            "title": "Epic: Refactor Arborist for Performance and Flexiblity",
            "date_modified": "2023-01-30T17:46:49.000Z",
            "date_published": "2023-01-27T00:10:46.000Z",
            "author": {
                "name": "fritzy",
                "url": "https://github.com/fritzy"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/91213?u=c5d308beaf78f91744200e6507109f04ad881503&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This issue tracks known issues, feedback, fixes, and broken repos for <code class=\"notranslate\">--install-strategy=linked</code></p>\n<h2 dir=\"auto\">Known Issues/Fixes:</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> workspace specific installs failing\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">.children</code> should be <code class=\"notranslate\">CaseInsensitiveMap</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">.inventory</code> might as well be <code class=\"notranslate\">Inventory</code></li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> .bin discovery failing (although placed correctly)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> package cleanup breaking on failed installs (possibly related to build scripts)</li>\n</ul>\n<h2 dir=\"auto\">Known Failed Repos/Packages:</h2>\n<ul dir=\"auto\">\n<li>npm/cli narrowed down to a specific workspace <code class=\"notranslate\">-ws</code></li>\n<li><a href=\"https://github.com/npm/documentation\">https://github.com/npm/documentation</a></li>\n<li><code class=\"notranslate\">npm install --install-strategy=linked lmbd</code></li>\n</ul>",
            "url": "https://github.com/npm/statusboard/issues/637",
            "title": "Linked Install Strategy Bugs and Feedback",
            "date_modified": "2023-02-16T18:12:27.000Z",
            "date_published": "2023-01-26T18:43:48.000Z",
            "author": {
                "name": "fritzy",
                "url": "https://github.com/fritzy"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/424045?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><strong>Is your feature request related to a problem? Please describe.</strong></p>\n<p dir=\"auto\">Yes. For example, if a user runs <code class=\"notranslate\">npm install --legacy-peer-deps</code> followed by <code class=\"notranslate\">npm ls</code> without including the <code class=\"notranslate\">--legacy-peer-deps</code> flag, they will see errors in their tree related to peer dependencies. Running <code class=\"notranslate\">npm ls --legacy-peer-deps</code> however, returns correctly.</p>\n<p dir=\"auto\"><strong>Describe the solution you'd like</strong></p>\n<p dir=\"auto\">We should store flags that impact the shape of the dependency tree in the package-lock.json, this way future commands can be aware those flags were used and can enable them, providing our users a more consistent experience. For our users who disable <code class=\"notranslate\">package-lock.json</code> (like ourselves, we do that) this data should be persisted in the hidden lockfile as well.</p>\n<p dir=\"auto\"><strong>Describe alternatives you've considered</strong></p>\n<p dir=\"auto\">The only alternative I can think of is implicitly saving these settings to a project level <code class=\"notranslate\">.npmrc</code>. This could be a viable approach too.</p>\n<p dir=\"auto\"><strong>Additional context</strong></p>\n<p dir=\"auto\">Here's a spot to link related issues as we find them:</p>",
            "url": "https://github.com/npm/statusboard/issues/636",
            "title": "feat: store flags that impact tree building in the package-lock.json",
            "date_modified": "2023-01-26T18:34:49.000Z",
            "date_published": "2023-01-26T17:24:47.000Z",
            "author": {
                "name": "nlf",
                "url": "https://github.com/nlf"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/542108?u=2c20c6b8a5298ef8cccf5e4cf0013bae865d0dc7&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Here's a list of flaky tests I've seen across our supported repos:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">npm/cli</code>: get node integration green</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">@npmcli/arborist</code>: <a href=\"https://github.com/npm/cli/actions/runs/3928786524\">https://github.com/npm/cli/actions/runs/3928786524</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">npm/ignore-walk</code>: <a href=\"https://github.com/npm/ignore-walk/actions/runs/3928775936\">https://github.com/npm/ignore-walk/actions/runs/3928775936</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">fs-minipass</code>: <a href=\"https://github.com/npm/fs-minipass/actions/runs/3984841403\">https://github.com/npm/fs-minipass/actions/runs/3984841403</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">minipass-fetch</code>: <a href=\"https://github.com/npm/minipass-fetch/actions/runs/4009475310/jobs/6884876964\">https://github.com/npm/minipass-fetch/actions/runs/4009475310/jobs/6884876964</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">make-fetch-happen</code>: <a href=\"https://github.com/npm/make-fetch-happen/actions/runs/3927650948/jobs/6714458250\">https://github.com/npm/make-fetch-happen/actions/runs/3927650948/jobs/6714458250</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">tap-nock</code>: <a href=\"https://github.com/npm/tap-nock/actions/runs/4126626699/jobs/7128805133\">https://github.com/npm/tap-nock/actions/runs/4126626699/jobs/7128805133</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">read-package-json</code>: <a href=\"https://github.com/npm/read-package-json/actions/runs/4126624250/jobs/7128799142\">https://github.com/npm/read-package-json/actions/runs/4126624250/jobs/7128799142</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">metavuln-calculator</code>: <a href=\"https://github.com/npm/metavuln-calculator/actions/runs/4126696910/jobs/7128958897\">https://github.com/npm/metavuln-calculator/actions/runs/4126696910/jobs/7128958897</a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">normalize-package-data</code>: <a href=\"https://github.com/npm/normalize-package-data/actions/runs/4126748375/jobs/7129080000\">https://github.com/npm/normalize-package-data/actions/runs/4126748375/jobs/7129080000</a></li>\n</ul>",
            "url": "https://github.com/npm/statusboard/issues/631",
            "title": "Flaky tests",
            "date_modified": "2023-02-08T17:39:02.000Z",
            "date_published": "2023-01-18T18:14:22.000Z",
            "author": {
                "name": "lukekarrys",
                "url": "https://github.com/lukekarrys"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5888249?u=6523cc0547f97dc9125b1cb19a61f992e7b06a86&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">ADR (work in progress) - <a href=\"https://docs.google.com/document/d/1gKTQCMnHiknkrDgvNfS7Jazcy_PewXXjfCiXd9c0aSA/edit#heading=h.2jbpiftbl7u0\" rel=\"nofollow\">https://docs.google.com/document/d/1gKTQCMnHiknkrDgvNfS7Jazcy_PewXXjfCiXd9c0aSA/edit#heading=h.2jbpiftbl7u0</a></p>",
            "url": "https://github.com/npm/statusboard/issues/626",
            "title": "Design / RFC / ADR for Automated publishing of npm packages from CI/CD",
            "date_modified": "2023-01-31T14:52:28.000Z",
            "date_published": "2023-01-11T18:35:16.000Z",
            "author": {
                "name": "saquibkhan",
                "url": "https://github.com/saquibkhan"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36607?u=79d8c114db476a7ecc6328b328f71d9d758368c7&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Epic</h3>\n<p dir=\"auto\">One of the last puzzle pieces in our release process is the actual <code class=\"notranslate\">publish</code> command.  The eventual goal is publishing to npm from actions alongside all of the other release actions we currently do.</p>\n<p dir=\"auto\">Initial implementation should be opt-in (i.e. repo-level config) driven by template-oss.  OIDC or 2fa will be required.  Human intervention to either kick off or allow the completion of the publish process will also be needed.</p>\n<p dir=\"auto\">Action items still need to be defined.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <a aria-label=\"Issue #626\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1529499978\" data-permission-text=\"Title is private\" data-url=\"https://github.com/npm/statusboard/issues/626\" data-hovercard-type=\"issue\" data-hovercard-url=\"/npm/statusboard/issues/626/hovercard\" href=\"https://github.com/npm/statusboard/issues/626\">#626</a></li>\n</ul>\n<ul dir=\"auto\">\n<li>Driven by template-oss</li>\n<li>Developer-driven (either to start or continue)</li>\n<li>Access limited to npm-cli team</li>\n<li>OIDC/2fa required</li>\n<li>Opt-in per repo (we can discuss if we want this, or want to make updating template-oss the \"opt-in\" action)</li>\n<li>publish config? (i.e. provenance config per repo)</li>\n</ul>\n<p dir=\"auto\">We can then move our repos over to this process.</p>",
            "url": "https://github.com/npm/statusboard/issues/625",
            "title": "Automated publishing of npm packages from CI/CD",
            "date_modified": "2023-01-12T18:07:53.000Z",
            "date_published": "2023-01-11T15:13:23.000Z",
            "author": {
                "name": "wraithgar",
                "url": "https://github.com/wraithgar"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/498775?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Is there an existing issue for this?</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> I have searched the existing issues</li>\n</ul>\n<h3 dir=\"auto\">Current Behavior</h3>\n<p dir=\"auto\">with the new default <code class=\"notranslate\">--auth-type</code> being web in npm 9 we have unintentionally broken workflows that are using <code class=\"notranslate\">--otp</code>, which has no function in the <code class=\"notranslate\">web</code> auth-type.</p>\n<h3 dir=\"auto\">Expected Behavior</h3>\n<p dir=\"auto\">let's have <code class=\"notranslate\">--otp</code> infer <code class=\"notranslate\">--auth-type=web</code> to unbreak workflows and fix expected beahvior</p>\n<h3 dir=\"auto\">Steps To Reproduce</h3>\n<ol dir=\"auto\">\n<li>In this environment...</li>\n<li>With this config...</li>\n<li>Run '...'</li>\n<li>See error...</li>\n</ol>\n<h3 dir=\"auto\">Environment</h3>\n<ul dir=\"auto\">\n<li>npm:</li>\n<li>Node:</li>\n<li>OS:</li>\n<li>platform:</li>\n</ul>",
            "url": "https://github.com/npm/statusboard/issues/624",
            "title": "[BUG] `--otp` should infer`--auth-type=legacy`",
            "date_modified": "2023-01-12T04:15:18.000Z",
            "date_published": "2023-01-10T17:07:16.000Z",
            "author": {
                "name": "MylesBorins",
                "url": "https://github.com/MylesBorins"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36607?u=79d8c114db476a7ecc6328b328f71d9d758368c7&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">We need to break out the invalid signature error handling to be able to account for integrity errors alongside provenance errors.  For now provenance errors will be thrown from the audit command but that code should be implemented in a way that's easy to move to pacote once sigstore 1.0 lands</p>",
            "url": "https://github.com/npm/statusboard/issues/623",
            "title": "npm query invalid signature refactor",
            "date_modified": "2023-01-11T15:10:36.000Z",
            "date_published": "2023-01-09T19:25:02.000Z",
            "author": {
                "name": "wraithgar",
                "url": "https://github.com/wraithgar"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5888249?u=6523cc0547f97dc9125b1cb19a61f992e7b06a86&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">ADR/Design Doc ready</p>\n<h2 dir=\"auto\">Exit Criteria</h2>\n<ul dir=\"auto\">\n<li>ADR/Design Doc ready</li>\n<li>We can partner with security team early on #npm-support channel</li>\n<li>Later we should do formal security review</li>\n</ul>\n<p dir=\"auto\">Stretch</p>\n<ul dir=\"auto\">\n<li>customer research</li>\n<li>there is scope to collaborate with dependabot team and see if they can adopt this solution, if dependabot can also respect these policies.</li>\n</ul>\n<p dir=\"auto\">cc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/MylesBorins/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/MylesBorins\">@MylesBorins</a></p>",
            "url": "https://github.com/npm/statusboard/issues/622",
            "title": "ADR, Scope and identify engg tasks for Audit Policies and Filters",
            "date_modified": "2023-02-14T14:01:52.000Z",
            "date_published": "2023-01-09T19:22:34.000Z",
            "author": {
                "name": "saquibkhan",
                "url": "https://github.com/saquibkhan"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5888249?u=6523cc0547f97dc9125b1cb19a61f992e7b06a86&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Create brief gap analysis for installing/building Outlook on m365 with <code class=\"notranslate\">npm --install-strategy=linked</code>, and communicate results with Microsoft 1JS.</p>",
            "url": "https://github.com/npm/statusboard/issues/621",
            "title": "Outlook o365 build with npm gap analysis",
            "date_modified": "2023-02-09T18:42:21.000Z",
            "date_published": "2023-01-09T19:15:16.000Z",
            "author": {
                "name": "saquibkhan",
                "url": "https://github.com/saquibkhan"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5888249?u=6523cc0547f97dc9125b1cb19a61f992e7b06a86&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>",
            "url": "https://github.com/npm/statusboard/issues/620",
            "title": "Reify store links",
            "date_modified": "2023-01-26T18:13:22.000Z",
            "date_published": "2023-01-09T19:15:13.000Z",
            "author": {
                "name": "saquibkhan",
                "url": "https://github.com/saquibkhan"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/542108?u=2c20c6b8a5298ef8cccf5e4cf0013bae865d0dc7&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Problem Statement</h3>\n<p dir=\"auto\">In the <code class=\"notranslate\">npm/cli</code> repo the following query should return an empty set since none of the direct dependents are <code class=\"notranslate\">.dev</code> deps:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"npm query ':root &gt; #npm-package-arg.dev'\n# should also apply to this\nnode . query ':root &gt; .dev &gt; #npm-package-arg'\"><pre class=\"notranslate\"><code class=\"notranslate\">npm query ':root &gt; #npm-package-arg.dev'\n# should also apply to this\nnode . query ':root &gt; .dev &gt; #npm-package-arg'\n</code></pre></div>\n<h3 dir=\"auto\">Current Behavior</h3>\n<p dir=\"auto\">In the current implementation both <code class=\"notranslate\">:root</code> and <code class=\"notranslate\">.dev</code> are collected separately so it returns:</p>\n<div class=\"highlight highlight-source-json notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"[\n  {\n    &quot;name&quot;: &quot;npm-package-arg&quot;,\n    &quot;version&quot;: &quot;10.1.0&quot;,\n    &quot;location&quot;: &quot;node_modules/npm-package-arg&quot;,\n    &quot;path&quot;: &quot;/Users/lukekarrys/projects/npm/cli/node_modules/npm-package-arg&quot;,\n    &quot;from&quot;: [\n      &quot;node_modules/init-package-json&quot;,\n      &quot;node_modules/npm-pick-manifest&quot;,\n      &quot;node_modules/npm-registry-fetch&quot;,\n      &quot;node_modules/pacote&quot;,\n      &quot;node_modules/@npmcli/template-oss&quot;,\n      &quot;mock-registry&quot;,\n      &quot;workspaces/libnpmexec&quot;,\n      &quot;workspaces/libnpmaccess&quot;,\n      &quot;workspaces/libnpmdiff&quot;,\n      &quot;workspaces/libnpmpack&quot;,\n      &quot;workspaces/libnpmpublish&quot;,\n      &quot;workspaces/arborist&quot;,\n      &quot;&quot;\n    ],\n    &quot;to&quot;: [\n      &quot;node_modules/hosted-git-info&quot;,\n      &quot;node_modules/proc-log&quot;,\n      &quot;node_modules/semver&quot;,\n      &quot;node_modules/validate-npm-package-name&quot;\n    ],\n    &quot;dev&quot;: false,\n    &quot;inBundle&quot;: true,\n    &quot;deduped&quot;: false,\n    &quot;overridden&quot;: false,\n    &quot;queryContext&quot;: {}\n  }\n]\"><pre class=\"notranslate\">[\n  {\n    <span class=\"pl-ent\">\"name\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>npm-package-arg<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"version\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>10.1.0<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"location\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node_modules/npm-package-arg<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"path\"</span>: <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>/Users/lukekarrys/projects/npm/cli/node_modules/npm-package-arg<span class=\"pl-pds\">\"</span></span>,\n    <span class=\"pl-ent\">\"from\"</span>: [\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node_modules/init-package-json<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node_modules/npm-pick-manifest<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node_modules/npm-registry-fetch<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node_modules/pacote<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node_modules/@npmcli/template-oss<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>mock-registry<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>workspaces/libnpmexec<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>workspaces/libnpmaccess<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>workspaces/libnpmdiff<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>workspaces/libnpmpack<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>workspaces/libnpmpublish<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>workspaces/arborist<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span><span class=\"pl-pds\">\"</span></span>\n    ],\n    <span class=\"pl-ent\">\"to\"</span>: [\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node_modules/hosted-git-info<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node_modules/proc-log<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node_modules/semver<span class=\"pl-pds\">\"</span></span>,\n      <span class=\"pl-s\"><span class=\"pl-pds\">\"</span>node_modules/validate-npm-package-name<span class=\"pl-pds\">\"</span></span>\n    ],\n    <span class=\"pl-ent\">\"dev\"</span>: <span class=\"pl-c1\">false</span>,\n    <span class=\"pl-ent\">\"inBundle\"</span>: <span class=\"pl-c1\">true</span>,\n    <span class=\"pl-ent\">\"deduped\"</span>: <span class=\"pl-c1\">false</span>,\n    <span class=\"pl-ent\">\"overridden\"</span>: <span class=\"pl-c1\">false</span>,\n    <span class=\"pl-ent\">\"queryContext\"</span>: {}\n  }\n]</pre></div>\n<h3 dir=\"auto\">Expected Behavior</h3>\n<p dir=\"auto\">It should return <code class=\"notranslate\">[]</code> since <code class=\"notranslate\">npm-package-arg</code> is only a direct <code class=\"notranslate\">.prod</code> dependency</p>",
            "url": "https://github.com/npm/statusboard/issues/614",
            "title": "[query] need a descendant operator that can specify type",
            "date_modified": "2023-01-12T17:58:58.000Z",
            "date_published": "2022-12-15T21:22:02.000Z",
            "author": {
                "name": "lukekarrys",
                "url": "https://github.com/lukekarrys"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/542108?u=2c20c6b8a5298ef8cccf5e4cf0013bae865d0dc7&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">The recent push to get everything we maintain on template-oss has uncovered packages we maintain but no longer use. These packages might not make sense to convert to template-oss which currently requires a semver major update and will turn on dependabot, etc. These might not be worth it to take on for packages we no longer use.</p>\n<p dir=\"auto\">For packages like those, we should define our SLA as different than everything else we maintain.</p>",
            "url": "https://github.com/npm/statusboard/issues/613",
            "title": "Define SLA for open source packages",
            "date_modified": "2022-12-14T23:45:41.000Z",
            "date_published": "2022-12-14T18:19:52.000Z",
            "author": {
                "name": "lukekarrys",
                "url": "https://github.com/lukekarrys"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36607?u=79d8c114db476a7ecc6328b328f71d9d758368c7&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">We had discussed a flag that will allow folks to deterministically respond to the results of an <code class=\"notranslate\">npm query</code> command, specifically exiting with a status code if there are results, or if there are no results.</p>\n<p dir=\"auto\">The naming of the flags is pretty trivial to change, the bulk of the work is simply implementing them.  We can bikeshed the flag name as we go.</p>",
            "url": "https://github.com/npm/statusboard/issues/609",
            "title": "Flag to change exit status of `npm query`",
            "date_modified": "2023-01-12T18:10:27.000Z",
            "date_published": "2022-11-29T21:12:16.000Z",
            "author": {
                "name": "wraithgar",
                "url": "https://github.com/wraithgar"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/459713?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Summary</h3>\n<p dir=\"auto\">Support for the new build attestation generation/uploading when the <code class=\"notranslate\">--provenance</code> flag is configured (ref. <a aria-label=\"Pull request #626\" class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1332096405\" data-permission-text=\"Title is private\" data-url=\"https://github.com/npm/rfcs/issues/626\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/npm/rfcs/pull/626/hovercard\" href=\"https://github.com/npm/rfcs/pull/626\">npm/rfcs#626</a>).</p>\n<h3 dir=\"auto\">Exit Criteria</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <del>create warning this is experimental</del></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> pull in work from POC branch by Package Security team</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> sync up with Package Security team on launch</li>\n</ul>",
            "url": "https://github.com/npm/statusboard/issues/608",
            "title": "feat(publish): staff ship support `--provenance` flag",
            "date_modified": "2022-12-13T19:03:52.000Z",
            "date_published": "2022-11-28T19:34:24.000Z",
            "author": {
                "name": "darcyclarke",
                "url": "https://github.com/darcyclarke"
            }
        }
    ]
}