{
    "version": "https://jsonfeed.org/version/1",
    "title": "Node.js notable changes",
    "home_page_url": "https://azu.github.io/github-search-rss/nodejs-notable.json",
    "feed_url": "https://azu.github.io/github-search-rss/nodejs-notable.json",
    "description": "Node.js notable changes on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18269663?u=0c9e9c1f0a4d40e2b3f46d18f0e6721f9125411a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is an automated update of root-certificates to 3.95.</p>\n<hr>\n<h1 dir=\"auto\">notable change</h1>\n<p dir=\"auto\">crypto: update root certificates to NSS 3.95</p>\n<p dir=\"auto\">This is the certdata.txt[0] from NSS 3.95, released on 2023-11-16.</p>\n<p dir=\"auto\">This is the version of NSS that will ship in Firefox 121 on<br>\n2023-12-19.</p>\n<p dir=\"auto\">Certificates added:</p>\n<ul dir=\"auto\">\n<li>TrustAsia Global Root CA G3</li>\n<li>TrustAsia Global Root CA G4</li>\n<li>CommScope Public Trust ECC Root-01</li>\n<li>CommScope Public Trust ECC Root-02</li>\n<li>CommScope Public Trust RSA Root-01</li>\n<li>CommScope Public Trust RSA Root-02</li>\n</ul>\n<p dir=\"auto\">Certificates removed:</p>\n<ul dir=\"auto\">\n<li>Autoridad de Certificacion Firmaprofesional CIF A62634068</li>\n</ul>\n<p dir=\"auto\">[0] <a href=\"https://hg.mozilla.org/projects/nss/raw-file/NSS_3_95_RTM/lib/ckfw/builtins/certdata.txt\" rel=\"nofollow\">https://hg.mozilla.org/projects/nss/raw-file/NSS_3_95_RTM/lib/ckfw/builtins/certdata.txt</a></p>",
            "url": "https://github.com/nodejs/node/pull/50805",
            "title": "crypto: update root-certificates to 3.95",
            "date_modified": "2023-11-21T20:55:54.000Z",
            "date_published": "2023-11-19T00:25:44.000Z",
            "author": {
                "name": "nodejs-github-bot",
                "url": "https://github.com/nodejs-github-bot"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36735501?u=8e93f809522831771aab98cbb2a67c5e67e673d5&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">The deprecation code has been created in  6.12.0, I think we can move to runtime deprecation in 22<br>\nMoving the following APIs from documentation-only deprecation to runtime deprecation:</p>\n<ul dir=\"auto\">\n<li>util._extend</li>\n<li>util.isArray</li>\n<li>util.isBoolean</li>\n<li>util.isBuffer</li>\n<li>util.isDate</li>\n<li>util.isError</li>\n<li>util.isFunction</li>\n<li>util.isNull</li>\n<li>util.isNullOrUndefined</li>\n<li>util.isNumber</li>\n<li>util.isObject</li>\n<li>util.isPrimitive</li>\n<li>util.isRegExp</li>\n<li>util.isString</li>\n<li>util.isSymbol</li>\n<li>util.isUndefined</li>\n<li>util.log</li>\n</ul>",
            "url": "https://github.com/nodejs/node/pull/50488",
            "title": "util: move deprecated utils to runtime deprecation",
            "date_modified": "2023-11-27T18:38:27.000Z",
            "date_published": "2023-10-31T11:04:58.000Z",
            "author": {
                "name": "marco-ippolito",
                "url": "https://github.com/marco-ippolito"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3065230?u=0e938c0e3fcdc4998886799c5bc247ea8d17714a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This replaces the Readable stream linked list <code class=\"notranslate\">BufferList</code> buffer with an <code class=\"notranslate\">Array</code> and index.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"23:49:48 streams/pipe-object-mode.js n=5000000                                                           ***     23.56 %       ±4.03% ±5.36% ±6.98%\n23:49:48 streams/pipe.js n=5000000                                                                       ***     18.77 %       ±2.88% ±3.84% ±5.00%\n23:49:48 streams/readable-async-iterator.js sync='no' n=100000                                                    0.86 %       ±3.80% ±5.06% ±6.59%\n23:49:48 streams/readable-async-iterator.js sync='yes' n=100000                                          ***      7.33 %       ±3.76% ±5.01% ±6.52%\n23:49:48 streams/readable-bigread.js n=1000                                                              ***      8.48 %       ±4.51% ±6.01% ±7.82%\n23:49:48 streams/readable-bigunevenread.js n=1000                                                        ***     13.56 %       ±1.78% ±2.37% ±3.08%\n23:49:48 streams/readable-boundaryread.js type='buffer' n=2000                                           ***     11.92 %       ±1.39% ±1.85% ±2.41%\n23:49:48 streams/readable-boundaryread.js type='string' n=2000                                           ***      1.99 %       ±0.99% ±1.32% ±1.72%\n23:49:48 streams/readable-from.js n=10000000                                                             ***     17.22 %       ±5.10% ±6.80% ±8.87%\n23:49:48 streams/readable-readall.js n=5000                                                              ***      9.66 %       ±5.47% ±7.28% ±9.49%\n23:49:48 streams/readable-unevenread.js n=1000                                                           ***      4.80 %       ±0.40% ±0.54% ±0.70%\"><pre class=\"notranslate\"><code class=\"notranslate\">23:49:48 streams/pipe-object-mode.js n=5000000                                                           ***     23.56 %       ±4.03% ±5.36% ±6.98%\n23:49:48 streams/pipe.js n=5000000                                                                       ***     18.77 %       ±2.88% ±3.84% ±5.00%\n23:49:48 streams/readable-async-iterator.js sync='no' n=100000                                                    0.86 %       ±3.80% ±5.06% ±6.59%\n23:49:48 streams/readable-async-iterator.js sync='yes' n=100000                                          ***      7.33 %       ±3.76% ±5.01% ±6.52%\n23:49:48 streams/readable-bigread.js n=1000                                                              ***      8.48 %       ±4.51% ±6.01% ±7.82%\n23:49:48 streams/readable-bigunevenread.js n=1000                                                        ***     13.56 %       ±1.78% ±2.37% ±3.08%\n23:49:48 streams/readable-boundaryread.js type='buffer' n=2000                                           ***     11.92 %       ±1.39% ±1.85% ±2.41%\n23:49:48 streams/readable-boundaryread.js type='string' n=2000                                           ***      1.99 %       ±0.99% ±1.32% ±1.72%\n23:49:48 streams/readable-from.js n=10000000                                                             ***     17.22 %       ±5.10% ±6.80% ±8.87%\n23:49:48 streams/readable-readall.js n=5000                                                              ***      9.66 %       ±5.47% ±7.28% ±9.49%\n23:49:48 streams/readable-unevenread.js n=1000                                                           ***      4.80 %       ±0.40% ±0.54% ±0.70%\n</code></pre></div>",
            "url": "https://github.com/nodejs/node/pull/50341",
            "title": "streams: use Array for Readable buffer",
            "date_modified": "2023-10-26T05:42:05.000Z",
            "date_published": "2023-10-23T15:04:07.000Z",
            "author": {
                "name": "ronag",
                "url": "https://github.com/ronag"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3065230?u=0e938c0e3fcdc4998886799c5bc247ea8d17714a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1707578695\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/performance/issues/79\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/performance/issues/79/hovercard\" href=\"https://github.com/nodejs/performance/issues/79\">nodejs/performance#79</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"streams/creation.js kind='duplex' n=5000000           ***    116.74 %       ±3.83%  ±5.38%  ±7.61%\nstreams/creation.js kind='readable' n=5000000         ***    133.77 %       ±3.11%  ±4.44%  ±6.44%\nstreams/creation.js kind='transform' n=5000000        ***     28.17 %       ±7.37% ±10.23% ±14.24%\nstreams/creation.js kind='writable' n=5000000         ***     81.57 %       ±2.27%  ±3.11%  ±4.26%\"><pre class=\"notranslate\"><code class=\"notranslate\">streams/creation.js kind='duplex' n=5000000           ***    116.74 %       ±3.83%  ±5.38%  ±7.61%\nstreams/creation.js kind='readable' n=5000000         ***    133.77 %       ±3.11%  ±4.44%  ±6.44%\nstreams/creation.js kind='transform' n=5000000        ***     28.17 %       ±7.37% ±10.23% ±14.24%\nstreams/creation.js kind='writable' n=5000000         ***     81.57 %       ±2.27%  ±3.11%  ±4.26%\n</code></pre></div>",
            "url": "https://github.com/nodejs/node/pull/50337",
            "title": "streams: optimize creation",
            "date_modified": "2023-10-25T18:26:46.000Z",
            "date_published": "2023-10-23T11:23:33.000Z",
            "author": {
                "name": "ronag",
                "url": "https://github.com/ronag"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1935246?u=440932d4aed022e31a2140e1825c0167b7a12357&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Co-authored by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/lemire/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lemire\">@lemire</a></p>\n<h3 dir=\"auto\">Local Benchmark</h3>\n<p dir=\"auto\">My local benchmarks says that running <code class=\"notranslate\">vite --version</code> is 5% faster</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"❯ hyperfine 'node ../sveltejs-realworld/node_modules/vite/dist/node/cli.js --version' 'out/Release/node ../sveltejs-realworld/node_modules/vite/dist/node/cli.js --version' -w 10\nBenchmark 1: node ../sveltejs-realworld/node_modules/vite/dist/node/cli.js --version\n  Time (mean ± σ):     101.4 ms ±   0.6 ms    [User: 96.6 ms, System: 10.8 ms]\n  Range (min … max):   100.3 ms … 102.5 ms    28 runs\n\nBenchmark 2: out/Release/node ../sveltejs-realworld/node_modules/vite/dist/node/cli.js --version\n  Time (mean ± σ):      96.3 ms ±   0.5 ms    [User: 90.9 ms, System: 10.1 ms]\n  Range (min … max):    95.6 ms …  98.1 ms    30 runs\n\nSummary\n  out/Release/node ../sveltejs-realworld/node_modules/vite/dist/node/cli.js --version ran\n    1.05 ± 0.01 times faster than node ../sveltejs-realworld/node_modules/vite/dist/node/cli.js --version\"><pre class=\"notranslate\"><code class=\"notranslate\">❯ hyperfine 'node ../sveltejs-realworld/node_modules/vite/dist/node/cli.js --version' 'out/Release/node ../sveltejs-realworld/node_modules/vite/dist/node/cli.js --version' -w 10\nBenchmark 1: node ../sveltejs-realworld/node_modules/vite/dist/node/cli.js --version\n  Time (mean ± σ):     101.4 ms ±   0.6 ms    [User: 96.6 ms, System: 10.8 ms]\n  Range (min … max):   100.3 ms … 102.5 ms    28 runs\n\nBenchmark 2: out/Release/node ../sveltejs-realworld/node_modules/vite/dist/node/cli.js --version\n  Time (mean ± σ):      96.3 ms ±   0.5 ms    [User: 90.9 ms, System: 10.1 ms]\n  Range (min … max):    95.6 ms …  98.1 ms    30 runs\n\nSummary\n  out/Release/node ../sveltejs-realworld/node_modules/vite/dist/node/cli.js --version ran\n    1.05 ± 0.01 times faster than node ../sveltejs-realworld/node_modules/vite/dist/node/cli.js --version\n</code></pre></div>\n<h3 dir=\"auto\">TODOs</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Move modules functionality to <code class=\"notranslate\">node_modules.cc</code>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> internalModuleReadJSON</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Move caching of package_json_reader to C++\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Make <code class=\"notranslate\">node_modules.cc</code> snapshottable</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Update run_main.js to just avoid constructing the whole object for the entry point.\n<ul dir=\"auto\">\n<li>We could even call containsModuleSyntax from C++</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Move <code class=\"notranslate\">getPackageScopeConfig</code> from <code class=\"notranslate\">package_config.js</code> to C++ side, and cache it on <code class=\"notranslate\">node_modules.cc</code></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Replace all packageJSONReader calls that looks for specific attribute to have equivalent C++ functions</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Investigate if imports &amp; exports JSONParse needs to be cached on JS</li>\n</ul>\n<h3 dir=\"auto\">Caveats</h3>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">ERR_INVALID_PACKAGE_CONFIG</code> does not include JSON.Parse() error message anymore. This mainly because we're using <code class=\"notranslate\">simdjson</code> to avoid JS allocation while parsing for performance reasons.</li>\n<li>exports/imports without string, array or object value will now throw <code class=\"notranslate\">ERR_INVALID_PACKAGE_CONFIG</code> instead of returning an invalid value.</li>\n</ul>\n<h3 dir=\"auto\">Benchmarks</h3>\n<ul dir=\"auto\">\n<li>Startup bench: <a href=\"https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1468\" rel=\"nofollow\">https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1468</a></li>\n</ul>",
            "url": "https://github.com/nodejs/node/pull/50322",
            "title": "src: move package_json_reader cache to c++",
            "date_modified": "2023-12-04T14:56:14.000Z",
            "date_published": "2023-10-21T21:50:31.000Z",
            "author": {
                "name": "anonrig",
                "url": "https://github.com/anonrig"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1935246?u=440932d4aed022e31a2140e1825c0167b7a12357&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Follow-up for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1688849179\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47769\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/47769/hovercard\" href=\"https://github.com/nodejs/node/pull/47769\">#47769</a></p>\n<p dir=\"auto\">cc @nodejs/tsc</p>",
            "url": "https://github.com/nodejs/node/pull/50200",
            "title": "lib: add `navigator.userAgent`",
            "date_modified": "2023-10-20T23:24:19.000Z",
            "date_published": "2023-10-16T17:32:11.000Z",
            "author": {
                "name": "anonrig",
                "url": "https://github.com/anonrig"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/16746759?u=60fb76d4d645e86d42b147f009f2be0836a7317c&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Performance improvement for <code class=\"notranslate\">readable.read</code> by around ~10%</p>\n<h3 dir=\"auto\">Benchmarks</h3>\n<blockquote>\n<p dir=\"auto\"><a href=\"https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1444\" rel=\"nofollow\">Benchmark URL</a></p>\n</blockquote>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                                         confidence improvement accuracy (*)    (**)   (***)\nstreams/creation.js kind='duplex' n=50000000                                                             0.05 %       ±1.22%  ±1.62%  ±2.12%\nstreams/creation.js kind='readable' n=50000000                                                          -1.00 %       ±1.12%  ±1.49%  ±1.95%\nstreams/creation.js kind='transform' n=50000000                                                          2.30 %       ±4.02%  ±5.35%  ±6.96%\nstreams/creation.js kind='writable' n=50000000                                                          -0.14 %       ±0.90%  ±1.20%  ±1.57%\nstreams/destroy.js kind='duplex' n=1000000                                                              -1.51 %       ±1.88%  ±2.50%  ±3.25%\nstreams/destroy.js kind='readable' n=1000000                                                            -1.95 %       ±2.02%  ±2.69%  ±3.51%\nstreams/destroy.js kind='transform' n=1000000                                                           -0.28 %       ±1.45%  ±1.93%  ±2.51%\nstreams/destroy.js kind='writable' n=1000000                                                            -0.03 %       ±2.02%  ±2.69%  ±3.50%\nstreams/pipe-object-mode.js n=5000000                                                                    1.40 %       ±3.61%  ±4.81%  ±6.26%\nstreams/pipe.js n=5000000                                                                               -0.57 %       ±2.60%  ±3.47%  ±4.53%\nstreams/readable-async-iterator.js sync='no' n=100000                                                    1.39 %       ±3.39%  ±4.55%  ±6.01%\nstreams/readable-async-iterator.js sync='yes' n=100000                                                  -1.66 %       ±2.95%  ±3.97%  ±5.25%\nstreams/readable-bigread.js n=1000                                                                      -0.36 %       ±7.13%  ±9.49% ±12.35%\nstreams/readable-bigunevenread.js n=1000                                                                 0.72 %       ±1.64%  ±2.18%  ±2.84%\nstreams/readable-boundaryread.js type='buffer' n=2000                                           ***      6.36 %       ±1.25%  ±1.67%  ±2.17%\nstreams/readable-boundaryread.js type='string' n=2000                                           ***      2.66 %       ±1.42%  ±1.90%  ±2.49%\nstreams/readable-from.js n=10000000                                                                     -4.26 %       ±8.28% ±11.05% ±14.45%\nstreams/readable-readall.js n=5000                                                              ***     10.08 %       ±5.50%  ±7.33%  ±9.57%\nstreams/readable-unevenread.js n=1000                                                                   -0.15 %       ±2.90%  ±3.86%  ±5.02%\nstreams/writable-manywrites.js len=1024 callback='no' writev='no' sync='no' n=100000                    -0.37 %       ±3.01%  ±4.01%  ±5.22%\nstreams/writable-manywrites.js len=1024 callback='no' writev='no' sync='yes' n=100000                    0.54 %       ±2.45%  ±3.26%  ±4.25%\nstreams/writable-manywrites.js len=1024 callback='no' writev='yes' sync='no' n=100000                   -0.02 %       ±2.75%  ±3.68%  ±4.82%\nstreams/writable-manywrites.js len=1024 callback='no' writev='yes' sync='yes' n=100000                   0.35 %       ±2.39%  ±3.18%  ±4.14%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='no' sync='no' n=100000                    0.78 %       ±2.31%  ±3.11%  ±4.11%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='no' sync='yes' n=100000            *      2.81 %       ±2.52%  ±3.36%  ±4.37%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='yes' sync='no' n=100000            *     -2.73 %       ±2.48%  ±3.29%  ±4.29%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='yes' sync='yes' n=100000                 -1.59 %       ±2.34%  ±3.12%  ±4.06%\nstreams/writable-manywrites.js len=32768 callback='no' writev='no' sync='no' n=100000                   -1.57 %       ±2.72%  ±3.66%  ±4.83%\nstreams/writable-manywrites.js len=32768 callback='no' writev='no' sync='yes' n=100000                  -0.27 %       ±2.67%  ±3.55%  ±4.62%\nstreams/writable-manywrites.js len=32768 callback='no' writev='yes' sync='no' n=100000                  -2.95 %       ±3.00%  ±4.03%  ±5.32%\nstreams/writable-manywrites.js len=32768 callback='no' writev='yes' sync='yes' n=100000                  0.94 %       ±2.69%  ±3.57%  ±4.65%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='no' sync='no' n=100000                  -0.42 %       ±2.25%  ±3.01%  ±3.96%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='no' sync='yes' n=100000                  0.03 %       ±2.43%  ±3.23%  ±4.20%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='yes' sync='no' n=100000                  0.18 %       ±2.33%  ±3.12%  ±4.13%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='yes' sync='yes' n=100000                -0.37 %       ±2.42%  ±3.22%  ±4.19%\n\nBe aware that when doing many comparisons the risk of a false-positive\nresult increases. In this case, there are 35 comparisons, you can thus\nexpect the following amount of false-positive results:\n  1.75 false positives, when considering a   5% risk acceptance (*, **, ***),\n  0.35 false positives, when considering a   1% risk acceptance (**, ***),\n  0.04 false positives, when considering a 0.1% risk acceptance (***)\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                                         confidence improvement accuracy (*)    (**)   (***)\nstreams/creation.js kind='duplex' n=50000000                                                             0.05 %       ±1.22%  ±1.62%  ±2.12%\nstreams/creation.js kind='readable' n=50000000                                                          -1.00 %       ±1.12%  ±1.49%  ±1.95%\nstreams/creation.js kind='transform' n=50000000                                                          2.30 %       ±4.02%  ±5.35%  ±6.96%\nstreams/creation.js kind='writable' n=50000000                                                          -0.14 %       ±0.90%  ±1.20%  ±1.57%\nstreams/destroy.js kind='duplex' n=1000000                                                              -1.51 %       ±1.88%  ±2.50%  ±3.25%\nstreams/destroy.js kind='readable' n=1000000                                                            -1.95 %       ±2.02%  ±2.69%  ±3.51%\nstreams/destroy.js kind='transform' n=1000000                                                           -0.28 %       ±1.45%  ±1.93%  ±2.51%\nstreams/destroy.js kind='writable' n=1000000                                                            -0.03 %       ±2.02%  ±2.69%  ±3.50%\nstreams/pipe-object-mode.js n=5000000                                                                    1.40 %       ±3.61%  ±4.81%  ±6.26%\nstreams/pipe.js n=5000000                                                                               -0.57 %       ±2.60%  ±3.47%  ±4.53%\nstreams/readable-async-iterator.js sync='no' n=100000                                                    1.39 %       ±3.39%  ±4.55%  ±6.01%\nstreams/readable-async-iterator.js sync='yes' n=100000                                                  -1.66 %       ±2.95%  ±3.97%  ±5.25%\nstreams/readable-bigread.js n=1000                                                                      -0.36 %       ±7.13%  ±9.49% ±12.35%\nstreams/readable-bigunevenread.js n=1000                                                                 0.72 %       ±1.64%  ±2.18%  ±2.84%\nstreams/readable-boundaryread.js type='buffer' n=2000                                           ***      6.36 %       ±1.25%  ±1.67%  ±2.17%\nstreams/readable-boundaryread.js type='string' n=2000                                           ***      2.66 %       ±1.42%  ±1.90%  ±2.49%\nstreams/readable-from.js n=10000000                                                                     -4.26 %       ±8.28% ±11.05% ±14.45%\nstreams/readable-readall.js n=5000                                                              ***     10.08 %       ±5.50%  ±7.33%  ±9.57%\nstreams/readable-unevenread.js n=1000                                                                   -0.15 %       ±2.90%  ±3.86%  ±5.02%\nstreams/writable-manywrites.js len=1024 callback='no' writev='no' sync='no' n=100000                    -0.37 %       ±3.01%  ±4.01%  ±5.22%\nstreams/writable-manywrites.js len=1024 callback='no' writev='no' sync='yes' n=100000                    0.54 %       ±2.45%  ±3.26%  ±4.25%\nstreams/writable-manywrites.js len=1024 callback='no' writev='yes' sync='no' n=100000                   -0.02 %       ±2.75%  ±3.68%  ±4.82%\nstreams/writable-manywrites.js len=1024 callback='no' writev='yes' sync='yes' n=100000                   0.35 %       ±2.39%  ±3.18%  ±4.14%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='no' sync='no' n=100000                    0.78 %       ±2.31%  ±3.11%  ±4.11%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='no' sync='yes' n=100000            *      2.81 %       ±2.52%  ±3.36%  ±4.37%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='yes' sync='no' n=100000            *     -2.73 %       ±2.48%  ±3.29%  ±4.29%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='yes' sync='yes' n=100000                 -1.59 %       ±2.34%  ±3.12%  ±4.06%\nstreams/writable-manywrites.js len=32768 callback='no' writev='no' sync='no' n=100000                   -1.57 %       ±2.72%  ±3.66%  ±4.83%\nstreams/writable-manywrites.js len=32768 callback='no' writev='no' sync='yes' n=100000                  -0.27 %       ±2.67%  ±3.55%  ±4.62%\nstreams/writable-manywrites.js len=32768 callback='no' writev='yes' sync='no' n=100000                  -2.95 %       ±3.00%  ±4.03%  ±5.32%\nstreams/writable-manywrites.js len=32768 callback='no' writev='yes' sync='yes' n=100000                  0.94 %       ±2.69%  ±3.57%  ±4.65%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='no' sync='no' n=100000                  -0.42 %       ±2.25%  ±3.01%  ±3.96%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='no' sync='yes' n=100000                  0.03 %       ±2.43%  ±3.23%  ±4.20%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='yes' sync='no' n=100000                  0.18 %       ±2.33%  ±3.12%  ±4.13%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='yes' sync='yes' n=100000                -0.37 %       ±2.42%  ±3.22%  ±4.19%\n\nBe aware that when doing many comparisons the risk of a false-positive\nresult increases. In this case, there are 35 comparisons, you can thus\nexpect the following amount of false-positive results:\n  1.75 false positives, when considering a   5% risk acceptance (*, **, ***),\n  0.35 false positives, when considering a   1% risk acceptance (**, ***),\n  0.04 false positives, when considering a 0.1% risk acceptance (***)\n</code></pre></div>",
            "url": "https://github.com/nodejs/node/pull/50173",
            "title": "stream: improve readable stream read perf",
            "date_modified": "2023-10-15T18:43:48.000Z",
            "date_published": "2023-10-13T13:03:13.000Z",
            "author": {
                "name": "rluvaton",
                "url": "https://github.com/rluvaton"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3065230?u=0e938c0e3fcdc4998886799c5bc247ea8d17714a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Avoid splitting chunked responses into multiple parts when corking. This makes a large difference performance-wise on the client side.</p>\n<p dir=\"auto\">Previously when writing to a chunked response Node would create a separate chunk for each call to <code class=\"notranslate\">.write(...)</code> regardless whether the response was corked or not. This leads to unnecessary overhead both on the client and server side.</p>\n<p dir=\"auto\">This PR fixes this by creating a single chunk for all calls to <code class=\"notranslate\">write(...)</code> when uncorking the response.</p>\n<p dir=\"auto\">Consider the following example based on <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Transfer-Encoding#chunked_encoding\" rel=\"nofollow\">https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Transfer-Encoding#chunked_encoding</a>:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"res.cork();\nres.write('Mozilla');\nres.write(' Developer Network');\nres.uncork();\"><pre class=\"notranslate\"><span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">cork</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">write</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Mozilla'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">write</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">' Developer Network'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">res</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">uncork</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<blockquote>\n<p dir=\"auto\">At the beginning of each chunk you need to add the length of the current chunk in hexadecimal format, followed by '\\r\\n'  and then the chunk itself, followed by another '\\r\\n'. The terminating chunk is a regular chunk, with the exception that its  length is zero.</p>\n</blockquote>\n<p dir=\"auto\">Resulting in a response stream looking like this:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"HTTP/1.1 200 OK\nContent-Type: text/plain\nTransfer-Encoding: chunked\n\n7\\r\\n\nMozilla\\r\\n\n18\\r\\n\n Developer Network\\r\\n\n0\\r\\n\n\\r\\n\"><pre class=\"notranslate\"><code class=\"notranslate\">HTTP/1.1 200 OK\nContent-Type: text/plain\nTransfer-Encoding: chunked\n\n7\\r\\n\nMozilla\\r\\n\n18\\r\\n\n Developer Network\\r\\n\n0\\r\\n\n\\r\\n\n</code></pre></div>\n<p dir=\"auto\">After this PR everything is combined into a single chunk when uncorking the response bypassing a lot of unnecessary overhead.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"HTTP/1.1 200 OK\nContent-Type: text/plain\nTransfer-Encoding: chunked\n\n25\\r\\n\nMozilla Developer Network\\r\\n\n0\\r\\n\n\\r\\n\"><pre class=\"notranslate\"><code class=\"notranslate\">HTTP/1.1 200 OK\nContent-Type: text/plain\nTransfer-Encoding: chunked\n\n25\\r\\n\nMozilla Developer Network\\r\\n\n0\\r\\n\n\\r\\n\n</code></pre></div>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1585465917\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/performance/issues/57\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/performance/issues/57/hovercard\" href=\"https://github.com/nodejs/performance/issues/57\">nodejs/performance#57</a></p>",
            "url": "https://github.com/nodejs/node/pull/50167",
            "title": "http: reduce parts in chunked response when corking",
            "date_modified": "2023-10-16T05:59:02.000Z",
            "date_published": "2023-10-12T20:35:42.000Z",
            "author": {
                "name": "ronag",
                "url": "https://github.com/ronag"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/14309773?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">The old import assertions proposal has been<br>\nrenamed to \"import attributes\" with the following major changes:</p>\n<ol dir=\"auto\">\n<li>The keyword is now <code class=\"notranslate\">with</code> instead of <code class=\"notranslate\">assert</code>.</li>\n<li>Unknown assertions cause an error rather than being ignored.</li>\n</ol>\n<p dir=\"auto\">This PR updates the documentation to encourage folks to use the new syntax, and add aliases for module customization hooks.</p>\n<p dir=\"auto\">This change should be backported manually to 20.x the new V8 flag has not landed there.</p>\n<p dir=\"auto\">Refs: <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/v8/v8/commit/a0fd3209dda8527d7da810abe231df27fffe789e/hovercard\" href=\"https://github.com/v8/v8/commit/a0fd3209dda8527d7da810abe231df27fffe789e\">v8/v8@<tt>a0fd320</tt></a><br>\n<span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #50134.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1937145919\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/50134\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/50134/hovercard\" href=\"https://github.com/nodejs/node/issues/50134\">#50134</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/50140",
            "title": "esm: use import attributes instead of import assertions",
            "date_modified": "2023-11-23T09:52:44.000Z",
            "date_published": "2023-10-11T12:29:40.000Z",
            "author": {
                "name": "aduh95",
                "url": "https://github.com/aduh95"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">vm: unify host-defined option generation in vm.compileFunction</h3>\n<p dir=\"auto\">Set a default host-defined option for vm.compileFunction so that<br>\nit's consistent with vm.Script.</p>\n<h3 dir=\"auto\">vm: use internal versions of compileFunction and Script</h3>\n<p dir=\"auto\">Instead of using the public versions of the vm APIs internally,<br>\nuse the internal versions so that we can skip unnecessary<br>\nargument validation.</p>\n<p dir=\"auto\">The public versions would need special care to the generation<br>\nof host-defined options to hit the isolate compilation cache<br>\nwhen imporModuleDynamically isn't used, while internally it's<br>\nalmost always used, so this allows us to handle the host-defined<br>\noptions separately.</p>\n<h3 dir=\"auto\">vm: reject in importModuleDynamically without --experimental-vm-modules</h3>\n<p dir=\"auto\">Users cannot access any API that can be used to return a module or<br>\nmodule namespace in this callback without --experimental-vm-modules<br>\nanyway, so this would eventually lead to a rejection. This patch<br>\nrejects in this case with our own error message and use a constant<br>\nhost-defined option for the rejection, so that scripts with the<br>\nsame source can still be compiled using the compilation cache<br>\nif no <code class=\"notranslate\">import()</code> is actually called in the script.</p>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"709722982\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/35375\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/35375/hovercard\" href=\"https://github.com/nodejs/node/issues/35375\">#35375</a></p>\n<p dir=\"auto\"><code class=\"notranslate\">with-dynamic-import-callback</code> is Jest's current behavior which blocks users from upgrading from v16.x (see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1919227958\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49950\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49950/hovercard?comment_id=1748178407&amp;comment_type=issue_comment\" href=\"https://github.com/nodejs/node/pull/49950#issuecomment-1748178407\">#49950 (comment)</a>).</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                                   confidence improvement accuracy (*)     (**)    (***)\nvm/compile-script-in-isolate-cache.js n=100 type='with-dynamic-import-callback'           ***   9880.21 %     ±166.83% ±237.30% ±343.44%\nvm/compile-script-in-isolate-cache.js n=100 type='without-dynamic-import-callback'                 1.87 %       ±4.21%   ±5.83%   ±8.06%\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                                   confidence improvement accuracy (*)     (**)    (***)\nvm/compile-script-in-isolate-cache.js n=100 type='with-dynamic-import-callback'           ***   9880.21 %     ±166.83% ±237.30% ±343.44%\nvm/compile-script-in-isolate-cache.js n=100 type='without-dynamic-import-callback'                 1.87 %       ±4.21%   ±5.83%   ±8.06%\n</code></pre></div>\n",
            "url": "https://github.com/nodejs/node/pull/50137",
            "title": "vm: reject in importModuleDynamically without --experimental-vm-modules",
            "date_modified": "2023-12-01T17:01:21.000Z",
            "date_published": "2023-10-11T11:56:20.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3240?u=cb7e3b59dd9f80c7c1720e5315c5350f41b0a560&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">this change makes <code class=\"notranslate\">deflate-raw</code> a valid parameter for both CompressionStream and DecompressionStream constructors</p>\n<p dir=\"auto\">it makes node's implementation consistent with what modern browsers support and what specification calls for</p>\n<p dir=\"auto\">see: <a href=\"https://wicg.github.io/compression/#compression-stream\" rel=\"nofollow\">https://wicg.github.io/compression/#compression-stream</a></p>\n\n<p dir=\"auto\">Edit: <a href=\"https://github.com/nodejs/node/pull/50097#issuecomment-1803568323\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/50097/hovercard\">Notable Change</a></p>",
            "url": "https://github.com/nodejs/node/pull/50097",
            "title": "stream: add support for `deflate-raw` format to webstreams compression",
            "date_modified": "2023-11-09T11:25:43.000Z",
            "date_published": "2023-10-09T06:47:49.000Z",
            "author": {
                "name": "pirxpilot",
                "url": "https://github.com/pirxpilot"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/456802?u=55a029ca7659fa56e1422d8f8b619cdba6a33bac&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Implements <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1930264780\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/50064\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/50064/hovercard\" href=\"https://github.com/nodejs/node/issues/50064\">#50064</a>. This PR aims to allow Node.js to allow ES module syntax input by default, without the user needing to opt in by using a non-<code class=\"notranslate\">.js</code> extension, a <code class=\"notranslate\">package.json</code> <code class=\"notranslate\">\"type\"</code> field or a command-line flag. The goal is to make this enabled by default, unflagged, once we consider it stable.</p>\n<p dir=\"auto\">For the following “ambiguous” inputs:</p>\n<ul dir=\"auto\">\n<li>Files with a <code class=\"notranslate\">.js</code> extension or no extension; and either no controlling <code class=\"notranslate\">package.json</code> or one that lacks a <code class=\"notranslate\">type</code> field; and <code class=\"notranslate\">--experimental-default-type</code> is not specified</li>\n<li>String input (<code class=\"notranslate\">--eval</code> or STDIN) when neither <code class=\"notranslate\">--input-type</code> nor <code class=\"notranslate\">--experimental-default-type</code> are specified</li>\n</ul>\n<p dir=\"auto\">Node will do the following:</p>\n<ul dir=\"auto\">\n<li>For ambiguous main entry point, either file or string input, the new <code class=\"notranslate\">containsModuleSyntax</code> function from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1935969556\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/50127\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/50127/hovercard\" href=\"https://github.com/nodejs/node/pull/50127\">#50127</a> is used to determine whether the CommonJS or ESM loader should handle the main entry. (The ESM loader is used if the main entry contains module syntax.)</li>\n<li>When the ESM loader is handling modules, within the <code class=\"notranslate\">load</code> hook, once the source is loaded it will be passed to <code class=\"notranslate\">containsModuleSyntax</code> to determine whether the <code class=\"notranslate\">format</code> should be <code class=\"notranslate\">module</code> or <code class=\"notranslate\">commonjs</code> (again, only for the ambiguous inputs specified above).</li>\n</ul>\n<p dir=\"auto\">This behavior applies to ambiguous files within <code class=\"notranslate\">node_modules</code>. This is to prevent the hazard where a package author writes a library relying on this detection behavior but consumers of the package would fail to load it if they didn’t also have the detection behavior. (Such a hazard will still exist for consumers running old versions of Node, but at least it’s avoided moving forward.)</p>\n<p dir=\"auto\">This behavior applies to the main entry point and to files referenced via <code class=\"notranslate\">import</code>. It would not apply to files referenced via <code class=\"notranslate\">require</code>, because <code class=\"notranslate\">require</code> cannot load ES modules.</p>\n<p dir=\"auto\">This behavior does not apply to modules with any marker of explicitness: an <code class=\"notranslate\">.mjs</code> or <code class=\"notranslate\">.cjs</code> extension, a <code class=\"notranslate\">package.json</code> with a <code class=\"notranslate\">type</code> field, specified <code class=\"notranslate\">--input-type</code> or <code class=\"notranslate\">--experimental-default-type</code> flags.</p>\n<p dir=\"auto\">This behavior does not apply to <code class=\"notranslate\">--print</code> input, as <code class=\"notranslate\">--print</code> does not support ESM syntax.</p>\n<p dir=\"auto\">When enabled, detection should have no impact on all-CommonJS apps (either written that way or transpiled into CommonJS) since detection isn’t run on files that are referenced via <code class=\"notranslate\">require</code>; such apps would incur only a single double parse for the entry point (and therefore never opt into the ESM loader). The largest impact would be for ESM apps with CommonJS dependencies that lack <code class=\"notranslate\">type</code> fields.</p>\n<p dir=\"auto\">Before unflagging this we need to confirm that when enabled, this doesn’t affect any apps that run without erroring today. Or inversely it should have no effect on anything that already runs successfully, and therefore is not a breaking change.</p>\n<p dir=\"auto\">cc @nodejs/performance @nodejs/loaders @nodejs/tsc</p>\n<h3 dir=\"auto\">Notable change</h3>\n<p dir=\"auto\">The new flag <code class=\"notranslate\">--experimental-detect-module</code> can be used to automatically run ES modules when their syntax can be detected. For “ambiguous” files, which are <code class=\"notranslate\">.js</code> or extensionless files with no <code class=\"notranslate\">package.json</code> with a <code class=\"notranslate\">type</code> field, Node.js will parse the file to detect ES module syntax; if found, it will run the file as an ES module, otherwise it will run the file as a CommonJS module. The same applies to string input via <code class=\"notranslate\">--eval</code> or <code class=\"notranslate\">STDIN</code>.</p>\n<p dir=\"auto\">We hope to make detection enabled by default in a future version of Node.js. Detection increases startup time, so we encourage everyone—especially package authors—to add a <code class=\"notranslate\">type</code> field to <code class=\"notranslate\">package.json</code>, even for the default <code class=\"notranslate\">\"type\": \"commonjs\"</code>. The presence of a <code class=\"notranslate\">type</code> field, or explicit extensions such as <code class=\"notranslate\">.mjs</code> or <code class=\"notranslate\">.cjs</code>, will opt out of detection.</p>",
            "url": "https://github.com/nodejs/node/pull/50096",
            "title": "esm: detect ESM syntax in ambiguous JavaScript",
            "date_modified": "2023-12-05T18:04:25.000Z",
            "date_published": "2023-10-09T05:42:17.000Z",
            "author": {
                "name": "GeoffreyBooth",
                "url": "https://github.com/GeoffreyBooth"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/31462?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #49626.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1892667781\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49626\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/49626/hovercard\" href=\"https://github.com/nodejs/node/issues/49626\">#49626</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/50018",
            "title": "test_runner: adds built in lcov test reporter",
            "date_modified": "2023-12-12T13:20:44.000Z",
            "date_published": "2023-10-02T23:46:17.000Z",
            "author": {
                "name": "philnash",
                "url": "https://github.com/philnash"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3065230?u=0e938c0e3fcdc4998886799c5bc247ea8d17714a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Try to inline condition checks and try to avoid read state properties in hot paths.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                                          confidence improvement accuracy (*)   (**)  (***)\nstreams/writable-manywrites.js len=1024 callback='no' writev='no' sync='no' n=100000            ***      8.14 %       ±4.15% ±5.56% ±7.29%\nstreams/writable-manywrites.js len=1024 callback='no' writev='no' sync='yes' n=100000           ***     11.35 %       ±2.60% ±3.46% ±4.50%\nstreams/writable-manywrites.js len=1024 callback='no' writev='yes' sync='no' n=100000             *      2.04 %       ±2.03% ±2.71% ±3.54%\nstreams/writable-manywrites.js len=1024 callback='no' writev='yes' sync='yes' n=100000          ***     17.89 %       ±2.05% ±2.73% ±3.56%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='no' sync='no' n=100000           ***      5.99 %       ±2.28% ±3.04% ±3.97%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='no' sync='yes' n=100000          ***     11.62 %       ±2.35% ±3.13% ±4.08%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='yes' sync='no' n=100000          ***      3.82 %       ±1.59% ±2.12% ±2.78%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='yes' sync='yes' n=100000         ***     14.31 %       ±3.41% ±4.56% ±5.99%\nstreams/writable-manywrites.js len=32768 callback='no' writev='no' sync='no' n=100000           ***      6.87 %       ±2.67% ±3.55% ±4.63%\nstreams/writable-manywrites.js len=32768 callback='no' writev='no' sync='yes' n=100000          ***      7.86 %       ±2.17% ±2.90% ±3.79%\nstreams/writable-manywrites.js len=32768 callback='no' writev='yes' sync='no' n=100000          ***      8.60 %       ±4.29% ±5.74% ±7.53%\nstreams/writable-manywrites.js len=32768 callback='no' writev='yes' sync='yes' n=100000         ***      7.28 %       ±2.42% ±3.24% ±4.26%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='no' sync='no' n=100000          ***      6.23 %       ±1.55% ±2.07% ±2.69%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='no' sync='yes' n=100000         ***     10.18 %       ±1.71% ±2.28% ±2.98%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='yes' sync='no' n=100000         ***      5.76 %       ±1.70% ±2.26% ±2.95%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='yes' sync='yes' n=100000        ***     10.23 %       ±2.66% ±3.55% ±4.64%\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                                          confidence improvement accuracy (*)   (**)  (***)\nstreams/writable-manywrites.js len=1024 callback='no' writev='no' sync='no' n=100000            ***      8.14 %       ±4.15% ±5.56% ±7.29%\nstreams/writable-manywrites.js len=1024 callback='no' writev='no' sync='yes' n=100000           ***     11.35 %       ±2.60% ±3.46% ±4.50%\nstreams/writable-manywrites.js len=1024 callback='no' writev='yes' sync='no' n=100000             *      2.04 %       ±2.03% ±2.71% ±3.54%\nstreams/writable-manywrites.js len=1024 callback='no' writev='yes' sync='yes' n=100000          ***     17.89 %       ±2.05% ±2.73% ±3.56%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='no' sync='no' n=100000           ***      5.99 %       ±2.28% ±3.04% ±3.97%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='no' sync='yes' n=100000          ***     11.62 %       ±2.35% ±3.13% ±4.08%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='yes' sync='no' n=100000          ***      3.82 %       ±1.59% ±2.12% ±2.78%\nstreams/writable-manywrites.js len=1024 callback='yes' writev='yes' sync='yes' n=100000         ***     14.31 %       ±3.41% ±4.56% ±5.99%\nstreams/writable-manywrites.js len=32768 callback='no' writev='no' sync='no' n=100000           ***      6.87 %       ±2.67% ±3.55% ±4.63%\nstreams/writable-manywrites.js len=32768 callback='no' writev='no' sync='yes' n=100000          ***      7.86 %       ±2.17% ±2.90% ±3.79%\nstreams/writable-manywrites.js len=32768 callback='no' writev='yes' sync='no' n=100000          ***      8.60 %       ±4.29% ±5.74% ±7.53%\nstreams/writable-manywrites.js len=32768 callback='no' writev='yes' sync='yes' n=100000         ***      7.28 %       ±2.42% ±3.24% ±4.26%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='no' sync='no' n=100000          ***      6.23 %       ±1.55% ±2.07% ±2.69%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='no' sync='yes' n=100000         ***     10.18 %       ±1.71% ±2.28% ±2.98%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='yes' sync='no' n=100000         ***      5.76 %       ±1.70% ±2.26% ±2.95%\nstreams/writable-manywrites.js len=32768 callback='yes' writev='yes' sync='yes' n=100000        ***     10.23 %       ±2.66% ±3.55% ±4.64%\n</code></pre></div>",
            "url": "https://github.com/nodejs/node/pull/50012",
            "title": "perf: optimize Writable",
            "date_modified": "2023-10-16T12:55:04.000Z",
            "date_published": "2023-10-02T10:06:21.000Z",
            "author": {
                "name": "ronag",
                "url": "https://github.com/ronag"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2512748?u=4d3b96c531c7d0ae8b192a48105b6f4554152a2a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This commit adds a <code class=\"notranslate\">'flush'</code> option to the <code class=\"notranslate\">fs.writeFile</code> family of functions.</p>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1914304981\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49886\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/49886/hovercard\" href=\"https://github.com/nodejs/node/issues/49886\">#49886</a></p>\n<p dir=\"auto\">Notable change summary: When writing to files, it is possible that data is not immediately flushed to permanent storage. This allows subsequent read operations to see stale data. This PR adds a <code class=\"notranslate\">'flush'</code> option to the <code class=\"notranslate\">fs.writeFile</code> family of functions which forces the data to be flushed at the end of a successful write operation.</p>",
            "url": "https://github.com/nodejs/node/pull/50009",
            "title": "fs: add flush option to writeFile() functions",
            "date_modified": "2023-10-04T13:10:44.000Z",
            "date_published": "2023-10-02T03:57:40.000Z",
            "author": {
                "name": "cjihrig",
                "url": "https://github.com/cjihrig"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This makes it possile to hit the in-isolate compilation cache when host-defined options are not necessary.</p>\n<p dir=\"auto\">Local benchmark numbers: huge variance because when the cache is missed (in the main branch) it is just toooooo slow, I think we can keep n fairly small for now until we no longer need to compare the cache-miss cases, but the speed up is very visible if you just run the benchmark locally - with cache hit it finishes in a blink of an eye and without cache it gets stuck for a few seconds.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                                   confidence improvement accuracy (*)     (**)    (***)\nvm/compile-script-in-isolate-cache.js n=100 type='with-dynamic-import-callback'                   -0.33 %       ±0.81%   ±1.08%   ±1.41%\nvm/compile-script-in-isolate-cache.js n=100 type='without-dynamic-import-callback'        ***   9132.25 %     ±319.74% ±433.30% ±580.24%\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                                   confidence improvement accuracy (*)     (**)    (***)\nvm/compile-script-in-isolate-cache.js n=100 type='with-dynamic-import-callback'                   -0.33 %       ±0.81%   ±1.08%   ±1.41%\nvm/compile-script-in-isolate-cache.js n=100 type='without-dynamic-import-callback'        ***   9132.25 %     ±319.74% ±433.30% ±580.24%\n</code></pre></div>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"709722982\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/35375\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/35375/hovercard\" href=\"https://github.com/nodejs/node/issues/35375\">#35375</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/49950",
            "title": "vm: use default host-defined options when importModuleDynamically is not set",
            "date_modified": "2023-11-12T10:50:36.000Z",
            "date_published": "2023-09-29T12:57:52.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/19228318?u=bea98f5742a158d0da54ca362c91df34c5840087&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h2 dir=\"auto\">Summary</h2>\n<p dir=\"auto\">Added fast path in almost entirely C++ for <code class=\"notranslate\">writeFileSync</code> with UTF8 encoding and string data. Also improves <code class=\"notranslate\">appendFileSync</code> as it just uses <code class=\"notranslate\">writeFileSync</code> under the hood. Only string data as Buffer seems questionable in benchmarks for this so I'll just leave it for strings for now.</p>\n<p dir=\"auto\"><strong>TL;DR: This makes <code class=\"notranslate\">writeFileSync(path, data: string)</code> UTF8 up to ~2.5x faster depending on data size, especially when using file descriptors</strong></p>\n<h2 dir=\"auto\">Bench results</h2>\n<h3 dir=\"auto\">Benchmark in this PR</h3>\n<p dir=\"auto\">Note: running locally on Linux/i9/SSD</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                                                                 confidence improvement accuracy (*)   (**)  (***)\nfs/bench-writeFileSync.js n=1000 func='writeFile' useBuffer='false' length=1024 useFd='false' encoding='utf8'                   -0.37 %       ±4.40% ±5.90% ±7.77%\nfs/bench-writeFileSync.js n=1000 func='writeFile' useBuffer='false' length=1024 useFd='true' encoding='utf8'            ***     49.15 %       ±5.11% ±6.82% ±8.91%\nfs/bench-writeFileSync.js n=1000 func='writeFile' useBuffer='false' length=102400 useFd='false' encoding='utf8'         ***      6.69 %       ±1.67% ±2.22% ±2.89%\nfs/bench-writeFileSync.js n=1000 func='writeFile' useBuffer='false' length=102400 useFd='true' encoding='utf8'          ***     74.52 %       ±4.35% ±5.85% ±7.74%\nfs/bench-writeFileSync.js n=1000 func='writeFile' useBuffer='false' length=1048576 useFd='false' encoding='utf8'        ***     16.05 %       ±1.60% ±2.14% ±2.81%\nfs/bench-writeFileSync.js n=1000 func='writeFile' useBuffer='false' length=1048576 useFd='true' encoding='utf8'         ***     85.82 %       ±3.58% ±4.77% ±6.23%\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                                                                 confidence improvement accuracy (*)   (**)  (***)\nfs/bench-writeFileSync.js n=1000 func='writeFile' useBuffer='false' length=1024 useFd='false' encoding='utf8'                   -0.37 %       ±4.40% ±5.90% ±7.77%\nfs/bench-writeFileSync.js n=1000 func='writeFile' useBuffer='false' length=1024 useFd='true' encoding='utf8'            ***     49.15 %       ±5.11% ±6.82% ±8.91%\nfs/bench-writeFileSync.js n=1000 func='writeFile' useBuffer='false' length=102400 useFd='false' encoding='utf8'         ***      6.69 %       ±1.67% ±2.22% ±2.89%\nfs/bench-writeFileSync.js n=1000 func='writeFile' useBuffer='false' length=102400 useFd='true' encoding='utf8'          ***     74.52 %       ±4.35% ±5.85% ±7.74%\nfs/bench-writeFileSync.js n=1000 func='writeFile' useBuffer='false' length=1048576 useFd='false' encoding='utf8'        ***     16.05 %       ±1.60% ±2.14% ±2.81%\nfs/bench-writeFileSync.js n=1000 func='writeFile' useBuffer='false' length=1048576 useFd='true' encoding='utf8'         ***     85.82 %       ±3.58% ±4.77% ±6.23%\n</code></pre></div>\n<p dir=\"auto\">Benchmark CI (old): <a href=\"https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1421/\" rel=\"nofollow\">https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1421/</a></p>\n<h3 dir=\"auto\">Alternative benchmark</h3>\n<p dir=\"auto\">Alternative benchmark using <a href=\"https://github.com/oven-sh/bun/blob/main/bench/snippets/write-file.mjs\">Bun's bench for <code class=\"notranslate\">fs.copyFileSync</code></a> (string data, using paths)</p>\n<h4 dir=\"auto\">Current (main)</h4>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"benchmark           time (avg)             (min … max)       p75       p99      p995\n------------------------------------------------------ -----------------------------\n12 ascii          2.19 µs/iter     (2.07 µs … 2.67 µs)   2.21 µs   2.67 µs   2.67 µs\n12 utf8           2.23 µs/iter     (2.08 µs … 2.32 µs)   2.26 µs   2.32 µs   2.32 µs\n12288 ascii       6.14 µs/iter     (5.97 µs … 6.62 µs)   6.14 µs   6.62 µs   6.62 µs\n18432 utf8       40.02 µs/iter  (36.13 µs … 204.16 µs)  40.05 µs   63.6 µs  69.01 µs\"><pre class=\"notranslate\"><code class=\"notranslate\">benchmark           time (avg)             (min … max)       p75       p99      p995\n------------------------------------------------------ -----------------------------\n12 ascii          2.19 µs/iter     (2.07 µs … 2.67 µs)   2.21 µs   2.67 µs   2.67 µs\n12 utf8           2.23 µs/iter     (2.08 µs … 2.32 µs)   2.26 µs   2.32 µs   2.32 µs\n12288 ascii       6.14 µs/iter     (5.97 µs … 6.62 µs)   6.14 µs   6.62 µs   6.62 µs\n18432 utf8       40.02 µs/iter  (36.13 µs … 204.16 µs)  40.05 µs   63.6 µs  69.01 µs\n</code></pre></div>\n<h4 dir=\"auto\">This PR</h4>\n<p dir=\"auto\">Long ascii: <code class=\"notranslate\">6.14µs</code> -&gt; <code class=\"notranslate\">3.46µs</code> (~1.8x speedup)<br>\nLong utf8: <code class=\"notranslate\">40.02µs</code> -&gt; <code class=\"notranslate\">18.25µs</code> (~2.2x speedup)</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"benchmark           time (avg)             (min … max)       p75       p99      p995\n------------------------------------------------------ -----------------------------\n12 ascii          1.97 µs/iter      (1.9 µs … 2.03 µs)   1.98 µs   2.03 µs   2.03 µs\n12 utf8           1.95 µs/iter        (1.91 µs … 2 µs)   1.97 µs      2 µs      2 µs\n12288 ascii       3.46 µs/iter      (3.39 µs … 3.6 µs)   3.47 µs    3.6 µs    3.6 µs\n18432 utf8       18.25 µs/iter  (16.06 µs … 147.95 µs)  18.48 µs  21.77 µs  24.03 µs\"><pre class=\"notranslate\"><code class=\"notranslate\">benchmark           time (avg)             (min … max)       p75       p99      p995\n------------------------------------------------------ -----------------------------\n12 ascii          1.97 µs/iter      (1.9 µs … 2.03 µs)   1.98 µs   2.03 µs   2.03 µs\n12 utf8           1.95 µs/iter        (1.91 µs … 2 µs)   1.97 µs      2 µs      2 µs\n12288 ascii       3.46 µs/iter      (3.39 µs … 3.6 µs)   3.47 µs    3.6 µs    3.6 µs\n18432 utf8       18.25 µs/iter  (16.06 µs … 147.95 µs)  18.48 µs  21.77 µs  24.03 µs\n</code></pre></div>",
            "url": "https://github.com/nodejs/node/pull/49884",
            "title": "fs: add c++ fast path for writeFileSync string utf8",
            "date_modified": "2023-12-01T13:49:09.000Z",
            "date_published": "2023-09-26T18:42:04.000Z",
            "author": {
                "name": "CanadaHonk",
                "url": "https://github.com/CanadaHonk"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This includes multiple PRs for the fixes and the tests related to vm memory issues.</p>\n<p dir=\"auto\">To avoid breaking the ABI on v20.x, instead of backporting <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1880869824\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49491\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49491/hovercard\" href=\"https://github.com/nodejs/node/pull/49491\">#49491</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1875121662\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49419\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49419/hovercard\" href=\"https://github.com/nodejs/node/pull/49419\">#49419</a>, we just introduce an completely new API <code class=\"notranslate\">v8::Object::SetInternalFieldForNodeCore()</code> to our v20.x fork of V8 which can be used to add internal references to <code class=\"notranslate\">v8::UnboundScript</code> and <code class=\"notranslate\">v8::Module</code>, and use that instead to backport <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1767932194\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/48510\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/48510/hovercard\" href=\"https://github.com/nodejs/node/pull/48510\">#48510</a> - this should be fine if we add enough warning to tell embedders and addon authors not to use them, and we will not update the V8 fork in v20.x often so it is unlikely to create conflicts.</p>\n<h3 dir=\"auto\">deps: add v8::Object::SetInternalFieldForNodeCore()</h3>\n<p dir=\"auto\">This is a non-ABI breaking solution for<br>\n<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/v8/v8/commit/b60a03df4cebafb4c92ee644d11617ad73889e5e/hovercard\" href=\"https://github.com/v8/v8/commit/b60a03df4cebafb4c92ee644d11617ad73889e5e\">v8/v8@<tt>b60a03d</tt></a><br>\nand<br>\n<a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/v8/v8/commit/0aa622e12893e9921c01a34ce9507b544e599c4a/hovercard\" href=\"https://github.com/v8/v8/commit/0aa622e12893e9921c01a34ce9507b544e599c4a\">v8/v8@<tt>0aa622e</tt></a><br>\nwhich are necessary for backporting vm-related memory fixes to v20.x.</p>\n<h3 dir=\"auto\">module: use symbol in WeakMap to manage host defined options</h3>\n<p dir=\"auto\">Previously when managing the importModuleDynamically callback of<br>\nvm.compileFunction(), we use an ID number as the host defined option<br>\nand maintain a per-Environment ID -&gt; CompiledFnEntry map to retain<br>\nthe top-level referrer function returned by vm.compileFunction() in<br>\norder to pass it back to the callback, but it would leak because with<br>\nhow we used v8::Persistent to maintain this reference, V8 would not<br>\nbe able to understand the cycle and would just think that the<br>\nCompiledFnEntry was supposed to live forever. We made an attempt<br>\nto make that reference known to V8 by making the CompiledFnEntry weak<br>\nand using a private symbol to make CompiledFnEntry strongly<br>\nreferences the top-level referrer function in<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1595732057\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/46785\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/46785/hovercard\" href=\"https://github.com/nodejs/node/pull/46785\">#46785</a>, but that turned out to be<br>\nunsound, because the there's no guarantee that the top-level function<br>\nmust be alive while import() can still be initiated from that<br>\nfunction, since V8 could discard the top-level function and only keep<br>\ninner functions alive, so relying on the top-level function to keep<br>\nthe CompiledFnEntry alive could result in use-after-free which caused<br>\na revert of that fix.</p>\n<p dir=\"auto\">With this patch we use a symbol in the host defined options instead of<br>\na number, because with the stage-3 symbol-as-weakmap-keys proposal<br>\nwe could directly use that symbol to keep the referrer alive using a<br>\nWeakMap. As a bonus this also keeps the other kinds of referrers<br>\nalive as long as import() can still be initiated from that<br>\nScript/Module, so this also fixes the long-standing crash caused by<br>\nvm.Script being GC'ed too early when its importModuleDynamically<br>\ncallback still needs it.</p>\n<p dir=\"auto\">PR-URL: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1767932194\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/48510\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/48510/hovercard\" href=\"https://github.com/nodejs/node/pull/48510\">#48510</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1335517586\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/44211\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/44211/hovercard\" href=\"https://github.com/nodejs/node/issues/44211\">#44211</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1147212720\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/42080\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/42080/hovercard\" href=\"https://github.com/nodejs/node/issues/42080\">#42080</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1624228307\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47096\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47096/hovercard\" href=\"https://github.com/nodejs/node/issues/47096\">#47096</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1248078522\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/43205\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/43205/hovercard\" href=\"https://github.com/nodejs/node/issues/43205\">#43205</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"892413466\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/38695\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/38695/hovercard\" href=\"https://github.com/nodejs/node/issues/38695\">#38695</a><br>\nReviewed-By: Antoine du Hamel <a href=\"mailto:duhamelantoine1995@gmail.com\">duhamelantoine1995@gmail.com</a><br>\nReviewed-By: Benjamin Gruenbaum <a href=\"mailto:benjamingr@gmail.com\">benjamingr@gmail.com</a><br>\nReviewed-By: Stephen Belanger <a href=\"mailto:admin@stephenbelanger.com\">admin@stephenbelanger.com</a></p>\n<h3 dir=\"auto\">module: fix leak of vm.SyntheticModule</h3>\n<p dir=\"auto\">Previously we maintain a strong persistent reference to the<br>\nModuleWrap to retrieve the ID-to-ModuleWrap mapping from<br>\nthe HostImportModuleDynamicallyCallback using the number ID<br>\nstored in the host-defined options. As a result the ModuleWrap<br>\nwould be kept alive until the Environment is shut down, which<br>\nwould be a leak for user code. With the new symbol-based<br>\nhost-defined option we can just get the ModuleWrap from the<br>\nJS-land WeakMap so there's now no need to maintain this<br>\nstrong reference. This would at least fix the leak for<br>\nvm.SyntheticModule. vm.SourceTextModule is still leaking<br>\ndue to the strong persistent reference to the v8::Module.</p>\n<p dir=\"auto\">PR-URL: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1767932194\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/48510\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/48510/hovercard\" href=\"https://github.com/nodejs/node/pull/48510\">#48510</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1335517586\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/44211\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/44211/hovercard\" href=\"https://github.com/nodejs/node/issues/44211\">#44211</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1147212720\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/42080\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/42080/hovercard\" href=\"https://github.com/nodejs/node/issues/42080\">#42080</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1624228307\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47096\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47096/hovercard\" href=\"https://github.com/nodejs/node/issues/47096\">#47096</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1248078522\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/43205\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/43205/hovercard\" href=\"https://github.com/nodejs/node/issues/43205\">#43205</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"892413466\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/38695\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/38695/hovercard\" href=\"https://github.com/nodejs/node/issues/38695\">#38695</a><br>\nReviewed-By: Antoine du Hamel <a href=\"mailto:duhamelantoine1995@gmail.com\">duhamelantoine1995@gmail.com</a><br>\nReviewed-By: Benjamin Gruenbaum <a href=\"mailto:benjamingr@gmail.com\">benjamingr@gmail.com</a><br>\nReviewed-By: Stephen Belanger <a href=\"mailto:admin@stephenbelanger.com\">admin@stephenbelanger.com</a></p>\n<h3 dir=\"auto\">module: fix the leak in SourceTextModule and ContextifySript</h3>\n<p dir=\"auto\">Replace the persistent handles to v8::Module and<br>\nv8::UnboundScript with an internal reference that V8's GC is<br>\naware of to fix the leaks.</p>\n<p dir=\"auto\">PR-URL: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1767932194\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/48510\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/48510/hovercard\" href=\"https://github.com/nodejs/node/pull/48510\">#48510</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1335517586\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/44211\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/44211/hovercard\" href=\"https://github.com/nodejs/node/issues/44211\">#44211</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1147212720\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/42080\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/42080/hovercard\" href=\"https://github.com/nodejs/node/issues/42080\">#42080</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1624228307\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47096\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47096/hovercard\" href=\"https://github.com/nodejs/node/issues/47096\">#47096</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1248078522\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/43205\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/43205/hovercard\" href=\"https://github.com/nodejs/node/issues/43205\">#43205</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"892413466\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/38695\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/38695/hovercard\" href=\"https://github.com/nodejs/node/issues/38695\">#38695</a><br>\nReviewed-By: Antoine du Hamel <a href=\"mailto:duhamelantoine1995@gmail.com\">duhamelantoine1995@gmail.com</a><br>\nReviewed-By: Benjamin Gruenbaum <a href=\"mailto:benjamingr@gmail.com\">benjamingr@gmail.com</a><br>\nReviewed-By: Stephen Belanger <a href=\"mailto:admin@stephenbelanger.com\">admin@stephenbelanger.com</a></p>\n<h3 dir=\"auto\">test: add checkIfCollectable to test/common/gc.js</h3>\n<p dir=\"auto\">PR-URL: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1899433911\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49671\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49671/hovercard\" href=\"https://github.com/nodejs/node/pull/49671\">#49671</a><br>\nReviewed-By: James M Snell <a href=\"mailto:jasnell@gmail.com\">jasnell@gmail.com</a><br>\nReviewed-By: Benjamin Gruenbaum <a href=\"mailto:benjamingr@gmail.com\">benjamingr@gmail.com</a><br>\nReviewed-By: Yagiz Nizipli <a href=\"mailto:yagiz@nizipli.com\">yagiz@nizipli.com</a><br>\nReviewed-By: Michaël Zasso <a href=\"mailto:targos@protonmail.com\">targos@protonmail.com</a></p>\n<h3 dir=\"auto\">test: use checkIfCollectable in vm leak tests</h3>\n<p dir=\"auto\">Previously we simply create a lot of the target objects and check<br>\nif the process crash due to OOM. Due to how we use emphemeron GC<br>\nto handle memory management, which is inefficient but necessary<br>\nfor correctness, the tests can produce false positives as<br>\nthe GC isn't efficient enough to catch up with a very fast<br>\nheap growth.</p>\n<p dir=\"auto\">This patch uses a new checkIfCollectable() utility to terminate the<br>\ntest early once we detect that any of the target object can actually<br>\nbe garbage collected. This should lower the chance of false positives.<br>\nAs a drive-by this also allows us to use setImmediate() to grow the<br>\nheap even faster to make the tests run faster.</p>\n<p dir=\"auto\">PR-URL: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1899433911\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49671\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49671/hovercard\" href=\"https://github.com/nodejs/node/pull/49671\">#49671</a><br>\nReviewed-By: James M Snell <a href=\"mailto:jasnell@gmail.com\">jasnell@gmail.com</a><br>\nReviewed-By: Benjamin Gruenbaum <a href=\"mailto:benjamingr@gmail.com\">benjamingr@gmail.com</a><br>\nReviewed-By: Yagiz Nizipli <a href=\"mailto:yagiz@nizipli.com\">yagiz@nizipli.com</a><br>\nReviewed-By: Michaël Zasso <a href=\"mailto:targos@protonmail.com\">targos@protonmail.com</a></p>\n<h3 dir=\"auto\">test: deflake test-vm-contextified-script-leak</h3>\n<p dir=\"auto\">Similar to the test-vm-source-text-module-leak fix, use a snapshot<br>\nto force a thorough GC in order to prevent false positives.</p>\n<p dir=\"auto\">PR-URL: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1901817727\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49710\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49710/hovercard\" href=\"https://github.com/nodejs/node/pull/49710\">#49710</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1899976042\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/reliability/issues/669\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/reliability/issues/669/hovercard\" href=\"https://github.com/nodejs/reliability/issues/669\">nodejs/reliability#669</a><br>\nReviewed-By: Franziska Hinkelmann <a href=\"mailto:franziska.hinkelmann@gmail.com\">franziska.hinkelmann@gmail.com</a><br>\nReviewed-By: Michaël Zasso <a href=\"mailto:targos@protonmail.com\">targos@protonmail.com</a><br>\nReviewed-By: Luigi Pinca <a href=\"mailto:luigipinca@gmail.com\">luigipinca@gmail.com</a><br>\nReviewed-By: Rich Trott <a href=\"mailto:rtrott@gmail.com\">rtrott@gmail.com</a></p>",
            "url": "https://github.com/nodejs/node/pull/49874",
            "title": "[v20.x] backport vm-related memory fixes",
            "date_modified": "2023-09-28T20:01:25.000Z",
            "date_published": "2023-09-26T11:39:35.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/456802?u=55a029ca7659fa56e1422d8f8b619cdba6a33bac&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><blockquote>\n<p dir=\"auto\">This PR contains work by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/LiviaMedeiros/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/LiviaMedeiros\">@LiviaMedeiros</a>, <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JakobJingleheimer/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JakobJingleheimer\">@JakobJingleheimer</a>, <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/bmeck/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bmeck\">@bmeck</a> adapted from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1885828252\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49531\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49531/hovercard\" href=\"https://github.com/nodejs/node/pull/49531\">#49531</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1886169418\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49540\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49540/hovercard\" href=\"https://github.com/nodejs/node/pull/49540\">#49540</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1863068635\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49295\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49295/hovercard\" href=\"https://github.com/nodejs/node/pull/49295\">#49295</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1105034831\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/41552\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/41552/hovercard\" href=\"https://github.com/nodejs/node/pull/41552\">#41552</a>, <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"551053395\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/31388\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/31388/hovercard\" href=\"https://github.com/nodejs/node/pull/31388\">#31388</a>.</p>\n</blockquote>\n<p dir=\"auto\">This PR implements most of the proposal in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1877773681\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49432\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/49432/hovercard\" href=\"https://github.com/nodejs/node/issues/49432\">#49432</a>. It creates a new flag, <code class=\"notranslate\">--experimental-default-type</code>, which supports values <code class=\"notranslate\">commonjs</code> (the default) or <code class=\"notranslate\">module</code>. Under <code class=\"notranslate\">--experimental-default-type=module</code>, Node.js interprets the following as ES modules:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">String input provided via <code class=\"notranslate\">--eval</code> or STDIN, if <code class=\"notranslate\">--input-type</code> is unspecified.</p>\n</li>\n<li>\n<p dir=\"auto\">Files ending in <code class=\"notranslate\">.js</code> or with no extension, if there is no <code class=\"notranslate\">package.json</code> file present in the same folder or any parent folder.</p>\n</li>\n<li>\n<p dir=\"auto\">Files ending in <code class=\"notranslate\">.js</code> or with no extension, if the nearest parent <code class=\"notranslate\">package.json</code> field lacks a <code class=\"notranslate\">type</code> field; unless the folder is inside a <code class=\"notranslate\">node_modules</code> folder.</p>\n</li>\n</ul>\n<p dir=\"auto\">Extensionless files are interpreted as Wasm if <code class=\"notranslate\">--experimental-wasm-modules</code> is passed and the file contains the “magic bytes” Wasm header.</p>\n<p dir=\"auto\">The ESM loader is used for all entry points, and we don’t pass through <code class=\"notranslate\">Module.runMain</code>. Under this flag, we no longer support monkey-patching of that method by files loaded via <code class=\"notranslate\">--require</code>.</p>\n<p dir=\"auto\">This PR does <em>not</em> implement the “parse the entry point as a URL” part of <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1877773681\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49432\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/49432/hovercard\" href=\"https://github.com/nodejs/node/issues/49432\">#49432</a>, as there are still some design decisions to be made around that and it’s substantial enough to warrant being implemented as a separate PR.</p>\n<p dir=\"auto\">This is related to <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1892908825\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49629\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49629/hovercard\" href=\"https://github.com/nodejs/node/pull/49629\">#49629</a> and linked PRs, which include the above behaviors for extensionless files but don’t require a flag. I think we can potentially ship that change on its own, separate from making this flag the new default behavior, because extensionless files currently error in <code class=\"notranslate\">module</code> scopes. I’d prefer to ship it behind the <code class=\"notranslate\">--experimental-default-type</code> flag first to work out any kinks before splitting it out to not require any flag.</p>\n<p dir=\"auto\">If people don’t mind, I’d like if this PR thread can focus on the implementation. If anyone has any thoughts on the design or intentions behind this, there’s already a detailed thread for that at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1877773681\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49432\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/49432/hovercard\" href=\"https://github.com/nodejs/node/issues/49432\">#49432</a>.</p>\n<p dir=\"auto\">cc @nodejs/loaders @nodejs/wasi @nodejs/startup @nodejs/tsc</p>\n<h3 dir=\"auto\">Notable change</h3>\n<p dir=\"auto\">The new flag <code class=\"notranslate\">--experimental-default-type</code> can be used to flip the default module system used by Node.js. Input that is already explicitly defined as ES modules or CommonJS, such as by a <code class=\"notranslate\">package.json</code> <code class=\"notranslate\">\"type\"</code> field or <code class=\"notranslate\">.mjs</code>/<code class=\"notranslate\">.cjs</code> file extension or the <code class=\"notranslate\">--input-type</code> flag, is unaffected. What is currently implicitly CommonJS would instead be interpreted as ES modules under <code class=\"notranslate\">--experimental-default-type=module</code>:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">String input provided via <code class=\"notranslate\">--eval</code> or STDIN, if <code class=\"notranslate\">--input-type</code> is unspecified.</p>\n</li>\n<li>\n<p dir=\"auto\">Files ending in <code class=\"notranslate\">.js</code> or with no extension, if there is no <code class=\"notranslate\">package.json</code> file present in the same folder or any parent folder.</p>\n</li>\n<li>\n<p dir=\"auto\">Files ending in <code class=\"notranslate\">.js</code> or with no extension, if the nearest parent <code class=\"notranslate\">package.json</code> field lacks a <code class=\"notranslate\">type</code> field; unless the folder is inside a <code class=\"notranslate\">node_modules</code> folder.</p>\n</li>\n</ul>\n<p dir=\"auto\">In addition, extensionless files are interpreted as Wasm if <code class=\"notranslate\">--experimental-wasm-modules</code> is passed and the file contains the “magic bytes” Wasm header.</p>",
            "url": "https://github.com/nodejs/node/pull/49869",
            "title": "esm: `--experimental-default-type` flag to flip module defaults",
            "date_modified": "2023-12-05T16:59:34.000Z",
            "date_published": "2023-09-26T00:53:23.000Z",
            "author": {
                "name": "GeoffreyBooth",
                "url": "https://github.com/GeoffreyBooth"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/49056869?u=ec70859392ec0140d60446f7815ad2bf857904fd&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Sync functions in fs throwed an error with a stacktrace which is helpful for debugging. But functions in fs/promises throwed an error without a stacktrace. This commit adds stacktraces by calling Error.captureStacktrace and re-throwing the error.</p>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"680601087\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/34817\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/34817/hovercard\" href=\"https://github.com/nodejs/node/issues/34817\">#34817</a><br>\n<span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #50160.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1939624569\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/50160\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/50160/hovercard\" href=\"https://github.com/nodejs/node/issues/50160\">#50160</a></p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import fsS from 'node:fs'\nfsS.readdirSync('./foo')\n/*\nnode:fs:1515\n  handleErrorFromBinding(ctx);\n  ^\n\nError: ENOENT: no such file or directory, scandir './foo'\n    at Object.readdirSync (node:fs:1515:3)\n    at file:///mnt/c/users/green/Downloads/foo/index.mjs:6:5\n    at ModuleJob.run (node:internal/modules/esm/module_job:218:25)\n    at async ModuleLoader.import (node:internal/modules/esm/loader:328:24)\n    at async loadESM (node:internal/process/esm_loader:34:7)\n    at async handleMainPromise (node:internal/modules/run_main:79:12) {\n  errno: -2,\n  syscall: 'scandir',\n  code: 'ENOENT',\n  path: './foo'\n}\n\nNode.js v21.0.0-pre\n*/\n\nimport fs from 'node:fs/promises'\nawait fs.readdir('./foo')\n/*\n---------- Before ----------\n\nnode:internal/process/esm_loader:40\n      internalBinding('errors').triggerUncaughtException(\n                                ^\n\n[Error: ENOENT: no such file or directory, scandir './foo'] {\n  errno: -2,\n  code: 'ENOENT',\n  syscall: 'scandir',\n  path: './foo'\n}\n\nNode.js v21.0.0-pre\n\n---------- After ----------\n\nnode:internal/fs/promises:862\n  const result = await binding.readdir(\n                 ^\n\nError: ENOENT: no such file or directory, scandir './foo'\n    at async Object.readdir (node:internal/fs/promises:862:18)\n    at async file:///mnt/c/users/green/Downloads/foo/index.mjs:5:1 {\n  errno: -2,\n  code: 'ENOENT',\n  syscall: 'scandir',\n  path: './foo'\n}\n\nNode.js v21.0.0-pre\n*/\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">fsS</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'node:fs'</span>\n<span class=\"pl-s1\">fsS</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">readdirSync</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'./foo'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">node:fs:1515</span>\n<span class=\"pl-c\">  handleErrorFromBinding(ctx);</span>\n<span class=\"pl-c\">  ^</span>\n<span class=\"pl-c\"></span>\n<span class=\"pl-c\">Error: ENOENT: no such file or directory, scandir './foo'</span>\n<span class=\"pl-c\">    at Object.readdirSync (node:fs:1515:3)</span>\n<span class=\"pl-c\">    at file:///mnt/c/users/green/Downloads/foo/index.mjs:6:5</span>\n<span class=\"pl-c\">    at ModuleJob.run (node:internal/modules/esm/module_job:218:25)</span>\n<span class=\"pl-c\">    at async ModuleLoader.import (node:internal/modules/esm/loader:328:24)</span>\n<span class=\"pl-c\">    at async loadESM (node:internal/process/esm_loader:34:7)</span>\n<span class=\"pl-c\">    at async handleMainPromise (node:internal/modules/run_main:79:12) {</span>\n<span class=\"pl-c\">  errno: -2,</span>\n<span class=\"pl-c\">  syscall: 'scandir',</span>\n<span class=\"pl-c\">  code: 'ENOENT',</span>\n<span class=\"pl-c\">  path: './foo'</span>\n<span class=\"pl-c\">}</span>\n<span class=\"pl-c\"></span>\n<span class=\"pl-c\">Node.js v21.0.0-pre</span>\n<span class=\"pl-c\">*/</span>\n\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">fs</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'node:fs/promises'</span>\n<span class=\"pl-k\">await</span> <span class=\"pl-s1\">fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">readdir</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'./foo'</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-c\">/*</span>\n<span class=\"pl-c\">---------- Before ----------</span>\n<span class=\"pl-c\"></span>\n<span class=\"pl-c\">node:internal/process/esm_loader:40</span>\n<span class=\"pl-c\">      internalBinding('errors').triggerUncaughtException(</span>\n<span class=\"pl-c\">                                ^</span>\n<span class=\"pl-c\"></span>\n<span class=\"pl-c\">[Error: ENOENT: no such file or directory, scandir './foo'] {</span>\n<span class=\"pl-c\">  errno: -2,</span>\n<span class=\"pl-c\">  code: 'ENOENT',</span>\n<span class=\"pl-c\">  syscall: 'scandir',</span>\n<span class=\"pl-c\">  path: './foo'</span>\n<span class=\"pl-c\">}</span>\n<span class=\"pl-c\"></span>\n<span class=\"pl-c\">Node.js v21.0.0-pre</span>\n<span class=\"pl-c\"></span>\n<span class=\"pl-c\">---------- After ----------</span>\n<span class=\"pl-c\"></span>\n<span class=\"pl-c\">node:internal/fs/promises:862</span>\n<span class=\"pl-c\">  const result = await binding.readdir(</span>\n<span class=\"pl-c\">                 ^</span>\n<span class=\"pl-c\"></span>\n<span class=\"pl-c\">Error: ENOENT: no such file or directory, scandir './foo'</span>\n<span class=\"pl-c\">    at async Object.readdir (node:internal/fs/promises:862:18)</span>\n<span class=\"pl-c\">    at async file:///mnt/c/users/green/Downloads/foo/index.mjs:5:1 {</span>\n<span class=\"pl-c\">  errno: -2,</span>\n<span class=\"pl-c\">  code: 'ENOENT',</span>\n<span class=\"pl-c\">  syscall: 'scandir',</span>\n<span class=\"pl-c\">  path: './foo'</span>\n<span class=\"pl-c\">}</span>\n<span class=\"pl-c\"></span>\n<span class=\"pl-c\">Node.js v21.0.0-pre</span>\n<span class=\"pl-c\">*/</span></pre></div>\n<p dir=\"auto\">I have some questions.</p>\n<ul dir=\"auto\">\n<li>Was the stacktrace generation skipped on purpose? For example, in terms of performance. I remember capturing the stacktrace is slow.</li>\n<li>Is there a better way? I guess I can call <code class=\"notranslate\">Error.captureStackTrace</code> on C++ land but didn't find the way.</li>\n</ul>",
            "url": "https://github.com/nodejs/node/pull/49849",
            "title": "fs: add stacktrace to fs/promises",
            "date_modified": "2023-12-12T05:29:05.000Z",
            "date_published": "2023-09-25T05:41:38.000Z",
            "author": {
                "name": "sapphi-red",
                "url": "https://github.com/sapphi-red"
            }
        }
    ]
}