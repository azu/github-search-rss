{
    "version": "https://jsonfeed.org/version/1",
    "title": "Node.js notable changes",
    "home_page_url": "https://azu.github.io/github-search-rss/nodejs-notable.json",
    "feed_url": "https://azu.github.io/github-search-rss/nodejs-notable.json",
    "description": "Node.js notable changes on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/391987?u=7cb0ae14730ed720e1e8cd269f17cdd1638f38e4&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This updates simdutf to version 5.0.0: <a href=\"https://github.com/simdutf/simdutf/releases/tag/v5.0.0\">https://github.com/simdutf/simdutf/releases/tag/v5.0.0</a></p>\n<p dir=\"auto\">The main reason for this update is to get support for an accelerated Base64 codec (see <a href=\"https://github.com/simdutf/simdutf/?tab=readme-ov-file#base64\">https://github.com/simdutf/simdutf/?tab=readme-ov-file#base64</a>). This should help with the following issues:</p>\n<ul dir=\"auto\">\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1958000178\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/performance/issues/128\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/performance/issues/128/hovercard\" href=\"https://github.com/nodejs/performance/issues/128\">nodejs/performance#128</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"868694279\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/38433\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/38433/hovercard\" href=\"https://github.com/nodejs/node/pull/38433\">#38433</a></li>\n<li><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2119187806\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/51670\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/51670/hovercard\" href=\"https://github.com/nodejs/node/pull/51670\">#51670</a></li>\n</ul>",
            "url": "https://github.com/nodejs/node/pull/52138",
            "title": "deps: update simdutf to 5.0.0",
            "date_modified": "2024-03-20T17:44:39.000Z",
            "date_published": "2024-03-18T17:39:50.000Z",
            "author": {
                "name": "lemire",
                "url": "https://github.com/lemire"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8221854?u=656e1eb9ee161eedbd253bebb625d523b191a8a3&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>",
            "url": "https://github.com/nodejs/node/pull/52074",
            "title": "watch: mark as stable",
            "date_modified": "2024-03-15T13:17:32.000Z",
            "date_published": "2024-03-13T13:02:49.000Z",
            "author": {
                "name": "MoLow",
                "url": "https://github.com/MoLow"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3065230?u=0e938c0e3fcdc4998886799c5bc247ea8d17714a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">NOTEABLE CHANGE: Increase the default highWaterMark for streams. This provides a performance boost across the board at the cost of slightly higher memory usage. Users in memory sensitive environments are encouraged to explicitly set <code class=\"notranslate\">setDefaultHighWaterMark</code>.</p>\n<p dir=\"auto\">This should give a performance boost accross the board.</p>\n<p dir=\"auto\">Given that the old limit is a decod old and memory capacity has doubled many times since I think it is appropriate to slightly bump the default limit.</p>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1579856724\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/46608\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/46608/hovercard\" href=\"https://github.com/nodejs/node/pull/46608\">#46608</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1935308355\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/50120\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/50120/hovercard\" href=\"https://github.com/nodejs/node/pull/50120\">#50120</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/52037",
            "title": "stream: bump default highWaterMark",
            "date_modified": "2024-03-17T07:53:16.000Z",
            "date_published": "2024-03-10T18:23:46.000Z",
            "author": {
                "name": "ronag",
                "url": "https://github.com/ronag"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/21155906?u=3d89598abadbba249a3db64bdda9957218ca16ed&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Add <code class=\"notranslate\">uv_get_available_memory</code> to <code class=\"notranslate\">Diagnostic Report</code> and <code class=\"notranslate\">process</code>.<br>\ncc <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/joyeecheung/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/joyeecheung\">@joyeecheung</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/bnoordhuis/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bnoordhuis\">@bnoordhuis</a></p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">make -j4 test</code> (UNIX), or <code class=\"notranslate\">vcbuild test</code> (Windows) passes</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> tests and/or benchmarks are included</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> documentation is changed or added</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> commit message follows <a href=\"https://github.com/nodejs/node/blob/master/doc/guides/contributing/pull-requests.md#commit-message-guidelines\">commit guidelines</a></li>\n</ul>",
            "url": "https://github.com/nodejs/node/pull/52023",
            "title": "src: add uv_get_available_memory to report and process",
            "date_modified": "2024-03-13T04:06:52.000Z",
            "date_published": "2024-03-09T06:23:43.000Z",
            "author": {
                "name": "theanarkh",
                "url": "https://github.com/theanarkh"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h4 dir=\"auto\">Summary</h4>\n<p dir=\"auto\">This patch adds <code class=\"notranslate\">require()</code> support for synchronous ESM graphs under<br>\nthe flag <code class=\"notranslate\">--experimental-require-module</code></p>\n<p dir=\"auto\">This is based on the the following design aspect of ESM:</p>\n<ul dir=\"auto\">\n<li>The resolution can be synchronous (up to the host)</li>\n<li>The evaluation of a synchronous graph (without top-level await) is<br>\nalso synchronous, and, by the time the module graph is instantiated<br>\n(before evaluation starts), this is is already known.</li>\n</ul>\n<p dir=\"auto\">If <code class=\"notranslate\">--experimental-require-module</code> is enabled, and the ECMAScript<br>\nmodule being loaded by <code class=\"notranslate\">require()</code> meets the following requirements:</p>\n<ul dir=\"auto\">\n<li>Explicitly marked as an ES module with a <code class=\"notranslate\">\"type\": \"module\"</code> field in<br>\nthe closest package.json or a <code class=\"notranslate\">.mjs</code> extension.</li>\n<li>Fully synchronous (contains no top-level <code class=\"notranslate\">await</code>).</li>\n</ul>\n<p dir=\"auto\"><code class=\"notranslate\">require()</code> will load the requested module as an ES Module, and return<br>\nthe module name space object. In this case it is similar to dynamic<br>\n<code class=\"notranslate\">import()</code> but is run synchronously and returns the name space object<br>\ndirectly.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"// point.mjs\nexport function distance(a, b) { return (b.x - a.x) ** 2 + (b.y - a.y) ** 2; }\nclass Point {\n  constructor(x, y) { this.x = x; this.y = y; }\n}\nexport default Point;\"><pre class=\"notranslate\"><span class=\"pl-c\">// point.mjs</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">distance</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">a</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">b</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-k\">return</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">b</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span> <span class=\"pl-c1\">-</span> <span class=\"pl-s1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">**</span> <span class=\"pl-c1\">2</span> <span class=\"pl-c1\">+</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">b</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">y</span> <span class=\"pl-c1\">-</span> <span class=\"pl-s1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">y</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">**</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">;</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">Point</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-en\">constructor</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">x</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">y</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">x</span><span class=\"pl-kos\">;</span> <span class=\"pl-smi\">this</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">y</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">y</span><span class=\"pl-kos\">;</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-v\">Point</span><span class=\"pl-kos\">;</span></pre></div>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const required = require('./point.mjs');\n// [Module: null prototype] {\n//   default: [class Point],\n//   distance: [Function: distance]\n// }\nconsole.log(required);\n\n(async () =&gt; {\n  const imported = await import('./point.mjs');\n  console.log(imported === required);  // true\n})();\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">required</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'./point.mjs'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// [Module: null prototype] {</span>\n<span class=\"pl-c\">//   default: [class Point],</span>\n<span class=\"pl-c\">//   distance: [Function: distance]</span>\n<span class=\"pl-c\">// }</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">required</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-kos\">(</span><span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">imported</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-k\">import</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'./point.mjs'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">imported</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">required</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-c\">// true</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">If the module being <code class=\"notranslate\">require()</code>'d contains top-level <code class=\"notranslate\">await</code>, or the module<br>\ngraph it <code class=\"notranslate\">import</code>s contains top-level <code class=\"notranslate\">await</code>,<br>\n<code class=\"notranslate\">ERR_REQUIRE_ASYNC_MODULE</code> will be thrown. In this case, users should<br>\nload the asynchronous module using <code class=\"notranslate\">import()</code>.</p>\n<p dir=\"auto\">If <code class=\"notranslate\">--experimental-print-required-tla</code> is enabled, instead of throwing<br>\n<code class=\"notranslate\">ERR_REQUIRE_ASYNC_MODULE</code> before evaluation, Node.js will evaluate the<br>\nmodule, try to locate the top-level awaits, and print their location to<br>\nhelp users find them.</p>\n<h4 dir=\"auto\">Background</h4>\n<p dir=\"auto\">There were some previous discussions about this idea back in 2019 (e.g. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1878168576\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49450\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/49450/hovercard\" href=\"https://github.com/nodejs/node/issues/49450\">#49450</a>). I I didn't go through all of them, but in 2024 I believe we can agree that not supporting <code class=\"notranslate\">require(esm)</code> is creating enough pain for our users that we should really deprioritize the drawbacks of it. A non-perfect solution is still better than having nothing at all IMO.</p>\n<p dir=\"auto\">There was a previous attempt in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"536021102\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/30891\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/30891/hovercard\" href=\"https://github.com/nodejs/node/pull/30891\">#30891</a> which tried to support TLA from the start and thus needed to run the event loop recursively, which would be unsafe and therefore it was closed (synchronous-only <code class=\"notranslate\">require(esm)</code> was brought up in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"536021102\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/30891\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/30891/hovercard?comment_id=565604651&amp;comment_type=issue_comment\" href=\"https://github.com/nodejs/node/pull/30891#issuecomment-565604651\">#30891 (comment)</a> but the PR didn't end up going that way). I have the impression that there were some other attempts before, but non active AFAIK.</p>\n<p dir=\"auto\">This PR tries to keep it simple - only load ESM synchronously when we know it's synchronous (which is part of the design of ESM and is supported by the V8 API), and if it contains TLA, we throw. That should at least address the majority of use cases of ESM (TLA in a module that's supposed to be import'ed is already not a great idea, they are more meant for entry points. If they are really needed, users can use <code class=\"notranslate\">import()</code> to make that asynchronicity explicit).</p>\n<p dir=\"auto\">When I was refactoring the module loader implementation and touching the V8 Module API to fix other issues, this idea appears to be natural to me (since ESM is really designed to have this synchronocity in mind) and does not actually need that much work in 2024 (er, with some refactorings that I already did for other issues at least..), so here is another attempt at it.</p>\n<h4 dir=\"auto\">Motivation</h4>\n<p dir=\"auto\">The motivation for this is probably obvious, but I'll give my take again in case there are unfamiliar readers: CJS/ESM interop would always be done on a best-effort basis and they should not be mixed if avoidable, but today <a href=\"https://github.com/wooorm/npm-esm-vs-cjs\">the majority of the popular packages out there in the registry are still CJS</a>. There needs to be an escape hatch for simple cases while the transition happens.</p>\n<p dir=\"auto\">With <code class=\"notranslate\">require(esm)</code>, when a dependency goes ESM-only, it is less likely to be a breaking change for users as long as it's a synchronous ESM (with no top-level await), which should be the case most of the time. This helps package authors transition to ESM without worrying about user experience, or having to release it as dual module which bloats the <code class=\"notranslate\">node_modules</code> size even further and leads to identity problems due to the duplication.</p>\n<p dir=\"auto\">The design of ESM already ensures that synchronous evaluation and therefore interop with CJS for a synchronous graph is possible (e.g. see <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"422887866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/tc39/proposal-top-level-await/issues/61\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/tc39/proposal-top-level-await/pull/61/hovercard\" href=\"https://github.com/tc39/proposal-top-level-await/pull/61\">tc39/proposal-top-level-await#61</a>), and we won't be alone in restricting TLA for certain features(e.g. <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"445870405\" data-permission-text=\"Title is private\" data-url=\"https://github.com/w3c/ServiceWorker/issues/1407\" data-hovercard-type=\"issue\" data-hovercard-url=\"/w3c/ServiceWorker/issues/1407/hovercard\" href=\"https://github.com/w3c/ServiceWorker/issues/1407\">w3c/ServiceWorker#1407</a> service workers on the web also disallows TLA) it would be a shame not to make use of that. Ongoing proposal like <a href=\"https://github.com/tc39/proposal-defer-import-eval\">import defer</a> could also help addressing the lazy-loading needs without breaking the synchronous aspect of ESM.</p>\n<h4 dir=\"auto\">TODOs</h4>\n<p dir=\"auto\">There are still some feature interactions that this implementation doesn't handle (e.g. <code class=\"notranslate\">--experimental-detect-module</code> or <code class=\"notranslate\">--experimental-loader</code> or <code class=\"notranslate\">--experimental-wasm-modules</code>). Some edge cases involving cycles probably would have undefined behaviors. I don't think this needs to handle interactions with everything (especially other experimental features) perfectly to land as a first iteration of an experimental feature. We can continue iterating on it while it's experimental.</p>\n",
            "url": "https://github.com/nodejs/node/pull/51977",
            "title": "module: support require()ing synchronous ESM graphs",
            "date_modified": "2024-03-26T19:25:17.000Z",
            "date_published": "2024-03-05T18:08:33.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is similar to the <a href=\"https://developer.chrome.com/docs/devtools/console/utilities#queryObjects-function\" rel=\"nofollow\"><code class=\"notranslate\">queryObjects()</code> console API</a> provided by the Chromium DevTools console. It can be used to search for objects that have the matching constructor on its prototype chain in the heap after a full garbage collection, which can be useful for memory leak regression tests.<br>\nTo avoid surprising results, users should avoid using this API on constructors whose implementation they don't control, or on constructors that can be invoked by other parties in the application.</p>\n<p dir=\"auto\">To avoid accidental leaks, this API does not return raw references to the objects found. By default, it returns the count of the objects found. If <code class=\"notranslate\">options.format</code> is <code class=\"notranslate\">'summary'</code>, it returns an array containing brief string representations for each object. The visibility provided in this API is similar to what the heap snapshot provides, while users can save the cost of serialization and parsing and directly filer the target objects during the search.</p>\n<p dir=\"auto\">We have been using this API internally for the test suite, which has been more stable than any other leak regression testing strategies in the CI. With a public implementation we can now use the public API instead.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const { queryObjects } = require('node:v8');\nclass A { foo = 'bar'; }\nconsole.log(queryObjects(A)); // 0\nlet a = new A();\nconsole.log(queryObjects(A)); // 1\n// [ &quot;A { foo: 'bar' }&quot; ]\nconsole.log(queryObjects(A, { format: 'summary' }));\n\n// Release the object.\na = null;\n// Search again. queryObjects() includes a full garbage collection\n// so a should disappear.\nconsole.log(queryObjects(A)); // 0\n\nclass B extends A { bar = 'qux'; }\n// The child class B's prototype has A's prototype on its prototype chain\n// so the prototype object shows up too.\nconsole.log(queryObjects(A, { format: 'summary' })); // [ A {}' ]\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-kos\">{</span> queryObjects <span class=\"pl-kos\">}</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'node:v8'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">A</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">foo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'bar'</span><span class=\"pl-kos\">;</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">queryObjects</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">A</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// 0</span>\n<span class=\"pl-k\">let</span> <span class=\"pl-s1\">a</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">A</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">queryObjects</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">A</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// 1</span>\n<span class=\"pl-c\">// [ \"A { foo: 'bar' }\" ]</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">queryObjects</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">A</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">format</span>: <span class=\"pl-s\">'summary'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Release the object.</span>\n<span class=\"pl-s1\">a</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">null</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// Search again. queryObjects() includes a full garbage collection</span>\n<span class=\"pl-c\">// so a should disappear.</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">queryObjects</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">A</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// 0</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-v\">B</span> <span class=\"pl-k\">extends</span> <span class=\"pl-v\">A</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">bar</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'qux'</span><span class=\"pl-kos\">;</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-c\">// The child class B's prototype has A's prototype on its prototype chain</span>\n<span class=\"pl-c\">// so the prototype object shows up too.</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">queryObjects</span><span class=\"pl-kos\">(</span><span class=\"pl-v\">A</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">format</span>: <span class=\"pl-s\">'summary'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// [ A {}' ]</span></pre></div>\n",
            "url": "https://github.com/nodejs/node/pull/51927",
            "title": "v8: implement v8.queryObjects() for memory leak regression testing",
            "date_modified": "2024-03-03T08:03:55.000Z",
            "date_published": "2024-02-29T15:55:05.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8221854?u=656e1eb9ee161eedbd253bebb625d523b191a8a3&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #40731.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1045899214\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/40731\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/40731/hovercard\" href=\"https://github.com/nodejs/node/issues/40731\">#40731</a><br>\nThis PR introduces <code class=\"notranslate\">fs.glob</code>and <code class=\"notranslate\">fsPromises.glob</code>.</p>",
            "url": "https://github.com/nodejs/node/pull/51912",
            "title": "fs: expose glob and globSync",
            "date_modified": "2024-03-04T11:11:13.000Z",
            "date_published": "2024-02-28T13:05:02.000Z",
            "author": {
                "name": "MoLow",
                "url": "https://github.com/MoLow"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/33763729?u=7d8cfc0ed4593b0f3d3e320dcee2941c7b6c7ecb&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This PR aims to add support for typed arrays in streams, addressing this issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2129438776\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/51728\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/51728/hovercard\" href=\"https://github.com/nodejs/node/issues/51728\">#51728</a><br>\ncc: @nodejs/streams</p>",
            "url": "https://github.com/nodejs/node/pull/51866",
            "title": "stream: support typed arrays",
            "date_modified": "2024-03-21T11:22:51.000Z",
            "date_published": "2024-02-24T23:56:49.000Z",
            "author": {
                "name": "IlyasShabi",
                "url": "https://github.com/IlyasShabi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/26234614?u=5edcb211e86232b06e6d6133439f9490f9f5d689&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">A fresh new PR from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1267793533\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/43371\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/43371/hovercard\" href=\"https://github.com/nodejs/node/pull/43371\">#43371</a>.</p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/hemanth/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/hemanth\">@hemanth</a> I took the liberty to create a new fresh PR (including a few changes) as your PR is almost 2 years old. I have included you as Co-Author I hope you don't mind (I tried to search for your handle in the OpenJS Foundation Slack, but I couldn't find it).</p>\n<p dir=\"auto\">The concerns raised in the original blocker can be discussed again if necessary, but I believe we should have this API on Node.js.</p>\n<p dir=\"auto\">cc: @nodejs/tsc</p>",
            "url": "https://github.com/nodejs/node/pull/51850",
            "title": "util: add styleText API to text formatting",
            "date_modified": "2024-03-07T23:21:15.000Z",
            "date_published": "2024-02-23T13:48:13.000Z",
            "author": {
                "name": "RafaelGSS",
                "url": "https://github.com/RafaelGSS"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18269663?u=0c9e9c1f0a4d40e2b3f46d18f0e6721f9125411a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is an automated update of root-certificates to 3.98.</p>",
            "url": "https://github.com/nodejs/node/pull/51794",
            "title": "crypto: update root-certificates to 3.98",
            "date_modified": "2024-03-19T17:15:00.000Z",
            "date_published": "2024-02-18T00:25:16.000Z",
            "author": {
                "name": "nodejs-github-bot",
                "url": "https://github.com/nodejs-github-bot"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18269663?u=0c9e9c1f0a4d40e2b3f46d18f0e6721f9125411a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is an automated update of llhttp to 9.2.0.</p>",
            "url": "https://github.com/nodejs/node/pull/51719",
            "title": "deps: update llhttp to 9.2.0",
            "date_modified": "2024-03-13T15:56:27.000Z",
            "date_published": "2024-02-11T00:25:35.000Z",
            "author": {
                "name": "nodejs-github-bot",
                "url": "https://github.com/nodejs-github-bot"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/16144158?u=82cadd66bfcfcd8340269a3c0ce30f503acaf7b4&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">New option <code class=\"notranslate\">--report-exclude-network</code>, also available as <code class=\"notranslate\">report.excludeNetwork</code>, enables the user to exclude networking interfaces in their diagnostic report. On some systems, this can cause the report to take minutes to generate so this option can be used to optimize that.</p>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #46060.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1516426833\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/46060\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/46060/hovercard\" href=\"https://github.com/nodejs/node/issues/46060\">#46060</a></p>",
            "url": "https://github.com/nodejs/node/pull/51645",
            "title": "report: add `--report-exclude-network` option",
            "date_modified": "2024-03-01T21:50:07.000Z",
            "date_published": "2024-02-02T03:17:12.000Z",
            "author": {
                "name": "Ethan-Arrowood",
                "url": "https://github.com/Ethan-Arrowood"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1935246?u=440932d4aed022e31a2140e1825c0167b7a12357&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Introduces 2 new functions to use the default <code class=\"notranslate\">.env</code> parser.</p>\n<h2 dir=\"auto\"><code class=\"notranslate\">process.loadEnvFile(path)</code></h2>\n<ul dir=\"auto\">\n<li>In order to load the <code class=\"notranslate\">.env</code> file in the current directory:</li>\n</ul>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"process.loadEnvFile()\"><pre class=\"notranslate\"><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">loadEnvFile</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span></pre></div>\n<ul dir=\"auto\">\n<li>Load a specific path:</li>\n</ul>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"process.loadEnvFile('./development.env')\"><pre class=\"notranslate\"><span class=\"pl-s1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">loadEnvFile</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'./development.env'</span><span class=\"pl-kos\">)</span></pre></div>\n<h2 dir=\"auto\"><code class=\"notranslate\">util.parseEnv(content)</code></h2>\n<ul dir=\"auto\">\n<li>In order to parse an existing string:</li>\n</ul>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"assert.deepStrictEqual(require('node:util').parseEnv('HELLO=world'), { HELLO: 'world' });\"><pre class=\"notranslate\"><span class=\"pl-s1\">assert</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">deepStrictEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'node:util'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">parseEnv</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'HELLO=world'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">HELLO</span>: <span class=\"pl-s\">'world'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #51413.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2072377715\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/51413\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/51413/hovercard\" href=\"https://github.com/nodejs/node/issues/51413\">#51413</a><br>\nRef <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1848712274\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49148\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/49148/hovercard\" href=\"https://github.com/nodejs/node/issues/49148\">#49148</a></p>\n<hr>\n<p dir=\"auto\">Thank you <a href=\"https://sentry.io\" rel=\"nofollow\">Sentry</a> for sponsoring this work!</p>",
            "url": "https://github.com/nodejs/node/pull/51476",
            "title": "src: add `process.loadEnvFile` and `util.parseEnv`",
            "date_modified": "2024-01-23T18:46:29.000Z",
            "date_published": "2024-01-15T19:31:06.000Z",
            "author": {
                "name": "anonrig",
                "url": "https://github.com/anonrig"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/22647613?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Enable V8's new maglev compiler by default on supported architectures.<br>\nThis brings modest performance improvements for short-lived workloads<br>\nlike CLI programs (see the linked issue) and brings Node.js's<br>\nconfiguration slightly closer to Google Chrome's.</p>\n<p dir=\"auto\">I marked this change as semver-major because Maglev can theoretically<br>\ncause performance regressions, although I haven't seen an example of<br>\nthat in the (somewhat limited) benchmarking I've done.</p>\n<p dir=\"auto\"><strong>Notable Change Summary:</strong> V8's Maglev Compiler is now enabled by<br>\ndefault on supported architectures (<a href=\"https://v8.dev/blog/maglev\" rel=\"nofollow\">https://v8.dev/blog/maglev</a>). Maglev<br>\nimproves CPU performance for short-lived CLI programs by around 8%.</p>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #50690.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1989635220\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/50690\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/50690/hovercard\" href=\"https://github.com/nodejs/node/issues/50690\">#50690</a></p>",
            "url": "https://github.com/nodejs/node/pull/51360",
            "title": "v8: enable maglev on supported architectures",
            "date_modified": "2024-01-08T00:29:13.000Z",
            "date_published": "2024-01-04T08:07:10.000Z",
            "author": {
                "name": "kvakil",
                "url": "https://github.com/kvakil"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/33763729?u=7d8cfc0ed4593b0f3d3e320dcee2941c7b6c7ecb&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Following the <a href=\"https://github.com/nodejs/node/issues/49148\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/49148/hovercard\">follow-up</a>, we currently do not handle multi-line values in the .env file.<br>\nThis PR aims to add this feature based on the implementation in <a href=\"https://github.com/motdotla/dotenv/blob/master/lib/main.js#L12\">dotenv</a></p>",
            "url": "https://github.com/nodejs/node/pull/51289",
            "title": "src: support multi-line values for .env file",
            "date_modified": "2024-01-31T13:26:23.000Z",
            "date_published": "2023-12-26T12:53:05.000Z",
            "author": {
                "name": "IlyasShabi",
                "url": "https://github.com/IlyasShabi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">crypto: implement crypto.hash()</h3>\n<p dir=\"auto\">This patch introduces a helper crypto.hash() that computes<br>\na digest from the input at one shot. This can be 1.2-2x faster<br>\nthan the object-based createHash() for smaller inputs (&lt;= 5MB)<br>\nthat are readily available (not streamed) and incur less memory<br>\noverhead since no intermediate objects will be created.</p>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2010764378\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/performance/issues/136\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/performance/issues/136/hovercard\" href=\"https://github.com/nodejs/performance/issues/136\">nodejs/performance#136</a></p>\n<p dir=\"auto\">From the benchmark CI <a href=\"https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1493/console\" rel=\"nofollow\">https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1493/console</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"22:46:22                                                                           confidence improvement accuracy (*)    (**)   (***)\n22:46:22 crypto/oneshot-hash.js n=1000 type='buffer' method='md5' length=1000             ***     76.69 %      ±11.25% ±15.02% ±19.65%\n22:46:22 crypto/oneshot-hash.js n=1000 type='buffer' method='md5' length=100000            **     12.44 %       ±8.53% ±11.36% ±14.78%\n22:46:22 crypto/oneshot-hash.js n=1000 type='buffer' method='sha1' length=1000            ***     72.44 %      ±11.25% ±15.01% ±19.61%\n22:46:22 crypto/oneshot-hash.js n=1000 type='buffer' method='sha1' length=100000                  -1.19 %       ±6.72%  ±8.94% ±11.65%\n22:46:22 crypto/oneshot-hash.js n=1000 type='buffer' method='sha256' length=1000          ***     65.75 %      ±11.03% ±14.71% ±19.22%\n22:46:22 crypto/oneshot-hash.js n=1000 type='buffer' method='sha256' length=100000                -1.41 %       ±2.99%  ±3.99%  ±5.22%\n22:46:22 crypto/oneshot-hash.js n=1000 type='string' method='md5' length=1000             ***     98.77 %      ±15.43% ±20.67% ±27.18%\n22:46:22 crypto/oneshot-hash.js n=1000 type='string' method='md5' length=100000                    1.43 %       ±3.17%  ±4.21%  ±5.48%\n22:46:22 crypto/oneshot-hash.js n=1000 type='string' method='sha1' length=1000            ***    111.56 %      ±17.04% ±22.85% ±30.09%\n22:46:22 crypto/oneshot-hash.js n=1000 type='string' method='sha1' length=100000                   1.67 %       ±3.73%  ±4.96%  ±6.46%\n22:46:22 crypto/oneshot-hash.js n=1000 type='string' method='sha256' length=1000          ***     88.15 %      ±13.62% ±18.19% ±23.83%\n22:46:22 crypto/oneshot-hash.js n=1000 type='string' method='sha256' length=100000                 2.00 %       ±2.05%  ±2.73%  ±3.56%\n22:46:22 crypto/oneshot-hash.js n=100000 type='buffer' method='md5' length=1000           ***     39.52 %       ±6.05%  ±8.11% ±10.67%\n22:46:22 crypto/oneshot-hash.js n=100000 type='buffer' method='sha1' length=1000          ***     41.96 %       ±7.36%  ±9.86% ±12.95%\n22:46:22 crypto/oneshot-hash.js n=100000 type='buffer' method='sha256' length=1000        ***     23.13 %       ±3.97%  ±5.31%  ±6.96%\n22:46:22 crypto/oneshot-hash.js n=100000 type='string' method='md5' length=1000           ***     23.50 %       ±3.04%  ±4.06%  ±5.30%\n22:46:22 crypto/oneshot-hash.js n=100000 type='string' method='sha1' length=1000          ***     30.30 %       ±3.67%  ±4.89%  ±6.39%\n22:46:22 crypto/oneshot-hash.js n=100000 type='string' method='sha256' length=1000        ***     18.63 %       ±3.12%  ±4.16%  ±5.43%\"><pre class=\"notranslate\"><code class=\"notranslate\">22:46:22                                                                           confidence improvement accuracy (*)    (**)   (***)\n22:46:22 crypto/oneshot-hash.js n=1000 type='buffer' method='md5' length=1000             ***     76.69 %      ±11.25% ±15.02% ±19.65%\n22:46:22 crypto/oneshot-hash.js n=1000 type='buffer' method='md5' length=100000            **     12.44 %       ±8.53% ±11.36% ±14.78%\n22:46:22 crypto/oneshot-hash.js n=1000 type='buffer' method='sha1' length=1000            ***     72.44 %      ±11.25% ±15.01% ±19.61%\n22:46:22 crypto/oneshot-hash.js n=1000 type='buffer' method='sha1' length=100000                  -1.19 %       ±6.72%  ±8.94% ±11.65%\n22:46:22 crypto/oneshot-hash.js n=1000 type='buffer' method='sha256' length=1000          ***     65.75 %      ±11.03% ±14.71% ±19.22%\n22:46:22 crypto/oneshot-hash.js n=1000 type='buffer' method='sha256' length=100000                -1.41 %       ±2.99%  ±3.99%  ±5.22%\n22:46:22 crypto/oneshot-hash.js n=1000 type='string' method='md5' length=1000             ***     98.77 %      ±15.43% ±20.67% ±27.18%\n22:46:22 crypto/oneshot-hash.js n=1000 type='string' method='md5' length=100000                    1.43 %       ±3.17%  ±4.21%  ±5.48%\n22:46:22 crypto/oneshot-hash.js n=1000 type='string' method='sha1' length=1000            ***    111.56 %      ±17.04% ±22.85% ±30.09%\n22:46:22 crypto/oneshot-hash.js n=1000 type='string' method='sha1' length=100000                   1.67 %       ±3.73%  ±4.96%  ±6.46%\n22:46:22 crypto/oneshot-hash.js n=1000 type='string' method='sha256' length=1000          ***     88.15 %      ±13.62% ±18.19% ±23.83%\n22:46:22 crypto/oneshot-hash.js n=1000 type='string' method='sha256' length=100000                 2.00 %       ±2.05%  ±2.73%  ±3.56%\n22:46:22 crypto/oneshot-hash.js n=100000 type='buffer' method='md5' length=1000           ***     39.52 %       ±6.05%  ±8.11% ±10.67%\n22:46:22 crypto/oneshot-hash.js n=100000 type='buffer' method='sha1' length=1000          ***     41.96 %       ±7.36%  ±9.86% ±12.95%\n22:46:22 crypto/oneshot-hash.js n=100000 type='buffer' method='sha256' length=1000        ***     23.13 %       ±3.97%  ±5.31%  ±6.96%\n22:46:22 crypto/oneshot-hash.js n=100000 type='string' method='md5' length=1000           ***     23.50 %       ±3.04%  ±4.06%  ±5.30%\n22:46:22 crypto/oneshot-hash.js n=100000 type='string' method='sha1' length=1000          ***     30.30 %       ±3.67%  ±4.89%  ±6.39%\n22:46:22 crypto/oneshot-hash.js n=100000 type='string' method='sha256' length=1000        ***     18.63 %       ±3.12%  ±4.16%  ±5.43%\n</code></pre></div>\n<details>\n<summary>Benchmark results from macOS + M2</summary>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                         confidence improvement accuracy (*)    (**)   (***)\ncrypto/node-digest.js n=1000 type='buffer' method='md5' length=1000             ***     24.64 %       ±6.24%  ±8.33% ±10.92%\ncrypto/node-digest.js n=1000 type='buffer' method='md5' length=100000                    1.82 %       ±1.87%  ±2.50%  ±3.26%\ncrypto/node-digest.js n=1000 type='buffer' method='sha1' length=1000            ***     46.77 %       ±4.13%  ±5.49%  ±7.15%\ncrypto/node-digest.js n=1000 type='buffer' method='sha1' length=100000                   1.99 %       ±3.24%  ±4.32%  ±5.65%\ncrypto/node-digest.js n=1000 type='buffer' method='sha256' length=1000          ***     46.38 %       ±3.38%  ±4.52%  ±5.93%\ncrypto/node-digest.js n=1000 type='buffer' method='sha256' length=100000                 1.81 %       ±2.71%  ±3.61%  ±4.70%\ncrypto/node-digest.js n=1000 type='string' method='md5' length=1000             ***     25.20 %       ±7.60% ±10.13% ±13.22%\ncrypto/node-digest.js n=1000 type='string' method='md5' length=100000             *      3.22 %       ±2.45%  ±3.28%  ±4.33%\ncrypto/node-digest.js n=1000 type='string' method='sha1' length=1000            ***     41.89 %       ±4.25%  ±5.67%  ±7.41%\ncrypto/node-digest.js n=1000 type='string' method='sha1' length=100000                   0.99 %       ±4.32%  ±5.77%  ±7.57%\ncrypto/node-digest.js n=1000 type='string' method='sha256' length=1000          ***     42.50 %       ±4.12%  ±5.50%  ±7.20%\ncrypto/node-digest.js n=1000 type='string' method='sha256' length=100000                -0.56 %       ±3.69%  ±4.96%  ±6.56%\ncrypto/node-digest.js n=100000 type='buffer' method='md5' length=1000           ***     17.91 %       ±4.82%  ±6.42%  ±8.35%\ncrypto/node-digest.js n=100000 type='buffer' method='sha1' length=1000          ***     47.75 %       ±2.83%  ±3.77%  ±4.92%\ncrypto/node-digest.js n=100000 type='buffer' method='sha256' length=1000        ***     56.42 %       ±2.75%  ±3.66%  ±4.79%\ncrypto/node-digest.js n=100000 type='string' method='md5' length=1000           ***     15.45 %       ±2.45%  ±3.28%  ±4.32%\ncrypto/node-digest.js n=100000 type='string' method='sha1' length=1000          ***     32.16 %       ±4.69%  ±6.27%  ±8.22%\ncrypto/node-digest.js n=100000 type='string' method='sha256' length=1000        ***     34.65 %       ±2.42%  ±3.23%  ±4.23%\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                         confidence improvement accuracy (*)    (**)   (***)\ncrypto/node-digest.js n=1000 type='buffer' method='md5' length=1000             ***     24.64 %       ±6.24%  ±8.33% ±10.92%\ncrypto/node-digest.js n=1000 type='buffer' method='md5' length=100000                    1.82 %       ±1.87%  ±2.50%  ±3.26%\ncrypto/node-digest.js n=1000 type='buffer' method='sha1' length=1000            ***     46.77 %       ±4.13%  ±5.49%  ±7.15%\ncrypto/node-digest.js n=1000 type='buffer' method='sha1' length=100000                   1.99 %       ±3.24%  ±4.32%  ±5.65%\ncrypto/node-digest.js n=1000 type='buffer' method='sha256' length=1000          ***     46.38 %       ±3.38%  ±4.52%  ±5.93%\ncrypto/node-digest.js n=1000 type='buffer' method='sha256' length=100000                 1.81 %       ±2.71%  ±3.61%  ±4.70%\ncrypto/node-digest.js n=1000 type='string' method='md5' length=1000             ***     25.20 %       ±7.60% ±10.13% ±13.22%\ncrypto/node-digest.js n=1000 type='string' method='md5' length=100000             *      3.22 %       ±2.45%  ±3.28%  ±4.33%\ncrypto/node-digest.js n=1000 type='string' method='sha1' length=1000            ***     41.89 %       ±4.25%  ±5.67%  ±7.41%\ncrypto/node-digest.js n=1000 type='string' method='sha1' length=100000                   0.99 %       ±4.32%  ±5.77%  ±7.57%\ncrypto/node-digest.js n=1000 type='string' method='sha256' length=1000          ***     42.50 %       ±4.12%  ±5.50%  ±7.20%\ncrypto/node-digest.js n=1000 type='string' method='sha256' length=100000                -0.56 %       ±3.69%  ±4.96%  ±6.56%\ncrypto/node-digest.js n=100000 type='buffer' method='md5' length=1000           ***     17.91 %       ±4.82%  ±6.42%  ±8.35%\ncrypto/node-digest.js n=100000 type='buffer' method='sha1' length=1000          ***     47.75 %       ±2.83%  ±3.77%  ±4.92%\ncrypto/node-digest.js n=100000 type='buffer' method='sha256' length=1000        ***     56.42 %       ±2.75%  ±3.66%  ±4.79%\ncrypto/node-digest.js n=100000 type='string' method='md5' length=1000           ***     15.45 %       ±2.45%  ±3.28%  ±4.32%\ncrypto/node-digest.js n=100000 type='string' method='sha1' length=1000          ***     32.16 %       ±4.69%  ±6.27%  ±8.22%\ncrypto/node-digest.js n=100000 type='string' method='sha256' length=1000        ***     34.65 %       ±2.42%  ±3.23%  ±4.23%\n</code></pre></div>\n</details>\n<details>\n<summary>Benchmark results from Ubuntu + Intel(R) Xeon(R) Platinum 8280 CPU @ 2.70GHz</summary>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                         confidence improvement accuracy (*)   (**)  (***)\ncrypto/node-digest.js n=1000 type='buffer' method='md5' length=1000             ***     50.52 %       ±3.07% ±4.09% ±5.34%\ncrypto/node-digest.js n=1000 type='buffer' method='md5' length=100000            **      1.31 %       ±0.79% ±1.05% ±1.37%\ncrypto/node-digest.js n=1000 type='buffer' method='sha1' length=1000            ***     58.90 %       ±4.88% ±6.54% ±8.62%\ncrypto/node-digest.js n=1000 type='buffer' method='sha1' length=100000          ***      3.13 %       ±1.21% ±1.62% ±2.11%\ncrypto/node-digest.js n=1000 type='buffer' method='sha256' length=1000          ***     43.08 %       ±3.01% ±4.02% ±5.25%\ncrypto/node-digest.js n=1000 type='buffer' method='sha256' length=100000        ***      1.31 %       ±0.70% ±0.93% ±1.21%\ncrypto/node-digest.js n=1000 type='string' method='md5' length=1000             ***     45.39 %       ±3.28% ±4.40% ±5.78%\ncrypto/node-digest.js n=1000 type='string' method='md5' length=100000            **      1.17 %       ±0.77% ±1.02% ±1.33%\ncrypto/node-digest.js n=1000 type='string' method='sha1' length=1000            ***     52.71 %       ±2.93% ±3.93% ±5.18%\ncrypto/node-digest.js n=1000 type='string' method='sha1' length=100000           **      1.81 %       ±1.06% ±1.42% ±1.85%\ncrypto/node-digest.js n=1000 type='string' method='sha256' length=1000          ***     41.00 %       ±2.62% ±3.50% ±4.58%\ncrypto/node-digest.js n=1000 type='string' method='sha256' length=100000         **      0.90 %       ±0.54% ±0.72% ±0.93%\ncrypto/node-digest.js n=100000 type='buffer' method='md5' length=1000           ***     55.57 %       ±1.94% ±2.60% ±3.42%\ncrypto/node-digest.js n=100000 type='buffer' method='sha1' length=1000          ***     66.81 %       ±1.57% ±2.09% ±2.72%\ncrypto/node-digest.js n=100000 type='buffer' method='sha256' length=1000        ***     39.65 %       ±1.16% ±1.55% ±2.03%\ncrypto/node-digest.js n=100000 type='string' method='md5' length=1000           ***     38.61 %       ±1.55% ±2.07% ±2.71%\ncrypto/node-digest.js n=100000 type='string' method='sha1' length=1000          ***     43.45 %       ±1.20% ±1.59% ±2.07%\ncrypto/node-digest.js n=100000 type='string' method='sha256' length=1000        ***     31.46 %       ±1.33% ±1.77% ±2.30%\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                         confidence improvement accuracy (*)   (**)  (***)\ncrypto/node-digest.js n=1000 type='buffer' method='md5' length=1000             ***     50.52 %       ±3.07% ±4.09% ±5.34%\ncrypto/node-digest.js n=1000 type='buffer' method='md5' length=100000            **      1.31 %       ±0.79% ±1.05% ±1.37%\ncrypto/node-digest.js n=1000 type='buffer' method='sha1' length=1000            ***     58.90 %       ±4.88% ±6.54% ±8.62%\ncrypto/node-digest.js n=1000 type='buffer' method='sha1' length=100000          ***      3.13 %       ±1.21% ±1.62% ±2.11%\ncrypto/node-digest.js n=1000 type='buffer' method='sha256' length=1000          ***     43.08 %       ±3.01% ±4.02% ±5.25%\ncrypto/node-digest.js n=1000 type='buffer' method='sha256' length=100000        ***      1.31 %       ±0.70% ±0.93% ±1.21%\ncrypto/node-digest.js n=1000 type='string' method='md5' length=1000             ***     45.39 %       ±3.28% ±4.40% ±5.78%\ncrypto/node-digest.js n=1000 type='string' method='md5' length=100000            **      1.17 %       ±0.77% ±1.02% ±1.33%\ncrypto/node-digest.js n=1000 type='string' method='sha1' length=1000            ***     52.71 %       ±2.93% ±3.93% ±5.18%\ncrypto/node-digest.js n=1000 type='string' method='sha1' length=100000           **      1.81 %       ±1.06% ±1.42% ±1.85%\ncrypto/node-digest.js n=1000 type='string' method='sha256' length=1000          ***     41.00 %       ±2.62% ±3.50% ±4.58%\ncrypto/node-digest.js n=1000 type='string' method='sha256' length=100000         **      0.90 %       ±0.54% ±0.72% ±0.93%\ncrypto/node-digest.js n=100000 type='buffer' method='md5' length=1000           ***     55.57 %       ±1.94% ±2.60% ±3.42%\ncrypto/node-digest.js n=100000 type='buffer' method='sha1' length=1000          ***     66.81 %       ±1.57% ±2.09% ±2.72%\ncrypto/node-digest.js n=100000 type='buffer' method='sha256' length=1000        ***     39.65 %       ±1.16% ±1.55% ±2.03%\ncrypto/node-digest.js n=100000 type='string' method='md5' length=1000           ***     38.61 %       ±1.55% ±2.07% ±2.71%\ncrypto/node-digest.js n=100000 type='string' method='sha1' length=1000          ***     43.45 %       ±1.20% ±1.59% ±2.07%\ncrypto/node-digest.js n=100000 type='string' method='sha256' length=1000        ***     31.46 %       ±1.33% ±1.77% ±2.30%\n</code></pre></div>\n</details>",
            "url": "https://github.com/nodejs/node/pull/51044",
            "title": "crypto: implement crypto.hash()",
            "date_modified": "2024-03-13T10:40:14.000Z",
            "date_published": "2023-12-04T14:43:43.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18269663?u=0c9e9c1f0a4d40e2b3f46d18f0e6721f9125411a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is an automated update of root-certificates to 3.95.</p>\n<hr>\n<h1 dir=\"auto\">notable change</h1>\n<p dir=\"auto\">crypto: update root certificates to NSS 3.95</p>\n<p dir=\"auto\">This is the certdata.txt[0] from NSS 3.95, released on 2023-11-16.</p>\n<p dir=\"auto\">This is the version of NSS that will ship in Firefox 121 on<br>\n2023-12-19.</p>\n<p dir=\"auto\">Certificates added:</p>\n<ul dir=\"auto\">\n<li>TrustAsia Global Root CA G3</li>\n<li>TrustAsia Global Root CA G4</li>\n<li>CommScope Public Trust ECC Root-01</li>\n<li>CommScope Public Trust ECC Root-02</li>\n<li>CommScope Public Trust RSA Root-01</li>\n<li>CommScope Public Trust RSA Root-02</li>\n</ul>\n<p dir=\"auto\">Certificates removed:</p>\n<ul dir=\"auto\">\n<li>Autoridad de Certificacion Firmaprofesional CIF A62634068</li>\n</ul>\n<p dir=\"auto\">[0] <a href=\"https://hg.mozilla.org/projects/nss/raw-file/NSS_3_95_RTM/lib/ckfw/builtins/certdata.txt\" rel=\"nofollow\">https://hg.mozilla.org/projects/nss/raw-file/NSS_3_95_RTM/lib/ckfw/builtins/certdata.txt</a></p>",
            "url": "https://github.com/nodejs/node/pull/50805",
            "title": "crypto: update root-certificates to 3.95",
            "date_modified": "2023-12-20T20:20:27.000Z",
            "date_published": "2023-11-19T00:25:44.000Z",
            "author": {
                "name": "nodejs-github-bot",
                "url": "https://github.com/nodejs-github-bot"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/26234614?u=5edcb211e86232b06e6d6133439f9490f9f5d689&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">We're porting <code class=\"notranslate\">path.resolve</code> to C++ to be used on the permission model and other places.</p>\n<p dir=\"auto\"><strong>Summary</strong>: The permission Model now accepts relative paths through the CLI. Example: <code class=\"notranslate\">--experimental-permission --allow-fs-read=./index.js</code></p>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1606023653\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/security-wg/issues/898\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/security-wg/issues/898/hovercard\" href=\"https://github.com/nodejs/security-wg/issues/898\">nodejs/security-wg#898</a></p>",
            "url": "https://github.com/nodejs/node/pull/50758",
            "title": "lib,src,permission: port path.resolve to C++",
            "date_modified": "2024-01-11T05:59:34.000Z",
            "date_published": "2023-11-16T17:12:16.000Z",
            "author": {
                "name": "RafaelGSS",
                "url": "https://github.com/RafaelGSS"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36735501?u=8e93f809522831771aab98cbb2a67c5e67e673d5&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">The deprecation code has been created in  6.12.0, I think we can move to runtime deprecation in 22<br>\nMoving the following APIs from documentation-only deprecation to runtime deprecation:</p>\n<ul dir=\"auto\">\n<li>util._extend</li>\n<li>util.isArray</li>\n<li>util.isBoolean</li>\n<li>util.isBuffer</li>\n<li>util.isDate</li>\n<li>util.isError</li>\n<li>util.isFunction</li>\n<li>util.isNull</li>\n<li>util.isNullOrUndefined</li>\n<li>util.isNumber</li>\n<li>util.isObject</li>\n<li>util.isPrimitive</li>\n<li>util.isRegExp</li>\n<li>util.isString</li>\n<li>util.isSymbol</li>\n<li>util.isUndefined</li>\n<li>util.log</li>\n</ul>",
            "url": "https://github.com/nodejs/node/pull/50488",
            "title": "util: move deprecated utils to runtime deprecation",
            "date_modified": "2023-11-27T18:38:27.000Z",
            "date_published": "2023-10-31T11:04:58.000Z",
            "author": {
                "name": "marco-ippolito",
                "url": "https://github.com/marco-ippolito"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><ul dir=\"auto\">\n<li>Add support for --build-snapshot-config which allows passing snapshot configurations via a JSON configuration file.</li>\n<li>Add support for node::SnapshotConfig in the embedder API</li>\n</ul>\n<p dir=\"auto\">The initial configurable options are:</p>\n<ul dir=\"auto\">\n<li>\"builder\" (SnapshotConfig::builder_script_path): path to the builder script.</li>\n<li>\"withoutCodeCache\" (SnapshotFlags::kWithoutCodeCache): disable code cache generation.</li>\n</ul>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1189805696\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/42566\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/42566/hovercard\" href=\"https://github.com/nodejs/node/issues/42566\">#42566</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/50453",
            "title": "src: support configurable snapshot",
            "date_modified": "2023-12-15T17:59:50.000Z",
            "date_published": "2023-10-28T20:10:36.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        }
    ]
}