{
    "version": "https://jsonfeed.org/version/1",
    "title": "Node.js notable changes",
    "home_page_url": "https://azu.github.io/github-search-rss/nodejs-notable.json",
    "feed_url": "https://azu.github.io/github-search-rss/nodejs-notable.json",
    "description": "Node.js notable changes on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/28685065?u=58d1d30be6848fbcf5b847c95603a824703056e5&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #54466.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2476523316\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/54466\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/54466/hovercard\" href=\"https://github.com/nodejs/node/issues/54466\">#54466</a><br>\n<span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #54601.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2490638906\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/54601\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/54601/hovercard\" href=\"https://github.com/nodejs/node/issues/54601\">#54601</a></p>",
            "url": "https://github.com/nodejs/node/pull/54826",
            "title": "lib: propagate aborted state to dependent signals before firing events",
            "date_modified": "2024-09-21T16:07:58.000Z",
            "date_published": "2024-09-07T09:27:25.000Z",
            "author": {
                "name": "jazelly",
                "url": "https://github.com/jazelly"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/899444?u=9129efce93ac27bfb0218eb5e0783d3ddfe32d73&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This commit exposes the <code class=\"notranslate\">X509_V_FLAG_PARTIAL_CHAIN</code> OpenSSL flag to users. This is behavior that has been requested repeatedly in the Github issues, and allows aligning behavior with other TLS libraries and commonly used applications (e.g. <code class=\"notranslate\">curl</code>).</p>\n<p dir=\"auto\">As a drive-by, simplify the <code class=\"notranslate\">SecureContext</code> source by deduplicating call sites at which a new custom certificate store was created for the <code class=\"notranslate\">secureContext</code> in question.</p>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #36453.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"760310856\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/36453\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/36453/hovercard\" href=\"https://github.com/nodejs/node/issues/36453\">#36453</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/54790",
            "title": "tls: add `allowPartialTrustChain` flag",
            "date_modified": "2024-09-09T15:25:10.000Z",
            "date_published": "2024-09-05T14:51:05.000Z",
            "author": {
                "name": "addaleax",
                "url": "https://github.com/addaleax"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/38299977?u=88aefc5a0e292a8e7147d1941c70fcc8a4153da6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #47573.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1669506829\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47573\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47573/hovercard\" href=\"https://github.com/nodejs/node/issues/47573\">#47573</a></p>\n<h2 dir=\"auto\">Notable Change</h2>\n<p dir=\"auto\">The <code class=\"notranslate\">import()</code> function can now receive <code class=\"notranslate\">blob:</code> protocol URLs as an input. These blobs must be one of the following types:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">text/javascript</code> for ES modules</li>\n<li><code class=\"notranslate\">application/json</code> for JSON</li>\n<li><code class=\"notranslate\">application/wasm</code> for Wasm</li>\n</ul>\n<p dir=\"auto\">Blob URLs are registered within the current thread. Loaders will not be able to handle resolve Blob's from the main thread.</p>",
            "url": "https://github.com/nodejs/node/pull/54647",
            "title": "module: support `import()`-ing `blob:` urls",
            "date_modified": "2024-09-06T21:27:49.000Z",
            "date_published": "2024-08-29T21:31:35.000Z",
            "author": {
                "name": "RedYetiDev",
                "url": "https://github.com/RedYetiDev"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/38299977?u=88aefc5a0e292a8e7147d1941c70fcc8a4153da6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This PR adds the functionality to exclude test files by glob patterns.</p>\n<p dir=\"auto\">It is meant for the use case when a user may have hundreds of test files and may only want to run a few (via glob).</p>\n<p dir=\"auto\">Added test results:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"▶ --test-runner-include\n  ✔ No globs (86.421831ms)\n  ✔ *.test.js (82.534169ms)\n  ✔ nonexistent.js (44.967071ms)\n▶ --test-runner-include (215.595732ms)\n▶ --test-runner-exclude\n  ✔ No globs (86.749583ms)\n  ✔ o*.test.js, i*.test.js (87.369228ms)\n  ✔ ** (48.384698ms)\n▶ --test-runner-exclude (223.456528ms)\nℹ tests 8\nℹ suites 0\nℹ pass 8\nℹ fail 0\nℹ cancelled 0\nℹ skipped 0\nℹ todo 0\nℹ duration_ms 442.787698\"><pre class=\"notranslate\"><code class=\"notranslate\">▶ --test-runner-include\n  ✔ No globs (86.421831ms)\n  ✔ *.test.js (82.534169ms)\n  ✔ nonexistent.js (44.967071ms)\n▶ --test-runner-include (215.595732ms)\n▶ --test-runner-exclude\n  ✔ No globs (86.749583ms)\n  ✔ o*.test.js, i*.test.js (87.369228ms)\n  ✔ ** (48.384698ms)\n▶ --test-runner-exclude (223.456528ms)\nℹ tests 8\nℹ suites 0\nℹ pass 8\nℹ fail 0\nℹ cancelled 0\nℹ skipped 0\nℹ todo 0\nℹ duration_ms 442.787698\n</code></pre></div>",
            "url": "https://github.com/nodejs/node/pull/54600",
            "title": "test_runner: support glob inclusions and exclusions",
            "date_modified": "2024-09-04T14:43:33.000Z",
            "date_published": "2024-08-28T00:11:16.000Z",
            "author": {
                "name": "RedYetiDev",
                "url": "https://github.com/RedYetiDev"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Text for releasers:</p>\n<p dir=\"auto\">This adds a new API <code class=\"notranslate\">module.enableCompileCache()</code> that can be used to enable on-disk code caching of all modules loaded after this API is called. Previously this could only be enabled by the <code class=\"notranslate\">NODE_COMPILE_CACHE</code> environment variable, so it could only set by end-users. This API allows tooling and library authors to enable caching of their own code. This is a built-in alternative to the <a href=\"https://www.npmjs.com/package/v8-compile-cache\" rel=\"nofollow\">v8-compile-cache</a>/<a href=\"https://www.npmjs.com/package/v8-compile-cache-lib\" rel=\"nofollow\">v8-compile-cache-lib </a> packages, but have <a href=\"https://github.com/nodejs/node/issues/47472#issuecomment-1970331362\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47472/hovercard\">better performance</a> and supports ESM.</p>\n<p dir=\"auto\">In addition this adds <code class=\"notranslate\">module.getCompileCacheDir()</code> to query the status of the compile cache, and a <code class=\"notranslate\">NODE_DISABLE_COMPILE_CACHE</code> environment variable to disable the code cache. This serves as an escape hatch for end users to avoid unexpected/undesired effects of the compile cache (e.g. less precise test coverage).</p>\n<p dir=\"auto\">When the module.enableCompileCache() method is invoked without a specified directory, Node.js will use the value of the <code class=\"notranslate\">NODE_COMPILE_CACHE</code> environment variable if it's set, or defaults to <code class=\"notranslate\">path.join(os.tmpdir(), 'node-compile-cache')</code> otherwise. Therefore <strong>it's recommended for tools to call this method without a directory argument to allow overrides</strong>.</p>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #53639.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2381885630\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/53639\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/53639/hovercard\" href=\"https://github.com/nodejs/node/issues/53639\">#53639</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/54501",
            "title": "src: add JS APIs for compile cache and NODE_DISABLE_COMPILE_CACHE",
            "date_modified": "2024-09-22T07:02:07.000Z",
            "date_published": "2024-08-22T16:45:56.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/38299977?u=88aefc5a0e292a8e7147d1941c70fcc8a4153da6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #48739.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1799799313\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/48739\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/48739/hovercard\" href=\"https://github.com/nodejs/node/issues/48739\">#48739</a></p>\n<p dir=\"auto\">This PR adds support for coverage thresholds.</p>\n<p dir=\"auto\">The following new CLI flags are added:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">--test-coverage-branches</code></li>\n<li><code class=\"notranslate\">--test-coverage-functions</code></li>\n<li><code class=\"notranslate\">--test-coverage-lines</code></li>\n</ul>\n<hr>\n<h2 dir=\"auto\">Notable Change</h2>\n<p dir=\"auto\">Node.js now supports requiring code coverage to meet a specific threshold before the process exits successfully. To use this feature, you need to enable the <code class=\"notranslate\">--experimental-test-coverage</code> flag.</p>\n<p dir=\"auto\">You can set thresholds for the following types of coverage:</p>\n<ul dir=\"auto\">\n<li><strong>Branch coverage</strong>: Use <code class=\"notranslate\">--test-coverage-branches=&lt;threshold&gt;</code></li>\n<li><strong>Function coverage</strong>: Use <code class=\"notranslate\">--test-coverage-functions=&lt;threshold&gt;</code></li>\n<li><strong>Line coverage</strong>: Use <code class=\"notranslate\">--test-coverage-lines=&lt;threshold&gt;</code></li>\n</ul>\n<p dir=\"auto\"><code class=\"notranslate\">&lt;threshold&gt;</code> should be an integer between 0 and 100. If an invalid value is provided, a <code class=\"notranslate\">TypeError</code> will be thrown.</p>\n<p dir=\"auto\">If the code coverage fails to meet the specified thresholds for any category, the process will exit with code <code class=\"notranslate\">1</code>.</p>\n<p dir=\"auto\">For instance, to enforce a minimum of 80% line coverage and 60% branch coverage, you can run:</p>\n<div class=\"highlight highlight-text-shell-session notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"$ node --experimental-test-coverage --test-coverage-lines=80 --test-coverage-branches=60 example.js\n\n# start of coverage report\n# ...\n# ...\n# ...\n# end of coverage report\n# Error: 53.45% line coverage does not meet the threshold of 80%.\n# Error: 40.30% branch coverage does not meet the threshold of 60%.\"><pre class=\"notranslate\">$ <span class=\"pl-s1\">node --experimental-test-coverage --test-coverage-lines=80 --test-coverage-branches=60 example.js</span>\n\n# <span class=\"pl-s1\">start of coverage report</span>\n# <span class=\"pl-s1\">...</span>\n# <span class=\"pl-s1\">...</span>\n# <span class=\"pl-s1\">...</span>\n# <span class=\"pl-s1\">end of coverage report</span>\n# <span class=\"pl-s1\">Error: 53.45% line coverage does not meet the threshold of 80%.</span>\n# <span class=\"pl-s1\">Error: 40.30% branch coverage does not meet the threshold of 60%.</span></pre></div>",
            "url": "https://github.com/nodejs/node/pull/54429",
            "title": "test_runner: add support for coverage thresholds",
            "date_modified": "2024-09-21T12:36:05.000Z",
            "date_published": "2024-08-17T22:18:01.000Z",
            "author": {
                "name": "RedYetiDev",
                "url": "https://github.com/RedYetiDev"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/38299977?u=88aefc5a0e292a8e7147d1941c70fcc8a4153da6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This PR introduces the direct exposure of <code class=\"notranslate\">hasColors</code> and <code class=\"notranslate\">getColorDepth</code> under the <code class=\"notranslate\">tty</code> module. In addition, it documentation-deprecates their previous locations.</p>\n<p dir=\"auto\">This work builds on <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1009473864\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/40240\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/40240/hovercard\" href=\"https://github.com/nodejs/node/pull/40240\">#40240</a>, an older draft that has been inactive for several years. Given the interest in that original PR, I decided to complete it and submit this one.</p>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #40236.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1008657157\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/40236\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/40236/hovercard\" href=\"https://github.com/nodejs/node/issues/40236\">#40236</a>.</p>",
            "url": "https://github.com/nodejs/node/pull/54415",
            "title": "tty: expose `hasColors` and `getColorDepth`",
            "date_modified": "2024-09-04T00:13:21.000Z",
            "date_published": "2024-08-16T21:33:44.000Z",
            "author": {
                "name": "RedYetiDev",
                "url": "https://github.com/RedYetiDev"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">vm: introduce vanilla contexts via vm.constants.DONT_CONTEXTIFY</p>\n<p dir=\"auto\">Text for releasers:</p>\n<h4 dir=\"auto\">new option for vm.createContext() to create a context with a freezable globalThis</h4>\n<p dir=\"auto\">This implements a flavor of <code class=\"notranslate\">vm.createContext()</code> and friends that creates a context without contextifying its global object when vm.constants.DONT_CONTEXTIFY is used.<br>\nThis is suitable when users want to freeze the context (impossible when the global is contextified i.e. has interceptors installed) or speed up the global access if they don't need the interceptor behavior.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const vm = require('node:vm');\n\n{\n  const oldContext = vm.createContext();\n  console.log(vm.runInContext('globalThis', context) === oldContext);  // false\n  console.log(oldContext.Array);  // undefined\n\n  // In contextified contexts, freezing doesn't work\n  try {\n    vm.runInContext('Object.freeze(globalThis);', oldContext);\n  } catch {\n    // TypeError: Cannot freeze\n  }\n  console.log(vm.runInContext('globalThis.foo = 1; foo;', oldContext));  // 1\n}\n\n{\n  const newContext = vm.createContext(vm.constants.DONT_CONTEXTIFY);\n  console.log(vm.runInContext('globalThis', newContext) === newContext);  // true\n  console.log(newContext.Array);  // [Function: Array]\n\n  // In contexts without its global contextifyed, freezing works and prevents scripts from\n  // accidentally leaking globals.\n  vm.runInContext('Object.freeze(globalThis);', newContext);\n  try {\n    vm.runInContext('globalThis.foo = 1; foo;', newContext);\n  } catch(e) {\n    console.log(e); // Uncaught ReferenceError: foo is not defined\n  }\n}\n\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">vm</span> <span class=\"pl-c1\">=</span> <span class=\"pl-en\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'node:vm'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">oldContext</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">vm</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createContext</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">vm</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">runInContext</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'globalThis'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">oldContext</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-c\">// false</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">oldContext</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Array</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-c\">// undefined</span>\n\n  <span class=\"pl-c\">// In contextified contexts, freezing doesn't work</span>\n  <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">vm</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">runInContext</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Object.freeze(globalThis);'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">oldContext</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// TypeError: Cannot freeze</span>\n  <span class=\"pl-kos\">}</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">vm</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">runInContext</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'globalThis.foo = 1; foo;'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">oldContext</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-c\">// 1</span>\n<span class=\"pl-kos\">}</span>\n\n<span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">newContext</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">vm</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createContext</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">vm</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">constants</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">DONT_CONTEXTIFY</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">vm</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">runInContext</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'globalThis'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">newContext</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s1\">newContext</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-c\">// true</span>\n  <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">newContext</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">Array</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>  <span class=\"pl-c\">// [Function: Array]</span>\n\n  <span class=\"pl-c\">// In contexts without its global contextifyed, freezing works and prevents scripts from</span>\n  <span class=\"pl-c\">// accidentally leaking globals.</span>\n  <span class=\"pl-s1\">vm</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">runInContext</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'Object.freeze(globalThis);'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">newContext</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">try</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">vm</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">runInContext</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'globalThis.foo = 1; foo;'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">newContext</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span> <span class=\"pl-k\">catch</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">e</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span> <span class=\"pl-c\">// Uncaught ReferenceError: foo is not defined</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n",
            "url": "https://github.com/nodejs/node/pull/54394",
            "title": "vm: introduce vanilla contexts via vm.constants.DONT_CONTEXTIFY",
            "date_modified": "2024-08-30T19:25:05.000Z",
            "date_published": "2024-08-15T14:47:19.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h4 dir=\"auto\">src: create handle scope in FastInternalModuleStat</h4>\n<p dir=\"auto\">It needs a handle scope for the context handle. Since the<br>\nFastApiCallbackOptions struct doesn't have isolate on it<br>\nin V8 12.4 on Node.js 22, use Isolate::TryGetCurrent() to<br>\nget to the isolate needed for the handle scope creation and<br>\nfallback to the slow callback if no isolate is entered.</p>\n<h4 dir=\"auto\">Revert \"v8: enable maglev on supported architectures\"</h4>\n<p dir=\"auto\">This reverts commit <a class=\"commit-link\" data-hovercard-type=\"commit\" data-hovercard-url=\"https://github.com/nodejs/node/commit/1a5acd0638579e687dde128cc6d4effe3ab070d1/hovercard\" href=\"https://github.com/nodejs/node/commit/1a5acd0638579e687dde128cc6d4effe3ab070d1\"><tt>1a5acd0</tt></a>.</p>\n<p dir=\"auto\">Reason to revert: we have seen several crashes/unexpected JS behaviors with maglev on v22 (which ships V8 v12.4). The bugs lie in the codegen so it would be difficult for users to work around them or even figure out where the bugs are coming from. Some bugs are fixed in the upstream while some others probably remain. As v22 will get stuck with V8 v12.4 as LTS, it will be increasingly difficult to backport patches for them even if the bugs are fixed. So disable it by default on v22 to reduce the churn and troubles for users.</p>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2275466356\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/52797\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/52797/hovercard\" href=\"https://github.com/nodejs/node/issues/52797\">#52797</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/54384",
            "title": "[v22.x] Revert \"v8: enable maglev on supported architectures\"",
            "date_modified": "2024-09-22T07:18:27.000Z",
            "date_published": "2024-08-14T20:05:10.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3065230?u=0e938c0e3fcdc4998886799c5bc247ea8d17714a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"buffers/buffer-from.js n=800000 len=100 source='array'                      ***     -2.41 %       ±0.75% ±0.99% ±1.29%\nbuffers/buffer-from.js n=800000 len=100 source='arraybuffer-middle'                  0.17 %       ±1.63% ±2.18% ±2.83%\nbuffers/buffer-from.js n=800000 len=100 source='arraybuffer'                        -0.98 %       ±1.29% ±1.72% ±2.24%\nbuffers/buffer-from.js n=800000 len=100 source='buffer'                     ***     -1.37 %       ±0.72% ±0.95% ±1.24%\nbuffers/buffer-from.js n=800000 len=100 source='object'                             -0.60 %       ±1.23% ±1.64% ±2.13%\nbuffers/buffer-from.js n=800000 len=100 source='string-base64'              ***      2.41 %       ±0.50% ±0.66% ±0.86%\nbuffers/buffer-from.js n=800000 len=100 source='string-utf8'                ***     49.55 %       ±0.67% ±0.89% ±1.16%\nbuffers/buffer-from.js n=800000 len=100 source='string'                     ***     45.78 %       ±0.75% ±1.00% ±1.30%\nbuffers/buffer-from.js n=800000 len=100 source='uint16array'                        -0.75 %       ±0.75% ±1.00% ±1.30%\nbuffers/buffer-from.js n=800000 len=100 source='uint8array'                 ***     -3.39 %       ±0.77% ±1.03% ±1.36%\nbuffers/buffer-from.js n=800000 len=2048 source='array'                     ***     -0.25 %       ±0.08% ±0.11% ±0.14%\nbuffers/buffer-from.js n=800000 len=2048 source='arraybuffer-middle'                 0.59 %       ±1.76% ±2.34% ±3.05%\nbuffers/buffer-from.js n=800000 len=2048 source='arraybuffer'                        0.51 %       ±1.62% ±2.16% ±2.81%\nbuffers/buffer-from.js n=800000 len=2048 source='buffer'                      *     -0.81 %       ±0.71% ±0.94% ±1.23%\nbuffers/buffer-from.js n=800000 len=2048 source='object'                            -0.22 %       ±0.90% ±1.20% ±1.56%\nbuffers/buffer-from.js n=800000 len=2048 source='string-base64'             ***     -1.20 %       ±0.34% ±0.45% ±0.59%\nbuffers/buffer-from.js n=800000 len=2048 source='string-utf8'               ***     -1.18 %       ±0.45% ±0.59% ±0.77%\nbuffers/buffer-from.js n=800000 len=2048 source='string'                    ***     -2.66 %       ±0.51% ±0.68% ±0.89%\nbuffers/buffer-from.js n=800000 len=2048 source='uint16array'               ***     -1.01 %       ±0.52% ±0.69% ±0.91%\nbuffers/buffer-from.js n=800000 len=2048 source='uint8array'                 **     -1.23 %       ±0.83% ±1.10% ±1.43%\"><pre class=\"notranslate\"><code class=\"notranslate\">buffers/buffer-from.js n=800000 len=100 source='array'                      ***     -2.41 %       ±0.75% ±0.99% ±1.29%\nbuffers/buffer-from.js n=800000 len=100 source='arraybuffer-middle'                  0.17 %       ±1.63% ±2.18% ±2.83%\nbuffers/buffer-from.js n=800000 len=100 source='arraybuffer'                        -0.98 %       ±1.29% ±1.72% ±2.24%\nbuffers/buffer-from.js n=800000 len=100 source='buffer'                     ***     -1.37 %       ±0.72% ±0.95% ±1.24%\nbuffers/buffer-from.js n=800000 len=100 source='object'                             -0.60 %       ±1.23% ±1.64% ±2.13%\nbuffers/buffer-from.js n=800000 len=100 source='string-base64'              ***      2.41 %       ±0.50% ±0.66% ±0.86%\nbuffers/buffer-from.js n=800000 len=100 source='string-utf8'                ***     49.55 %       ±0.67% ±0.89% ±1.16%\nbuffers/buffer-from.js n=800000 len=100 source='string'                     ***     45.78 %       ±0.75% ±1.00% ±1.30%\nbuffers/buffer-from.js n=800000 len=100 source='uint16array'                        -0.75 %       ±0.75% ±1.00% ±1.30%\nbuffers/buffer-from.js n=800000 len=100 source='uint8array'                 ***     -3.39 %       ±0.77% ±1.03% ±1.36%\nbuffers/buffer-from.js n=800000 len=2048 source='array'                     ***     -0.25 %       ±0.08% ±0.11% ±0.14%\nbuffers/buffer-from.js n=800000 len=2048 source='arraybuffer-middle'                 0.59 %       ±1.76% ±2.34% ±3.05%\nbuffers/buffer-from.js n=800000 len=2048 source='arraybuffer'                        0.51 %       ±1.62% ±2.16% ±2.81%\nbuffers/buffer-from.js n=800000 len=2048 source='buffer'                      *     -0.81 %       ±0.71% ±0.94% ±1.23%\nbuffers/buffer-from.js n=800000 len=2048 source='object'                            -0.22 %       ±0.90% ±1.20% ±1.56%\nbuffers/buffer-from.js n=800000 len=2048 source='string-base64'             ***     -1.20 %       ±0.34% ±0.45% ±0.59%\nbuffers/buffer-from.js n=800000 len=2048 source='string-utf8'               ***     -1.18 %       ±0.45% ±0.59% ±0.77%\nbuffers/buffer-from.js n=800000 len=2048 source='string'                    ***     -2.66 %       ±0.51% ±0.68% ±0.89%\nbuffers/buffer-from.js n=800000 len=2048 source='uint16array'               ***     -1.01 %       ±0.52% ±0.69% ±0.91%\nbuffers/buffer-from.js n=800000 len=2048 source='uint8array'                 **     -1.23 %       ±0.83% ±1.10% ±1.43%\n</code></pre></div>",
            "url": "https://github.com/nodejs/node/pull/54324",
            "title": "buffer: optimize createFromString",
            "date_modified": "2024-08-14T13:34:10.000Z",
            "date_published": "2024-08-12T06:05:02.000Z",
            "author": {
                "name": "ronag",
                "url": "https://github.com/ronag"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3065230?u=0e938c0e3fcdc4998886799c5bc247ea8d17714a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"                                                                        confidence improvement accuracy (*)    (**)   (***)\nbuffers/buffer-write-string-short.js n=1000000 len=0 encoding='ascii'          ***     65.81 %       ±5.23%  ±7.49% ±10.96%\nbuffers/buffer-write-string-short.js n=1000000 len=0 encoding='latin1'         ***     58.19 %      ±20.88% ±29.89% ±43.73%\nbuffers/buffer-write-string-short.js n=1000000 len=0 encoding='utf8'           ***     61.74 %      ±13.09% ±18.14% ±25.14%\nbuffers/buffer-write-string-short.js n=1000000 len=1 encoding='ascii'          ***    136.24 %      ±11.25% ±15.57% ±21.57%\nbuffers/buffer-write-string-short.js n=1000000 len=1 encoding='latin1'         ***    135.68 %      ±34.53% ±49.25% ±71.59%\nbuffers/buffer-write-string-short.js n=1000000 len=1 encoding='utf8'           ***    131.19 %      ±13.69% ±19.05% ±26.59%\nbuffers/buffer-write-string-short.js n=1000000 len=16 encoding='ascii'         ***    105.31 %      ±22.74% ±32.63% ±47.91%\nbuffers/buffer-write-string-short.js n=1000000 len=16 encoding='latin1'        ***    146.98 %      ±15.12% ±20.88% ±28.83%\nbuffers/buffer-write-string-short.js n=1000000 len=16 encoding='utf8'          ***    231.98 %      ±39.44% ±56.50% ±82.72%\nbuffers/buffer-write-string-short.js n=1000000 len=32 encoding='ascii'         ***    119.88 %      ±17.20% ±23.74% ±32.73%\nbuffers/buffer-write-string-short.js n=1000000 len=32 encoding='latin1'        ***    127.78 %      ±14.96% ±21.09% ±30.09%\nbuffers/buffer-write-string-short.js n=1000000 len=32 encoding='utf8'          ***    286.10 %      ±36.29% ±51.94% ±75.93%\nbuffers/buffer-write-string-short.js n=1000000 len=8 encoding='ascii'          ***    126.35 %      ±20.58% ±28.48% ±39.41%\nbuffers/buffer-write-string-short.js n=1000000 len=8 encoding='latin1'         ***    155.13 %       ±8.24% ±11.43% ±15.90%\nbuffers/buffer-write-string-short.js n=1000000 len=8 encoding='utf8'           ***    200.61 %      ±33.84% ±48.37% ±70.55%\"><pre class=\"notranslate\">                                                                        confidence improvement accuracy (<span class=\"pl-k\">*</span>)    (<span class=\"pl-k\">**</span>)   (<span class=\"pl-k\">***</span>)\nbuffers/buffer-write-string-short.js n=1000000 len=0 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ascii<span class=\"pl-pds\">'</span></span>          <span class=\"pl-k\">***</span>     65.81 %       ±5.23%  ±7.49% ±10.96%\nbuffers/buffer-write-string-short.js n=1000000 len=0 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>latin1<span class=\"pl-pds\">'</span></span>         <span class=\"pl-k\">***</span>     58.19 %      ±20.88% ±29.89% ±43.73%\nbuffers/buffer-write-string-short.js n=1000000 len=0 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>utf8<span class=\"pl-pds\">'</span></span>           <span class=\"pl-k\">***</span>     61.74 %      ±13.09% ±18.14% ±25.14%\nbuffers/buffer-write-string-short.js n=1000000 len=1 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ascii<span class=\"pl-pds\">'</span></span>          <span class=\"pl-k\">***</span>    136.24 %      ±11.25% ±15.57% ±21.57%\nbuffers/buffer-write-string-short.js n=1000000 len=1 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>latin1<span class=\"pl-pds\">'</span></span>         <span class=\"pl-k\">***</span>    135.68 %      ±34.53% ±49.25% ±71.59%\nbuffers/buffer-write-string-short.js n=1000000 len=1 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>utf8<span class=\"pl-pds\">'</span></span>           <span class=\"pl-k\">***</span>    131.19 %      ±13.69% ±19.05% ±26.59%\nbuffers/buffer-write-string-short.js n=1000000 len=16 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ascii<span class=\"pl-pds\">'</span></span>         <span class=\"pl-k\">***</span>    105.31 %      ±22.74% ±32.63% ±47.91%\nbuffers/buffer-write-string-short.js n=1000000 len=16 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>latin1<span class=\"pl-pds\">'</span></span>        <span class=\"pl-k\">***</span>    146.98 %      ±15.12% ±20.88% ±28.83%\nbuffers/buffer-write-string-short.js n=1000000 len=16 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>utf8<span class=\"pl-pds\">'</span></span>          <span class=\"pl-k\">***</span>    231.98 %      ±39.44% ±56.50% ±82.72%\nbuffers/buffer-write-string-short.js n=1000000 len=32 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ascii<span class=\"pl-pds\">'</span></span>         <span class=\"pl-k\">***</span>    119.88 %      ±17.20% ±23.74% ±32.73%\nbuffers/buffer-write-string-short.js n=1000000 len=32 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>latin1<span class=\"pl-pds\">'</span></span>        <span class=\"pl-k\">***</span>    127.78 %      ±14.96% ±21.09% ±30.09%\nbuffers/buffer-write-string-short.js n=1000000 len=32 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>utf8<span class=\"pl-pds\">'</span></span>          <span class=\"pl-k\">***</span>    286.10 %      ±36.29% ±51.94% ±75.93%\nbuffers/buffer-write-string-short.js n=1000000 len=8 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>ascii<span class=\"pl-pds\">'</span></span>          <span class=\"pl-k\">***</span>    126.35 %      ±20.58% ±28.48% ±39.41%\nbuffers/buffer-write-string-short.js n=1000000 len=8 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>latin1<span class=\"pl-pds\">'</span></span>         <span class=\"pl-k\">***</span>    155.13 %       ±8.24% ±11.43% ±15.90%\nbuffers/buffer-write-string-short.js n=1000000 len=8 encoding=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>utf8<span class=\"pl-pds\">'</span></span>           <span class=\"pl-k\">***</span>    200.61 %      ±33.84% ±48.37% ±70.55%</pre></div>",
            "url": "https://github.com/nodejs/node/pull/54311",
            "title": "buffer: use fast API for writing one-byte strings",
            "date_modified": "2024-09-21T12:27:23.000Z",
            "date_published": "2024-08-10T19:59:03.000Z",
            "author": {
                "name": "ronag",
                "url": "https://github.com/ronag"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36735501?u=8e93f809522831771aab98cbb2a67c5e67e673d5&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">With the new flag <code class=\"notranslate\">--experimental-transform-types</code> it is possible to enable the transformation of TypeScript-only syntax into JavaScript code.<br>\nThis feature allows Node.js to support TypeScript syntax such as <code class=\"notranslate\">Enum</code> and <code class=\"notranslate\">namespace</code>.</p>",
            "url": "https://github.com/nodejs/node/pull/54283",
            "title": "module: add --experimental-transform-types flag",
            "date_modified": "2024-09-21T12:30:53.000Z",
            "date_published": "2024-08-09T10:34:51.000Z",
            "author": {
                "name": "marco-ippolito",
                "url": "https://github.com/marco-ippolito"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3065230?u=0e938c0e3fcdc4998886799c5bc247ea8d17714a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Apple M2 Pro</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"buffers/buffer-copy.js n=6000000 partial='false' bytes=0                    -0.53 %       ±6.78%  ±9.02% ±11.74%\nbuffers/buffer-copy.js n=6000000 partial='false' bytes=128          ***     30.37 %      ±10.39% ±13.88% ±18.19%\nbuffers/buffer-copy.js n=6000000 partial='false' bytes=32768                 2.73 %       ±3.96%  ±5.27%  ±6.86%\nbuffers/buffer-copy.js n=6000000 partial='false' bytes=8            ***     73.09 %      ±10.43% ±13.89% ±18.08%\nbuffers/buffer-copy.js n=6000000 partial='true' bytes=0                     -1.66 %       ±7.78% ±10.35% ±13.47%\nbuffers/buffer-copy.js n=6000000 partial='true' bytes=128           ***    327.50 %      ±23.05% ±31.00% ±41.01%\nbuffers/buffer-copy.js n=6000000 partial='true' bytes=32768           *      4.50 %       ±4.34%  ±5.78%  ±7.55%\nbuffers/buffer-copy.js n=6000000 partial='true' bytes=8             ***    311.90 %      ±33.99% ±45.75% ±60.62%\"><pre class=\"notranslate\">buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=0                    -0.53 %       ±6.78%  ±9.02% ±11.74%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=128          <span class=\"pl-k\">***</span>     30.37 %      ±10.39% ±13.88% ±18.19%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=32768                 2.73 %       ±3.96%  ±5.27%  ±6.86%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=8            <span class=\"pl-k\">***</span>     73.09 %      ±10.43% ±13.89% ±18.08%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=0                     -1.66 %       ±7.78% ±10.35% ±13.47%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=128           <span class=\"pl-k\">***</span>    327.50 %      ±23.05% ±31.00% ±41.01%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=32768           <span class=\"pl-k\">*</span>      4.50 %       ±4.34%  ±5.78%  ±7.55%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=8             <span class=\"pl-k\">***</span>    311.90 %      ±33.99% ±45.75% ±60.62%</pre></div>\n<p dir=\"auto\">Benchmark CI</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"10:33:07 buffers/buffer-copy.js n=6000000 partial='false' bytes=0                     0.56 %       ±1.11%  ±1.48%  ±1.95%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='false' bytes=128          ***     34.10 %       ±0.81%  ±1.08%  ±1.41%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='false' bytes=32768        ***     -1.80 %       ±0.84%  ±1.12%  ±1.47%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='false' bytes=8            ***     38.98 %       ±1.00%  ±1.34%  ±1.75%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='true' bytes=0                     -0.44 %       ±0.81%  ±1.08%  ±1.41%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='true' bytes=128           ***    256.54 %       ±1.31%  ±1.75%  ±2.31%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='true' bytes=32768         ***     35.39 %      ±11.48% ±15.46% ±20.49%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='true' bytes=8             ***    249.26 %       ±1.67%  ±2.24%  ±2.95%\"><pre class=\"notranslate\">10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=0                     0.56 %       ±1.11%  ±1.48%  ±1.95%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=128          <span class=\"pl-k\">***</span>     34.10 %       ±0.81%  ±1.08%  ±1.41%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=32768        <span class=\"pl-k\">***</span>     -1.80 %       ±0.84%  ±1.12%  ±1.47%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=8            <span class=\"pl-k\">***</span>     38.98 %       ±1.00%  ±1.34%  ±1.75%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=0                     -0.44 %       ±0.81%  ±1.08%  ±1.41%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=128           <span class=\"pl-k\">***</span>    256.54 %       ±1.31%  ±1.75%  ±2.31%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=32768         <span class=\"pl-k\">***</span>     35.39 %      ±11.48% ±15.46% ±20.49%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=8             <span class=\"pl-k\">***</span>    249.26 %       ±1.67%  ±2.24%  ±2.95%</pre></div>",
            "url": "https://github.com/nodejs/node/pull/54087",
            "title": "buffer: use native copy impl",
            "date_modified": "2024-09-21T11:58:02.000Z",
            "date_published": "2024-07-28T21:22:19.000Z",
            "author": {
                "name": "ronag",
                "url": "https://github.com/ronag"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/26234614?u=5edcb211e86232b06e6d6133439f9490f9f5d689&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This PR reverts (not cleanly) <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"753635434\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/36328\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/36328/hovercard\" href=\"https://github.com/nodejs/node/pull/36328\">#36328</a> and consequently, the <code class=\"notranslate\">--expiremental-network-import</code> is removed.</p>\n<p dir=\"auto\">In the past month, we have been assessing several experimental features. Recently, we have received reports regarding issues with the Network Import feature. Unfortunately, this feature is lacking a champion, and the documentation is not clear enough to define security expectations or boundaries. This makes it difficult to review the reports, as we are unsure of how to assess them.</p>\n<p dir=\"auto\">I want to emphasize that this doesn't mean Node.js does not support the exploration of http imports. I will quote <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/joyeecheung/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/joyeecheung\">@joyeecheung</a> as:</p>\n<blockquote>\n<p dir=\"auto\">\"The security model it's based on (no access to other builtins to run untrusted code) is just not going to work out in the current Node.js architecture without a huge amount of refactoring, vetting and gatekeeping that nobody is doing and nobody seems to be committed to do either<br>\nSupport for http import alone isn't really a problem, but that particular security model is just not realistic to implement or maintain on top of the existing code; The only way you could do it is to rewrite Node.js from scratch, then that's Deno<br>\nEven (redacted) leaks a stream that can be a file stream, it's going to be a whack-a-mole\"</p>\n</blockquote>\n<p dir=\"auto\">It's also worth it to mention that experimental features are being evaluated at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2391257347\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/next-10/issues/285\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/next-10/issues/285/hovercard\" href=\"https://github.com/nodejs/next-10/issues/285\">nodejs/next-10#285</a>.</p>\n<p dir=\"auto\">I'm pinging the initial authors of this PR for awareness: <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/bmeck/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bmeck\">@bmeck</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jasnell/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jasnell\">@jasnell</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ljharb/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ljharb\">@ljharb</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jsumners/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jsumners\">@jsumners</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JakobJingleheimer/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JakobJingleheimer\">@JakobJingleheimer</a></p>",
            "url": "https://github.com/nodejs/node/pull/53822",
            "title": "lib,src: drop --experimental-network-imports",
            "date_modified": "2024-09-21T11:51:33.000Z",
            "date_published": "2024-07-12T13:56:16.000Z",
            "author": {
                "name": "RafaelGSS",
                "url": "https://github.com/RafaelGSS"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1935246?u=440932d4aed022e31a2140e1825c0167b7a12357&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">node --run is stable now</p>",
            "url": "https://github.com/nodejs/node/pull/53763",
            "title": "src: mark `node --run` as stable",
            "date_modified": "2024-09-21T16:30:09.000Z",
            "date_published": "2024-07-08T18:28:39.000Z",
            "author": {
                "name": "anonrig",
                "url": "https://github.com/anonrig"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2512748?u=4d3b96c531c7d0ae8b192a48105b6f4554152a2a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2329745866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/53264\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/53264/hovercard\" href=\"https://github.com/nodejs/node/issues/53264\">#53264</a> has been open for over a month with no objections, so I am opening this PR with an initial <code class=\"notranslate\">node:sqlite</code> module. There is other functionality that could potentially be exposed in the future, but I believe this is enough for an experimental MVP.</p>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #53264.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2329745866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/53264\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/53264/hovercard\" href=\"https://github.com/nodejs/node/issues/53264\">#53264</a></p>\n<p dir=\"auto\"><strong>Summary</strong>: Node.js now includes a built-in sqlite module (<code class=\"notranslate\">require('node:sqlite')</code>) that becomes available when using the <code class=\"notranslate\">--experimental-sqlite</code> flag</p>\n<p dir=\"auto\">The following example shows the basic usage of the <code class=\"notranslate\">node:sqlite</code> module to open<br>\nan in-memory database, write data to the database, and then read the data back.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { DatabaseSync } from 'node:sqlite';\nconst database = new DatabaseSync(':memory:');\n\n// Execute SQL statements from strings.\ndatabase.exec(`\n  CREATE TABLE data(\n    key INTEGER PRIMARY KEY,\n    value TEXT\n  ) STRICT\n`);\n// Create a prepared statement to insert data into the database.\nconst insert = database.prepare('INSERT INTO data (key, value) VALUES (?, ?)');\n// Execute the prepared statement with bound values.\ninsert.run(1, 'hello');\ninsert.run(2, 'world');\n// Create a prepared statement to read data from the database.\nconst query = database.prepare('SELECT * FROM data ORDER BY key');\n// Execute the prepared statement and log the result set.\nconsole.log(query.all());\n// Prints: [ { key: 1, value: 'hello' }, { key: 2, value: 'world' } ]\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">DatabaseSync</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'node:sqlite'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">database</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">DatabaseSync</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">':memory:'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Execute SQL statements from strings.</span>\n<span class=\"pl-s1\">database</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exec</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`</span>\n<span class=\"pl-s\">  CREATE TABLE data(</span>\n<span class=\"pl-s\">    key INTEGER PRIMARY KEY,</span>\n<span class=\"pl-s\">    value TEXT</span>\n<span class=\"pl-s\">  ) STRICT</span>\n<span class=\"pl-s\">`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// Create a prepared statement to insert data into the database.</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">insert</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">database</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">prepare</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'INSERT INTO data (key, value) VALUES (?, ?)'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// Execute the prepared statement with bound values.</span>\n<span class=\"pl-s1\">insert</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">run</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'hello'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">insert</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">run</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'world'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// Create a prepared statement to read data from the database.</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">query</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">database</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">prepare</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'SELECT * FROM data ORDER BY key'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// Execute the prepared statement and log the result set.</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">query</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">all</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// Prints: [ { key: 1, value: 'hello' }, { key: 2, value: 'world' } ]</span></pre></div>",
            "url": "https://github.com/nodejs/node/pull/53752",
            "title": "lib,src,test,doc: add node:sqlite module",
            "date_modified": "2024-09-21T11:29:18.000Z",
            "date_published": "2024-07-07T16:28:20.000Z",
            "author": {
                "name": "cjihrig",
                "url": "https://github.com/cjihrig"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36735501?u=8e93f809522831771aab98cbb2a67c5e67e673d5&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><strong>Moderation Note:</strong> This PR has been posted on several social network platforms and thus attracts a lot of mostly off-topic comments.</p>\n<p dir=\"auto\">If you've used this feature and ran into issues or have specific feedback to provide - please open a new issue  <a href=\"https://github.com/nodejs/node/issues/new/choose\">https://github.com/nodejs/node/issues/new/choose</a></p>\n<hr>\n<p dir=\"auto\">It is possible to execute TypeScript files by setting the experimental flag <code class=\"notranslate\">--experimental-strip-types</code>.<br>\nNode.js will transpile TypeScript source code into JavaScript source code.<br>\nDuring the transpilation process, no type checking is performed, and types are discarded.</p>\n<h3 dir=\"auto\">Roadmap</h3>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2408734753\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/loaders/issues/217\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/loaders/issues/217/hovercard\" href=\"https://github.com/nodejs/loaders/issues/217\">nodejs/loaders#217</a></p>\n<h3 dir=\"auto\">Motivation</h3>\n<p dir=\"auto\">I believe enabling users to execute TypeScript files is crucial to move the ecosystem forward, it has been requested on all the surveys, and it simply cannot be ignored. We must acknowledge users want to run <code class=\"notranslate\">node foo.ts</code> without installing external dependencies or loaders.</p>\n<blockquote>\n<p dir=\"auto\">There is a TC39 proposal for <a href=\"https://github.com/tc39/proposal-type-annotations\">type annotations</a></p>\n</blockquote>\n<h3 dir=\"auto\">Why type stripping</h3>\n<p dir=\"auto\">Type stripping as the name suggest, means removing all the <code class=\"notranslate\">types</code>,  transform the input in a JavaScript module.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const foo: string = &quot;foo&quot;;\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">foo</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"foo\"</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Becomes:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const foo = &quot;foo&quot;;\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">foo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"foo\"</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Other runtimes also perform transformation of some TypeScript only features into JavaScript, for example enums, which do not exists in JavaScript.<br>\nAt least initially in this PR no trasformation is performed, meaning that using <code class=\"notranslate\">Enum</code>, <code class=\"notranslate\">namespaces</code> etc... will not be possible.</p>\n<h3 dir=\"auto\">Why I chose @swc/wasm-typescript</h3>\n<p dir=\"auto\">Because of <em>simplicity</em>.<br>\nI have considered other tools but they require either rust or go to be added to the toolchain.<br>\n<code class=\"notranslate\">@swc/wasm-typescript</code> its a small package with a wasm and a js file to bind it.<br>\nSwc is currently used by Deno for the same purpose, it's battle tested.<br>\nIn the future I see this being implemented in  <strong>native layer</strong>.<br>\nMassive shoutout to <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/kdy1/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kdy1\">@kdy1</a> for releasing a swc version for us.</p>\n<hr>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"warning\">⚠️</g-emoji> Refer to the PR changes in <code class=\"notranslate\">typescript.md</code> for implementation details and limitations.</p>",
            "url": "https://github.com/nodejs/node/pull/53725",
            "title": "module: add --experimental-strip-types",
            "date_modified": "2024-07-30T16:28:43.000Z",
            "date_published": "2024-07-04T15:10:39.000Z",
            "author": {
                "name": "marco-ippolito",
                "url": "https://github.com/marco-ippolito"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/456802?u=55a029ca7659fa56e1422d8f8b619cdba6a33bac&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Notable change</h3>\n<p dir=\"auto\">Module syntax detection (the <code class=\"notranslate\">--experimental-detect-module</code> flag) is now enabled by default. Use <code class=\"notranslate\">--no-experimental-detect-module</code> to disable it if needed.</p>\n<p dir=\"auto\">Syntax detection attempts to run ambiguous files as CommonJS, and if the module fails to parse as CommonJS due to ES module syntax, Node.js tries again and runs the file as an ES module. Ambiguous files are those with a <code class=\"notranslate\">.js</code> or no extension, where the nearest parent <code class=\"notranslate\">package.json</code> has no <code class=\"notranslate\">\"type\"</code> field (either <code class=\"notranslate\">\"type\": \"module\"</code> or <code class=\"notranslate\">\"type\": \"commonjs\"</code>). Syntax detection should have no performance impact on CommonJS modules, but it incurs a slight performance penalty for ES modules; add <code class=\"notranslate\">\"type\": \"module\"</code> to the nearest parent <code class=\"notranslate\">package.json</code> file to eliminate the performance cost. A use case unlocked by this feature is the ability to use ES module syntax in extensionless scripts with no nearby <code class=\"notranslate\">package.json</code>.</p>\n<h3 dir=\"auto\">Description</h3>\n<p dir=\"auto\">This is a PR to unflag <code class=\"notranslate\">--experimental-detect-module</code>. It does two things:</p>\n<ul dir=\"auto\">\n<li>It makes the <code class=\"notranslate\">--experimental-detect-module</code> flag enabled by default, letting people disable it via <code class=\"notranslate\">--no-experimental-detect-module</code>.</li>\n<li>Per <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2304072875\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/53044\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/53044/hovercard?comment_id=2195881734&amp;comment_type=issue_comment\" href=\"https://github.com/nodejs/node/pull/53044#issuecomment-2195881734\">#53044 (comment)</a> this PR changes the <code class=\"notranslate\">format</code> hint returned by Node’s internal <code class=\"notranslate\">resolve</code> for ambiguous (no <code class=\"notranslate\">package.json</code> <code class=\"notranslate\">type</code> field, no <code class=\"notranslate\">.mjs</code> or <code class=\"notranslate\">.cjs</code> extension) files from <code class=\"notranslate\">commonjs</code> to <code class=\"notranslate\">null</code>. This is more correct, as the format hasn’t yet been determined at the time of resolution, because with detection enabled we need to load the source and parse it to detect the format.</li>\n</ul>\n<p dir=\"auto\">I also updated the tests because of the unflagging:</p>\n<h4 dir=\"auto\">Not breaking changes</h4>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-esm-cjs-exports.js</code> <code class=\"notranslate\">should error on invalid CJS exports</code>: Previously this was testing for the error strings <code class=\"notranslate\">Warning: To load an ES module</code> and <code class=\"notranslate\">Unexpected token \\'export\\'</code>; now it tests for the error string <code class=\"notranslate\">SyntaxError: The requested module './invalid-cjs.js' does not provide an export named 'default'</code>. Arguably the new version is more appropriate as it’s testing the actual thing the test describes rather than testing an error that was thrown before getting to the invalid CommonJS exports.</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-esm-import-flag.mjs</code> <code class=\"notranslate\">should import when running –check fails</code>: This test checks that an ESM file passed to <code class=\"notranslate\">--import</code> is evaluated with a CommonJS entry passed to <code class=\"notranslate\">--check</code> fails the syntax check. The file passed to <code class=\"notranslate\">--import</code> is run in both cases, though the previous <code class=\"notranslate\">SyntaxError</code> is now a success; but the point of the test is about the <code class=\"notranslate\">--import</code> file being evaluated at all, not whether its evaluation was successful.</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-require-module-implicit.js</code>: Some tests were attempting to <code class=\"notranslate\">require</code> an ambiguous, extensionless ESM file and expecting an exception with <code class=\"notranslate\">Unexpected token 'export'</code>. These tests were removed. This file is run via <code class=\"notranslate\">--experimental-require-module</code> so this change shouldn’t be considered breaking.</p>\n</li>\n</ul>\n<h4 dir=\"auto\">Possibly breaking changes</h4>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-esm-detect-ambiguous.mjs</code> <code class=\"notranslate\">should not hint wrong format in resolve hook</code>: Previously this expected a <code class=\"notranslate\">format</code> hint of <code class=\"notranslate\">commonjs</code> from a <code class=\"notranslate\">resolve</code> hook, and now it expects <code class=\"notranslate\">null</code>, an intentional change. The hooks are still experimental and the <code class=\"notranslate\">format</code> hint from <code class=\"notranslate\">resolve</code> is documented as optional, so hooks should be written to expect it not to be present; but the unflagging would cause some code that currently returns a hint to no longer do so.</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-esm-loader-hooks.mjs</code> <code class=\"notranslate\">should use ESM loader to respond to require.resolve calls when opting in</code>: The <code class=\"notranslate\">load</code> hook in this test previously assumed that most files being imported got a <code class=\"notranslate\">format</code> of <code class=\"notranslate\">commonjs</code>, whereas now many of them are <code class=\"notranslate\">undefined</code>, an intentional change. Same impact as previous.</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-esm-resolve-type.mjs</code>: Some tests for a <code class=\"notranslate\">format</code> hint of <code class=\"notranslate\">commonjs</code> now check for a <code class=\"notranslate\">format</code> hint of <code class=\"notranslate\">null</code>. Same impact as previous.</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-esm-extensionless-esm-and-wasm.mjs</code>: <code class=\"notranslate\">extensionless ES modules within no package scope</code>: tests for ambiguous extensionless ESM running as the entry point and ambugious extensionless ESM running via <code class=\"notranslate\">import()</code> used to test for exceptions being thrown; now they test for success. Anyone expecting exceptions on running or importing ambiguous or extensionless ESM (for example, to do detection themselves) will be broken by this change.</p>\n</li>\n</ul>",
            "url": "https://github.com/nodejs/node/pull/53619",
            "title": "module: unflag detect-module",
            "date_modified": "2024-08-28T17:46:51.000Z",
            "date_published": "2024-06-28T05:07:10.000Z",
            "author": {
                "name": "GeoffreyBooth",
                "url": "https://github.com/GeoffreyBooth"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/22386678?u=1edf1c87d975625e35b95e474c7973541d05e519&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">A text for the release notes</p>\n<div class=\"highlight highlight-text-md notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"### Network Inspection Support in Node.js\n\nThis update introduces the initial support for network inspection in Node.js. Currently, this is an experimental feature, so you need to enable it using the `--experimental-network-inspection` flag. With this feature enabled, you can inspect network activities occurring within a JavaScript application.\n\n#### Usage\n\nTo use network inspection, start your Node.js application with the following command:\n\n\\`\\`\\`sh\n$ node --inspect-wait --experimental-network-inspection index.js\n\\`\\`\\`\n\n#### Current Limitations\n\nPlease note that the network inspection capabilities are currently limited. We are actively working on enhancing this feature and will continue to expand its functionality in future updates.\n\n- Network inspection is limited to the `http` and `https` modules only.\n- The Network tab in Chrome DevTools will not be available until the [feature request on the Chrome DevTools side](https://issues.chromium.org/issues/353924015) is addressed.\n\nStay tuned for more improvements and feel free to provide feedback or report issues to help us refine this feature.\"><pre class=\"notranslate\"><span class=\"pl-mh\">### <span class=\"pl-en\">Network Inspection Support in Node.js</span></span>\n\nThis update introduces the initial support for network inspection in Node.js. Currently, this is an experimental feature, so you need to enable it using the <span class=\"pl-s\">`</span><span class=\"pl-c1\">--experimental-network-inspection</span><span class=\"pl-s\">`</span> flag. With this feature enabled, you can inspect network activities occurring within a JavaScript application.\n\n<span class=\"pl-mh\">#### <span class=\"pl-en\">Usage</span></span>\n\nTo use network inspection, start your Node.js application with the following command:\n\n<span class=\"pl-c1\">\\`\\`\\`</span>sh\n$ node --inspect-wait --experimental-network-inspection index.js\n<span class=\"pl-c1\">\\`\\`\\`</span>\n\n<span class=\"pl-mh\">#### <span class=\"pl-en\">Current Limitations</span></span>\n\nPlease note that the network inspection capabilities are currently limited. We are actively working on enhancing this feature and will continue to expand its functionality in future updates.\n\n<span class=\"pl-v\">-</span> Network inspection is limited to the <span class=\"pl-s\">`</span><span class=\"pl-c1\">http</span><span class=\"pl-s\">`</span> and <span class=\"pl-s\">`</span><span class=\"pl-c1\">https</span><span class=\"pl-s\">`</span> modules only.\n<span class=\"pl-v\">-</span> The Network tab in Chrome DevTools will not be available until the <span class=\"pl-s\">[</span>feature request on the Chrome DevTools side<span class=\"pl-s\">]</span><span class=\"pl-s\">(</span><span class=\"pl-corl\">https://issues.chromium.org/issues/353924015</span><span class=\"pl-s\">)</span> is addressed.\n\nStay tuned for more improvements and feel free to provide feedback or report issues to help us refine this feature.</pre></div>\n<p dir=\"auto\">The idea of supporting network inspection in Node.js was first proposed 7 years age in the <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"192723113\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/diagnostics/issues/75\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/diagnostics/issues/75/hovercard\" href=\"https://github.com/nodejs/diagnostics/issues/75\">nodejs/diagnostics#75</a>. Despite numerous discussions, we have yet to settle on an implementation approach. This PR aims to serve as a starting point to explore and refine how we can achieve this feature. This PR introduces basic support for the Network domain of the Chrome DevTools Protocol (CDP) and its corresponding agent implementation in Node.js. Although this is an initial implementation with several pending tasks, it sets a foundation to verify if we are heading in the right direction.</p>\n<h2 dir=\"auto\">Summary</h2>\n<p dir=\"auto\">This description outlines the strategy to support network inspection in Node.js and the design of the APIs that allow third-party libraries to integrate with the network inspection. Specifically, it introduces the <code class=\"notranslate\">NodeNetwork</code> domain, a Node.js-specific extension of the standard <code class=\"notranslate\">Network</code> domain, which supports both client and server application network activities.</p>\n<h2 dir=\"auto\">User stories</h2>\n<h3 dir=\"auto\">As a client app developer</h3>\n<p dir=\"auto\">I want to be able to check the network activities triggered by the client APIs (the <code class=\"notranslate\">http</code> module, <code class=\"notranslate\">fetch</code> API, and <code class=\"notranslate\">WebSocket</code> API) on devtools such as Chrome DevTools when I run the app in debugging mode via <code class=\"notranslate\">node --inspect index.js</code>.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"http.get(&quot;http://localhost:8080&quot;);\nfetch(&quot;https://localhost:8080&quot;);\"><pre class=\"notranslate\"><span class=\"pl-s1\">http</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"http://localhost:8080\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"https://localhost:8080\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3 dir=\"auto\">As a serer app developer</h3>\n<p dir=\"auto\">I want to be able to check the network traffics happened in my server on devtools such as Chrome DevTools when I run the app in debugging mode via <code class=\"notranslate\">node --inspect index.js</code>.</p>\n<h3 dir=\"auto\">As a HTTP client library developer</h3>\n<p dir=\"auto\">I want to enable my library to integrate with network inspection. For example, when my library sends a HTTP request and receives a HTTP response, it sends protocol events with debugging data to allow a library user to inspect them on devtools.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class MyHttpClient {\n  id;\n\n  send(url, method) {\n    inspector.NodeNetwork.requestWillBeSent({ id, url, method });\n    // socket.send(url, method);\n    // ...\n  }\n\n  onReceive(response) {\n    inspector.NodeNetwork.responseReceived({ id, response });\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">MyHttpClient</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">id</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-en\">send</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">url</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">method</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">inspector</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">NodeNetwork</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">requestWillBeSent</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> id<span class=\"pl-kos\">,</span> url<span class=\"pl-kos\">,</span> method <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-c\">// socket.send(url, method);</span>\n    <span class=\"pl-c\">// ...</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-en\">onReceive</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">response</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">inspector</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">NodeNetwork</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">responseReceived</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> id<span class=\"pl-kos\">,</span> response <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<h2 dir=\"auto\">Design</h2>\n<h3 dir=\"auto\">Tracking network activities</h3>\n<p dir=\"auto\">Network activities can be captured within <code class=\"notranslate\">diagnostics_channel</code> hooks. This approach enables us to monitor activities in both core modules (<code class=\"notranslate\">http</code>, <code class=\"notranslate\">https</code>) and external libraries (<code class=\"notranslate\">undici</code>) without changing the core implementation.</p>\n<h3 dir=\"auto\">Emit protocol events to DevTools</h3>\n<p dir=\"auto\">Network activities captured in <code class=\"notranslate\">diagnostics_channel</code> are passed to the inspector agent using the <code class=\"notranslate\">inspector.NodeNetwork</code> API as custom <code class=\"notranslate\">NodeNetwork</code> domain objects. The custom <code class=\"notranslate\">NodeNetwork</code> domain extends the standard <code class=\"notranslate\">Network</code> domain by including Node.js-specific events and commands, enabling more granular and relevant tracking of network activities specific to the Node.js environment. It also allows third-party libraries to integrate with Node.js's inspector mechanism.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">NodeNetwork</code> domain will support both client activities (such as a request sent from the client) and server activities (such as a request received by the server).</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"domain NodeNetwork\n  # Fired when a client is about to send HTTP request.\n  event requestWillBeSent\n    parameters\n      RequestId requestId\n      Request request\n      MonotonicTime timestamp\n\n  # Fire when a server receives a HTTP request.\n  event requestReceived\n    parameters\n      RequestId requestId\n      Request request\n      MonotonicTime timestamp\"><pre lang=\"pdl\" class=\"notranslate\"><code class=\"notranslate\">domain NodeNetwork\n  # Fired when a client is about to send HTTP request.\n  event requestWillBeSent\n    parameters\n      RequestId requestId\n      Request request\n      MonotonicTime timestamp\n\n  # Fire when a server receives a HTTP request.\n  event requestReceived\n    parameters\n      RequestId requestId\n      Request request\n      MonotonicTime timestamp\n</code></pre></div>\n<p dir=\"auto\">When <code class=\"notranslate\">NodeNetwork</code> event is sent, Node.js internally sends some of the <code class=\"notranslate\">Network</code> domain events to the devtools frontend so that Chrome DevTools can capture them and show network activities in the network panel.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/22386678/345042377-220f33dd-989e-4f7c-8492-d3776fdb3cf7.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjcwNDYzNzYsIm5iZiI6MTcyNzA0NjA3NiwicGF0aCI6Ii8yMjM4NjY3OC8zNDUwNDIzNzctMjIwZjMzZGQtOTg5ZS00ZjdjLTg0OTItZDM3NzZmZGIzY2Y3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA5MjIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwOTIyVDIzMDExNlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTVjZDIwMTdhNGVjYTkwM2U5NTEyNzFmZWEzOTBiZWNkOTc0YjhiOWI4NTdkM2M0OWYyNDdjNTNjMjUxNzBhMzkmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.usNxnw9oVU1MhEvM9nZfIyH-pNElNae9idvrKBE3UmE\"><img src=\"https://private-user-images.githubusercontent.com/22386678/345042377-220f33dd-989e-4f7c-8492-d3776fdb3cf7.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjcwNDYzNzYsIm5iZiI6MTcyNzA0NjA3NiwicGF0aCI6Ii8yMjM4NjY3OC8zNDUwNDIzNzctMjIwZjMzZGQtOTg5ZS00ZjdjLTg0OTItZDM3NzZmZGIzY2Y3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA5MjIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwOTIyVDIzMDExNlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTVjZDIwMTdhNGVjYTkwM2U5NTEyNzFmZWEzOTBiZWNkOTc0YjhiOWI4NTdkM2M0OWYyNDdjNTNjMjUxNzBhMzkmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.usNxnw9oVU1MhEvM9nZfIyH-pNElNae9idvrKBE3UmE\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Demo</h2>\n<p dir=\"auto\">Currenlty, the Node-specific DevTools Frontend lacks a network tab. Therefore, you'll need to use the Chrome DevTools Frontend, accessible via <code class=\"notranslate\">devtools://devtools/bundled/inspector.html</code>. Below is a simple demonstration:</p>\n<ol dir=\"auto\">\n<li>Start Node.js with the inspector and wait for a connection:</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ ./node --inspect-wait --experimental-network-inspection -e &quot;require('https').get('https://nodejs.org/en', (res) =&gt; { console.log(res.statusCode); })&quot;\nDebugger listening on ws://127.0.0.1:9229/&lt;inspector-websocket-id&gt;\nFor help, see: https://nodejs.org/en/docs/inspector\"><pre class=\"notranslate\"><code class=\"notranslate\">$ ./node --inspect-wait --experimental-network-inspection -e \"require('https').get('https://nodejs.org/en', (res) =&gt; { console.log(res.statusCode); })\"\nDebugger listening on ws://127.0.0.1:9229/&lt;inspector-websocket-id&gt;\nFor help, see: https://nodejs.org/en/docs/inspector\n</code></pre></div>\n<ol start=\"2\" dir=\"auto\">\n<li>Open the Chrome DevTools Frontend and connect to the Node.js inspector</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"devtools://devtools/bundled/inspector.html?ws=127.0.0.1:9229/&lt;inspector-websocket-id&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">devtools://devtools/bundled/inspector.html?ws=127.0.0.1:9229/&lt;inspector-websocket-id&gt;\n</code></pre></div>\n<ol start=\"3\" dir=\"auto\">\n<li>Navigate to the network tab to observe network activity.</li>\n</ol>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/22386678/345669191-2da93524-53f5-495d-af0a-64c0079a53b4.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjcwNDYzNzYsIm5iZiI6MTcyNzA0NjA3NiwicGF0aCI6Ii8yMjM4NjY3OC8zNDU2NjkxOTEtMmRhOTM1MjQtNTNmNS00OTVkLWFmMGEtNjRjMDA3OWE1M2I0LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA5MjIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwOTIyVDIzMDExNlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWI4ZjY4ODcwYTc1ZGM4OTJjOWYxODQ5ODFiMjcxMWQ4MmM3YTY0NmY3NjMxMTZiZmI2M2I3MmYzNmI1YzRhYzEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.Jkal0cHYluiHgu_kkxIKTpmyvO6Ux8c6EpWsvAhGywc\"><img src=\"https://private-user-images.githubusercontent.com/22386678/345669191-2da93524-53f5-495d-af0a-64c0079a53b4.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjcwNDYzNzYsIm5iZiI6MTcyNzA0NjA3NiwicGF0aCI6Ii8yMjM4NjY3OC8zNDU2NjkxOTEtMmRhOTM1MjQtNTNmNS00OTVkLWFmMGEtNjRjMDA3OWE1M2I0LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA5MjIlMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwOTIyVDIzMDExNlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWI4ZjY4ODcwYTc1ZGM4OTJjOWYxODQ5ODFiMjcxMWQ4MmM3YTY0NmY3NjMxMTZiZmI2M2I3MmYzNmI1YzRhYzEmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.Jkal0cHYluiHgu_kkxIKTpmyvO6Ux8c6EpWsvAhGywc\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Network activity sources</h2>\n<p dir=\"auto\">These APIs can be supported once each <code class=\"notranslate\">diagnostics_channel</code> provides sufficient hook timing and resources.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">http</code> module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">https</code> module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">http2</code> module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> WebSocket (I haven't tried it yet)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> fetch API (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2119411231\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/undici/issues/2701\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/undici/pull/2701/hovercard\" href=\"https://github.com/nodejs/undici/pull/2701\">nodejs/undici#2701</a> needs to be done)</li>\n</ul>\n<h2 dir=\"auto\">Scope of this PR</h2>\n<p dir=\"auto\">This PR aims to provide a minimal implementation for network inspection, focusing on delivering the fundamental functionalities. The tasks accomplished in this PR include:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> implementing a network activity tracking mechanism with <code class=\"notranslate\">diagnositcs_channel</code>, targeting <code class=\"notranslate\">http</code> and <code class=\"notranslate\">https</code> GET requests.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> integrating the tracking mechanism with the inspector agent.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Implementing agents for the <code class=\"notranslate\">NodeNetwork</code> domain.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Implementing agents for the <code class=\"notranslate\">Network</code> domain.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Testing</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Documentation</li>\n</ul>\n<h2 dir=\"auto\">Future work</h2>\n<p dir=\"auto\">To fully support the Network domain of the CDP, several tasks remain:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Complete implementation for all network domain events as specified in the <a href=\"https://chromedevtools.github.io/devtools-protocol/tot/Network/\" rel=\"nofollow\">https://chromedevtools.github.io/devtools-protocol/tot/Network/</a>\n<ul class=\"contains-task-list\">\n<li>CDP is primarily designed for browsers, but we aim to support as many relevant features as possible in Node.js</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <a href=\"https://chromedevtools.github.io/devtools-protocol/tot/Network/#event-loadingFailed\" rel=\"nofollow\"><code class=\"notranslate\">Network.loadingFailed</code></a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> request url</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> request headers</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> request timing</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> response method</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> status code</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> response headers</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> ...</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Add a network tab on the Node-specific DevTools frontend\n<ul dir=\"auto\">\n<li>Collaborate with the Chrome DevTools team to achieve this.</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Support client activities</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Support server activities</li>\n</ul>\n<h2 dir=\"auto\">Limitations and Challenges</h2>\n<ul dir=\"auto\">\n<li>Response body inspection (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2375385860\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/53593\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/53593/hovercard?comment_id=1658039637&amp;comment_type=review_comment\" href=\"https://github.com/nodejs/node/pull/53593#discussion_r1658039637\">#53593 (comment)</a>)</li>\n<li>Non-inspection features (e.g., header/request/response modification, network condition emulation, etc.)</li>\n</ul>\n<p dir=\"auto\">cc @nodejs/inspector <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/eugeneo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eugeneo\">@eugeneo</a></p>",
            "url": "https://github.com/nodejs/node/pull/53593",
            "title": "inspector: add initial support for network inspection",
            "date_modified": "2024-08-09T01:04:44.000Z",
            "date_published": "2024-06-26T13:38:40.000Z",
            "author": {
                "name": "cola119",
                "url": "https://github.com/cola119"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/38299977?u=88aefc5a0e292a8e7147d1941c70fcc8a4153da6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #53508.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2361591788\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/53508\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/53508/hovercard\" href=\"https://github.com/nodejs/node/issues/53508\">#53508</a><br>\n<span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #51222.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2049170307\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/51222\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/51222/hovercard\" href=\"https://github.com/nodejs/node/issues/51222\">#51222</a></p>\n<p dir=\"auto\">This Pull Request introduces two new command-line interface flags to Node.js:</p>\n<ul dir=\"auto\">\n<li><strong><code class=\"notranslate\">--test-coverage-include</code></strong>: Allows users to specify glob patterns to include specific files in the coverage report.</li>\n<li><strong><code class=\"notranslate\">--test-coverage-exclude</code></strong>: Allows users to specify glob patterns to exclude specific files from the coverage report.</li>\n</ul>\n<p dir=\"auto\">Notable change text, if any:</p>\n<div class=\"highlight highlight-text-md notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\nIndividual file patterns can now be excluded or exclusively included in coverage reports:\n\n- To exclude a specific pattern, use `--test-coverage-exclude`. For example:\n  ```bash\n  node --experimental-test-coverage --test-coverage-exclude=**/*.test.js .\n  ```\n  This command excludes all files ending with `.test.js` from the coverage report.\n\n- To include only files that match a specific pattern, use `--test-coverage-include`. For example:\n  ```bash\n  node --experimental-test-coverage --test-coverage-include=src/**/*.js .\n  ```\n  This command includes only `.js` files located in the `src` directory and its subdirectories in the coverage report.\n\nBoth options can be specified multiple times to match multiple glob patterns. If both options are used in unison, files will need to abide by both guidelines.\"><pre class=\"notranslate\">Individual file patterns can now be excluded or exclusively included in coverage reports:\n\n<span class=\"pl-v\">-</span> To exclude a specific pattern, use <span class=\"pl-s\">`</span><span class=\"pl-c1\">--test-coverage-exclude</span><span class=\"pl-s\">`</span>. For example:\n  <span class=\"pl-s\">```</span><span class=\"pl-en\">bash</span>\n  node --experimental-test-coverage --test-coverage-exclude=<span class=\"pl-k\">**</span>/<span class=\"pl-k\">*</span>.test.js <span class=\"pl-c1\">.</span>\n  ```\n  This <span class=\"pl-c1\">command</span> excludes all files ending with <span class=\"pl-s\"><span class=\"pl-pds\">`</span>.test.js<span class=\"pl-pds\">`</span></span> from the coverage report.\n\n- To include only files that match a specific pattern, use <span class=\"pl-s\"><span class=\"pl-pds\">`</span>--test-coverage-include<span class=\"pl-pds\">`</span></span>. For example:\n  <span class=\"pl-s\"><span class=\"pl-pds\">`</span><span class=\"pl-pds\">`</span><span class=\"pl-pds\">`</span>bash</span>\n<span class=\"pl-s\">  node --experimental-test-coverage --test-coverage-include=src/<span class=\"pl-k\">**</span>/<span class=\"pl-k\">*</span>.js <span class=\"pl-c1\">.</span></span>\n<span class=\"pl-s\">  <span class=\"pl-pds\">`</span><span class=\"pl-pds\">`</span><span class=\"pl-pds\">`</span></span>\n  This <span class=\"pl-c1\">command</span> includes only <span class=\"pl-s\"><span class=\"pl-pds\">`</span>.js<span class=\"pl-pds\">`</span></span> files located <span class=\"pl-k\">in</span> the <span class=\"pl-s\"><span class=\"pl-pds\">`</span>src<span class=\"pl-pds\">`</span></span> directory and its subdirectories <span class=\"pl-k\">in</span> the coverage report.\n\nBoth options can be specified multiple <span class=\"pl-c1\">times</span> to match multiple glob patterns. If both options are used <span class=\"pl-k\">in</span> unison, files will need to abide by both guidelines.</pre></div>",
            "url": "https://github.com/nodejs/node/pull/53553",
            "title": "test_runner: support glob matching coverage files",
            "date_modified": "2024-09-21T11:34:13.000Z",
            "date_published": "2024-06-22T23:45:30.000Z",
            "author": {
                "name": "RedYetiDev",
                "url": "https://github.com/RedYetiDev"
            }
        }
    ]
}