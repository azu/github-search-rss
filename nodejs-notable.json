{
    "version": "https://jsonfeed.org/version/1",
    "title": "Node.js notable changes",
    "home_page_url": "https://azu.github.io/github-search-rss/nodejs-notable.json",
    "feed_url": "https://azu.github.io/github-search-rss/nodejs-notable.json",
    "description": "Node.js notable changes on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3065230?u=0e938c0e3fcdc4998886799c5bc247ea8d17714a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Apple M2 Pro</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"buffers/buffer-copy.js n=6000000 partial='false' bytes=0                    -0.53 %       ±6.78%  ±9.02% ±11.74%\nbuffers/buffer-copy.js n=6000000 partial='false' bytes=128          ***     30.37 %      ±10.39% ±13.88% ±18.19%\nbuffers/buffer-copy.js n=6000000 partial='false' bytes=32768                 2.73 %       ±3.96%  ±5.27%  ±6.86%\nbuffers/buffer-copy.js n=6000000 partial='false' bytes=8            ***     73.09 %      ±10.43% ±13.89% ±18.08%\nbuffers/buffer-copy.js n=6000000 partial='true' bytes=0                     -1.66 %       ±7.78% ±10.35% ±13.47%\nbuffers/buffer-copy.js n=6000000 partial='true' bytes=128           ***    327.50 %      ±23.05% ±31.00% ±41.01%\nbuffers/buffer-copy.js n=6000000 partial='true' bytes=32768           *      4.50 %       ±4.34%  ±5.78%  ±7.55%\nbuffers/buffer-copy.js n=6000000 partial='true' bytes=8             ***    311.90 %      ±33.99% ±45.75% ±60.62%\"><pre class=\"notranslate\">buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=0                    -0.53 %       ±6.78%  ±9.02% ±11.74%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=128          <span class=\"pl-k\">***</span>     30.37 %      ±10.39% ±13.88% ±18.19%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=32768                 2.73 %       ±3.96%  ±5.27%  ±6.86%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=8            <span class=\"pl-k\">***</span>     73.09 %      ±10.43% ±13.89% ±18.08%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=0                     -1.66 %       ±7.78% ±10.35% ±13.47%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=128           <span class=\"pl-k\">***</span>    327.50 %      ±23.05% ±31.00% ±41.01%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=32768           <span class=\"pl-k\">*</span>      4.50 %       ±4.34%  ±5.78%  ±7.55%\nbuffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=8             <span class=\"pl-k\">***</span>    311.90 %      ±33.99% ±45.75% ±60.62%</pre></div>\n<p dir=\"auto\">Benchmark CI</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"10:33:07 buffers/buffer-copy.js n=6000000 partial='false' bytes=0                     0.56 %       ±1.11%  ±1.48%  ±1.95%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='false' bytes=128          ***     34.10 %       ±0.81%  ±1.08%  ±1.41%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='false' bytes=32768        ***     -1.80 %       ±0.84%  ±1.12%  ±1.47%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='false' bytes=8            ***     38.98 %       ±1.00%  ±1.34%  ±1.75%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='true' bytes=0                     -0.44 %       ±0.81%  ±1.08%  ±1.41%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='true' bytes=128           ***    256.54 %       ±1.31%  ±1.75%  ±2.31%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='true' bytes=32768         ***     35.39 %      ±11.48% ±15.46% ±20.49%\n10:33:07 buffers/buffer-copy.js n=6000000 partial='true' bytes=8             ***    249.26 %       ±1.67%  ±2.24%  ±2.95%\"><pre class=\"notranslate\">10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=0                     0.56 %       ±1.11%  ±1.48%  ±1.95%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=128          <span class=\"pl-k\">***</span>     34.10 %       ±0.81%  ±1.08%  ±1.41%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=32768        <span class=\"pl-k\">***</span>     -1.80 %       ±0.84%  ±1.12%  ±1.47%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>false<span class=\"pl-pds\">'</span></span> bytes=8            <span class=\"pl-k\">***</span>     38.98 %       ±1.00%  ±1.34%  ±1.75%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=0                     -0.44 %       ±0.81%  ±1.08%  ±1.41%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=128           <span class=\"pl-k\">***</span>    256.54 %       ±1.31%  ±1.75%  ±2.31%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=32768         <span class=\"pl-k\">***</span>     35.39 %      ±11.48% ±15.46% ±20.49%\n10:33:07 buffers/buffer-copy.js n=6000000 partial=<span class=\"pl-s\"><span class=\"pl-pds\">'</span>true<span class=\"pl-pds\">'</span></span> bytes=8             <span class=\"pl-k\">***</span>    249.26 %       ±1.67%  ±2.24%  ±2.95%</pre></div>",
            "url": "https://github.com/nodejs/node/pull/54087",
            "title": "buffer: use native copy impl",
            "date_modified": "2024-08-02T09:19:45.000Z",
            "date_published": "2024-07-28T21:22:19.000Z",
            "author": {
                "name": "ronag",
                "url": "https://github.com/ronag"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/26234614?u=5edcb211e86232b06e6d6133439f9490f9f5d689&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This PR reverts (not cleanly) <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"753635434\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/36328\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/36328/hovercard\" href=\"https://github.com/nodejs/node/pull/36328\">#36328</a> and consequently, the <code class=\"notranslate\">--expiremental-network-import</code> is removed.</p>\n<p dir=\"auto\">In the past month, we have been assessing several experimental features. Recently, we have received reports regarding issues with the Network Import feature. Unfortunately, this feature is lacking a champion, and the documentation is not clear enough to define security expectations or boundaries. This makes it difficult to review the reports, as we are unsure of how to assess them.</p>\n<p dir=\"auto\">I want to emphasize that this doesn't mean Node.js does not support the exploration of http imports. I will quote <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/joyeecheung/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/joyeecheung\">@joyeecheung</a> as:</p>\n<blockquote>\n<p dir=\"auto\">\"The security model it's based on (no access to other builtins to run untrusted code) is just not going to work out in the current Node.js architecture without a huge amount of refactoring, vetting and gatekeeping that nobody is doing and nobody seems to be committed to do either<br>\nSupport for http import alone isn't really a problem, but that particular security model is just not realistic to implement or maintain on top of the existing code; The only way you could do it is to rewrite Node.js from scratch, then that's Deno<br>\nEven (redacted) leaks a stream that can be a file stream, it's going to be a whack-a-mole\"</p>\n</blockquote>\n<p dir=\"auto\">It's also worth it to mention that experimental features are being evaluated at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2391257347\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/next-10/issues/285\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/next-10/issues/285/hovercard\" href=\"https://github.com/nodejs/next-10/issues/285\">nodejs/next-10#285</a>.</p>\n<p dir=\"auto\">I'm pinging the initial authors of this PR for awareness: <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/bmeck/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/bmeck\">@bmeck</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jasnell/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jasnell\">@jasnell</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/ljharb/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/ljharb\">@ljharb</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/jsumners/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/jsumners\">@jsumners</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/JakobJingleheimer/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/JakobJingleheimer\">@JakobJingleheimer</a></p>",
            "url": "https://github.com/nodejs/node/pull/53822",
            "title": "lib,src: drop --experimental-network-imports",
            "date_modified": "2024-07-28T16:33:08.000Z",
            "date_published": "2024-07-12T13:56:16.000Z",
            "author": {
                "name": "RafaelGSS",
                "url": "https://github.com/RafaelGSS"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2512748?u=4d3b96c531c7d0ae8b192a48105b6f4554152a2a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2329745866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/53264\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/53264/hovercard\" href=\"https://github.com/nodejs/node/issues/53264\">#53264</a> has been open for over a month with no objections, so I am opening this PR with an initial <code class=\"notranslate\">node:sqlite</code> module. There is other functionality that could potentially be exposed in the future, but I believe this is enough for an experimental MVP.</p>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #53264.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2329745866\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/53264\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/53264/hovercard\" href=\"https://github.com/nodejs/node/issues/53264\">#53264</a></p>\n<p dir=\"auto\"><strong>Summary</strong>: Node.js now includes a built-in sqlite module (<code class=\"notranslate\">require('node:sqlite')</code>) that becomes available when using the <code class=\"notranslate\">--experimental-sqlite</code> flag</p>\n<p dir=\"auto\">The following example shows the basic usage of the <code class=\"notranslate\">node:sqlite</code> module to open<br>\nan in-memory database, write data to the database, and then read the data back.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import { DatabaseSync } from 'node:sqlite';\nconst database = new DatabaseSync(':memory:');\n\n// Execute SQL statements from strings.\ndatabase.exec(`\n  CREATE TABLE data(\n    key INTEGER PRIMARY KEY,\n    value TEXT\n  ) STRICT\n`);\n// Create a prepared statement to insert data into the database.\nconst insert = database.prepare('INSERT INTO data (key, value) VALUES (?, ?)');\n// Execute the prepared statement with bound values.\ninsert.run(1, 'hello');\ninsert.run(2, 'world');\n// Create a prepared statement to read data from the database.\nconst query = database.prepare('SELECT * FROM data ORDER BY key');\n// Execute the prepared statement and log the result set.\nconsole.log(query.all());\n// Prints: [ { key: 1, value: 'hello' }, { key: 2, value: 'world' } ]\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-v\">DatabaseSync</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'node:sqlite'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">database</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-v\">DatabaseSync</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">':memory:'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// Execute SQL statements from strings.</span>\n<span class=\"pl-s1\">database</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">exec</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`</span>\n<span class=\"pl-s\">  CREATE TABLE data(</span>\n<span class=\"pl-s\">    key INTEGER PRIMARY KEY,</span>\n<span class=\"pl-s\">    value TEXT</span>\n<span class=\"pl-s\">  ) STRICT</span>\n<span class=\"pl-s\">`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// Create a prepared statement to insert data into the database.</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">insert</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">database</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">prepare</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'INSERT INTO data (key, value) VALUES (?, ?)'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// Execute the prepared statement with bound values.</span>\n<span class=\"pl-s1\">insert</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">run</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'hello'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-s1\">insert</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">run</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">2</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'world'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// Create a prepared statement to read data from the database.</span>\n<span class=\"pl-k\">const</span> <span class=\"pl-s1\">query</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">database</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">prepare</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'SELECT * FROM data ORDER BY key'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// Execute the prepared statement and log the result set.</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">query</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">all</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// Prints: [ { key: 1, value: 'hello' }, { key: 2, value: 'world' } ]</span></pre></div>",
            "url": "https://github.com/nodejs/node/pull/53752",
            "title": "lib,src,test,doc: add node:sqlite module",
            "date_modified": "2024-08-02T17:59:10.000Z",
            "date_published": "2024-07-07T16:28:20.000Z",
            "author": {
                "name": "cjihrig",
                "url": "https://github.com/cjihrig"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36735501?u=8e93f809522831771aab98cbb2a67c5e67e673d5&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><strong>Moderation Note:</strong> This PR has been posted on several social network platforms and thus attracts a lot of mostly off-topic comments.</p>\n<p dir=\"auto\">If you've used this feature and ran into issues or have specific feedback to provide - please open a new issue  <a href=\"https://github.com/nodejs/node/issues/new/choose\">https://github.com/nodejs/node/issues/new/choose</a></p>\n<hr>\n<p dir=\"auto\">It is possible to execute TypeScript files by setting the experimental flag <code class=\"notranslate\">--experimental-strip-types</code>.<br>\nNode.js will transpile TypeScript source code into JavaScript source code.<br>\nDuring the transpilation process, no type checking is performed, and types are discarded.</p>\n<h3 dir=\"auto\">Roadmap</h3>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2408734753\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/loaders/issues/217\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/loaders/issues/217/hovercard\" href=\"https://github.com/nodejs/loaders/issues/217\">nodejs/loaders#217</a></p>\n<h3 dir=\"auto\">Motivation</h3>\n<p dir=\"auto\">I believe enabling users to execute TypeScript files is crucial to move the ecosystem forward, it has been requested on all the surveys, and it simply cannot be ignored. We must acknowledge users want to run <code class=\"notranslate\">node foo.ts</code> without installing external dependencies or loaders.</p>\n<blockquote>\n<p dir=\"auto\">There is a TC39 proposal for <a href=\"https://github.com/tc39/proposal-type-annotations\">type annotations</a></p>\n</blockquote>\n<h3 dir=\"auto\">Why type stripping</h3>\n<p dir=\"auto\">Type stripping as the name suggest, means removing all the <code class=\"notranslate\">types</code>,  transform the input in a JavaScript module.</p>\n<div class=\"highlight highlight-source-ts notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const foo: string = &quot;foo&quot;;\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">foo</span>: <span class=\"pl-smi\">string</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"foo\"</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Becomes:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"const foo = &quot;foo&quot;;\"><pre class=\"notranslate\"><span class=\"pl-k\">const</span> <span class=\"pl-s1\">foo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">\"foo\"</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Other runtimes also perform transformation of some TypeScript only features into JavaScript, for example enums, which do not exists in JavaScript.<br>\nAt least initially in this PR no trasformation is performed, meaning that using <code class=\"notranslate\">Enum</code>, <code class=\"notranslate\">namespaces</code> etc... will not be possible.</p>\n<h3 dir=\"auto\">Why I chose @swc/wasm-typescript</h3>\n<p dir=\"auto\">Because of <em>simplicity</em>.<br>\nI have considered other tools but they require either rust or go to be added to the toolchain.<br>\n<code class=\"notranslate\">@swc/wasm-typescript</code> its a small package with a wasm and a js file to bind it.<br>\nSwc is currently used by Deno for the same purpose, it's battle tested.<br>\nIn the future I see this being implemented in  <strong>native layer</strong>.<br>\nMassive shoutout to <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/kdy1/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/kdy1\">@kdy1</a> for releasing a swc version for us.</p>\n<hr>\n<p dir=\"auto\"><g-emoji class=\"g-emoji\" alias=\"warning\">⚠️</g-emoji> Refer to the PR changes in <code class=\"notranslate\">typescript.md</code> for implementation details and limitations.</p>",
            "url": "https://github.com/nodejs/node/pull/53725",
            "title": "module: add --experimental-strip-types",
            "date_modified": "2024-07-30T16:28:43.000Z",
            "date_published": "2024-07-04T15:10:39.000Z",
            "author": {
                "name": "marco-ippolito",
                "url": "https://github.com/marco-ippolito"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/456802?u=55a029ca7659fa56e1422d8f8b619cdba6a33bac&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h3 dir=\"auto\">Notable change</h3>\n<p dir=\"auto\">Module syntax detection (the <code class=\"notranslate\">--experimental-detect-module</code> flag) is now enabled by default. Use <code class=\"notranslate\">--no-experimental-detect-module</code> to disable it if needed.</p>\n<p dir=\"auto\">Syntax detection attempts to run ambiguous files as CommonJS, and if the module fails to parse as CommonJS due to ES module syntax, Node.js tries again and runs the file as an ES module. Ambiguous files are those with a <code class=\"notranslate\">.js</code> or no extension, where the nearest parent <code class=\"notranslate\">package.json</code> has no <code class=\"notranslate\">\"type\"</code> field (either <code class=\"notranslate\">\"type\": \"module\"</code> or <code class=\"notranslate\">\"type\": \"commonjs\"</code>). Syntax detection should have no performance impact on CommonJS modules, but it incurs a slight performance penalty for ES modules; add <code class=\"notranslate\">\"type\": \"module\"</code> to the nearest parent <code class=\"notranslate\">package.json</code> file to eliminate the performance cost. A use case unlocked by this feature is the ability to use ES module syntax in extensionless scripts with no nearby <code class=\"notranslate\">package.json</code>.</p>\n<h3 dir=\"auto\">Description</h3>\n<p dir=\"auto\">This is a PR to unflag <code class=\"notranslate\">--experimental-detect-module</code>. It does two things:</p>\n<ul dir=\"auto\">\n<li>It makes the <code class=\"notranslate\">--experimental-detect-module</code> flag enabled by default, letting people disable it via <code class=\"notranslate\">--no-experimental-detect-module</code>.</li>\n<li>Per <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2304072875\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/53044\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/53044/hovercard?comment_id=2195881734&amp;comment_type=issue_comment\" href=\"https://github.com/nodejs/node/pull/53044#issuecomment-2195881734\">#53044 (comment)</a> this PR changes the <code class=\"notranslate\">format</code> hint returned by Node’s internal <code class=\"notranslate\">resolve</code> for ambiguous (no <code class=\"notranslate\">package.json</code> <code class=\"notranslate\">type</code> field, no <code class=\"notranslate\">.mjs</code> or <code class=\"notranslate\">.cjs</code> extension) files from <code class=\"notranslate\">commonjs</code> to <code class=\"notranslate\">null</code>. This is more correct, as the format hasn’t yet been determined at the time of resolution, because with detection enabled we need to load the source and parse it to detect the format.</li>\n</ul>\n<p dir=\"auto\">I also updated the tests because of the unflagging:</p>\n<h4 dir=\"auto\">Not breaking changes</h4>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-esm-cjs-exports.js</code> <code class=\"notranslate\">should error on invalid CJS exports</code>: Previously this was testing for the error strings <code class=\"notranslate\">Warning: To load an ES module</code> and <code class=\"notranslate\">Unexpected token \\'export\\'</code>; now it tests for the error string <code class=\"notranslate\">SyntaxError: The requested module './invalid-cjs.js' does not provide an export named 'default'</code>. Arguably the new version is more appropriate as it’s testing the actual thing the test describes rather than testing an error that was thrown before getting to the invalid CommonJS exports.</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-esm-import-flag.mjs</code> <code class=\"notranslate\">should import when running –check fails</code>: This test checks that an ESM file passed to <code class=\"notranslate\">--import</code> is evaluated with a CommonJS entry passed to <code class=\"notranslate\">--check</code> fails the syntax check. The file passed to <code class=\"notranslate\">--import</code> is run in both cases, though the previous <code class=\"notranslate\">SyntaxError</code> is now a success; but the point of the test is about the <code class=\"notranslate\">--import</code> file being evaluated at all, not whether its evaluation was successful.</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-require-module-implicit.js</code>: Some tests were attempting to <code class=\"notranslate\">require</code> an ambiguous, extensionless ESM file and expecting an exception with <code class=\"notranslate\">Unexpected token 'export'</code>. These tests were removed. This file is run via <code class=\"notranslate\">--experimental-require-module</code> so this change shouldn’t be considered breaking.</p>\n</li>\n</ul>\n<h4 dir=\"auto\">Possibly breaking changes</h4>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-esm-detect-ambiguous.mjs</code> <code class=\"notranslate\">should not hint wrong format in resolve hook</code>: Previously this expected a <code class=\"notranslate\">format</code> hint of <code class=\"notranslate\">commonjs</code> from a <code class=\"notranslate\">resolve</code> hook, and now it expects <code class=\"notranslate\">null</code>, an intentional change. The hooks are still experimental and the <code class=\"notranslate\">format</code> hint from <code class=\"notranslate\">resolve</code> is documented as optional, so hooks should be written to expect it not to be present; but the unflagging would cause some code that currently returns a hint to no longer do so.</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-esm-loader-hooks.mjs</code> <code class=\"notranslate\">should use ESM loader to respond to require.resolve calls when opting in</code>: The <code class=\"notranslate\">load</code> hook in this test previously assumed that most files being imported got a <code class=\"notranslate\">format</code> of <code class=\"notranslate\">commonjs</code>, whereas now many of them are <code class=\"notranslate\">undefined</code>, an intentional change. Same impact as previous.</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-esm-resolve-type.mjs</code>: Some tests for a <code class=\"notranslate\">format</code> hint of <code class=\"notranslate\">commonjs</code> now check for a <code class=\"notranslate\">format</code> hint of <code class=\"notranslate\">null</code>. Same impact as previous.</p>\n</li>\n<li>\n<p dir=\"auto\"><code class=\"notranslate\">test/es-module/test-esm-extensionless-esm-and-wasm.mjs</code>: <code class=\"notranslate\">extensionless ES modules within no package scope</code>: tests for ambiguous extensionless ESM running as the entry point and ambugious extensionless ESM running via <code class=\"notranslate\">import()</code> used to test for exceptions being thrown; now they test for success. Anyone expecting exceptions on running or importing ambiguous or extensionless ESM (for example, to do detection themselves) will be broken by this change.</p>\n</li>\n</ul>",
            "url": "https://github.com/nodejs/node/pull/53619",
            "title": "module: unflag detect-module",
            "date_modified": "2024-08-05T14:03:01.000Z",
            "date_published": "2024-06-28T05:07:10.000Z",
            "author": {
                "name": "GeoffreyBooth",
                "url": "https://github.com/GeoffreyBooth"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/22386678?u=1edf1c87d975625e35b95e474c7973541d05e519&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">A text for the release notes</p>\n<div class=\"highlight highlight-text-md notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"### Network Inspection Support in Node.js\n\nThis update introduces the initial support for network inspection in Node.js. Currently, this is an experimental feature, so you need to enable it using the `--experimental-network-inspection` flag. With this feature enabled, you can inspect network activities occurring within a JavaScript application.\n\n#### Usage\n\nTo use network inspection, start your Node.js application with the following command:\n\n\\`\\`\\`sh\n$ node --inspect-wait --experimental-network-inspection index.js\n\\`\\`\\`\n\n#### Current Limitations\n\nPlease note that the network inspection capabilities are currently limited. We are actively working on enhancing this feature and will continue to expand its functionality in future updates.\n\n- Network inspection is limited to the `http` and `https` modules only.\n- The Network tab in Chrome DevTools will not be available until the [feature request on the Chrome DevTools side](https://issues.chromium.org/issues/353924015) is addressed.\n\nStay tuned for more improvements and feel free to provide feedback or report issues to help us refine this feature.\"><pre class=\"notranslate\"><span class=\"pl-mh\">### <span class=\"pl-en\">Network Inspection Support in Node.js</span></span>\n\nThis update introduces the initial support for network inspection in Node.js. Currently, this is an experimental feature, so you need to enable it using the <span class=\"pl-s\">`</span><span class=\"pl-c1\">--experimental-network-inspection</span><span class=\"pl-s\">`</span> flag. With this feature enabled, you can inspect network activities occurring within a JavaScript application.\n\n<span class=\"pl-mh\">#### <span class=\"pl-en\">Usage</span></span>\n\nTo use network inspection, start your Node.js application with the following command:\n\n<span class=\"pl-c1\">\\`\\`\\`</span>sh\n$ node --inspect-wait --experimental-network-inspection index.js\n<span class=\"pl-c1\">\\`\\`\\`</span>\n\n<span class=\"pl-mh\">#### <span class=\"pl-en\">Current Limitations</span></span>\n\nPlease note that the network inspection capabilities are currently limited. We are actively working on enhancing this feature and will continue to expand its functionality in future updates.\n\n<span class=\"pl-v\">-</span> Network inspection is limited to the <span class=\"pl-s\">`</span><span class=\"pl-c1\">http</span><span class=\"pl-s\">`</span> and <span class=\"pl-s\">`</span><span class=\"pl-c1\">https</span><span class=\"pl-s\">`</span> modules only.\n<span class=\"pl-v\">-</span> The Network tab in Chrome DevTools will not be available until the <span class=\"pl-s\">[</span>feature request on the Chrome DevTools side<span class=\"pl-s\">]</span><span class=\"pl-s\">(</span><span class=\"pl-corl\">https://issues.chromium.org/issues/353924015</span><span class=\"pl-s\">)</span> is addressed.\n\nStay tuned for more improvements and feel free to provide feedback or report issues to help us refine this feature.</pre></div>\n<p dir=\"auto\">The idea of supporting network inspection in Node.js was first proposed 7 years age in the <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"192723113\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/diagnostics/issues/75\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/diagnostics/issues/75/hovercard\" href=\"https://github.com/nodejs/diagnostics/issues/75\">nodejs/diagnostics#75</a>. Despite numerous discussions, we have yet to settle on an implementation approach. This PR aims to serve as a starting point to explore and refine how we can achieve this feature. This PR introduces basic support for the Network domain of the Chrome DevTools Protocol (CDP) and its corresponding agent implementation in Node.js. Although this is an initial implementation with several pending tasks, it sets a foundation to verify if we are heading in the right direction.</p>\n<h2 dir=\"auto\">Summary</h2>\n<p dir=\"auto\">This description outlines the strategy to support network inspection in Node.js and the design of the APIs that allow third-party libraries to integrate with the network inspection. Specifically, it introduces the <code class=\"notranslate\">NodeNetwork</code> domain, a Node.js-specific extension of the standard <code class=\"notranslate\">Network</code> domain, which supports both client and server application network activities.</p>\n<h2 dir=\"auto\">User stories</h2>\n<h3 dir=\"auto\">As a client app developer</h3>\n<p dir=\"auto\">I want to be able to check the network activities triggered by the client APIs (the <code class=\"notranslate\">http</code> module, <code class=\"notranslate\">fetch</code> API, and <code class=\"notranslate\">WebSocket</code> API) on devtools such as Chrome DevTools when I run the app in debugging mode via <code class=\"notranslate\">node --inspect index.js</code>.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"http.get(&quot;http://localhost:8080&quot;);\nfetch(&quot;https://localhost:8080&quot;);\"><pre class=\"notranslate\"><span class=\"pl-s1\">http</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">get</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"http://localhost:8080\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"https://localhost:8080\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3 dir=\"auto\">As a serer app developer</h3>\n<p dir=\"auto\">I want to be able to check the network traffics happened in my server on devtools such as Chrome DevTools when I run the app in debugging mode via <code class=\"notranslate\">node --inspect index.js</code>.</p>\n<h3 dir=\"auto\">As a HTTP client library developer</h3>\n<p dir=\"auto\">I want to enable my library to integrate with network inspection. For example, when my library sends a HTTP request and receives a HTTP response, it sends protocol events with debugging data to allow a library user to inspect them on devtools.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"class MyHttpClient {\n  id;\n\n  send(url, method) {\n    inspector.NodeNetwork.requestWillBeSent({ id, url, method });\n    // socket.send(url, method);\n    // ...\n  }\n\n  onReceive(response) {\n    inspector.NodeNetwork.responseReceived({ id, response });\n  }\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">class</span> <span class=\"pl-v\">MyHttpClient</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">id</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-en\">send</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">url</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">method</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">inspector</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">NodeNetwork</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">requestWillBeSent</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> id<span class=\"pl-kos\">,</span> url<span class=\"pl-kos\">,</span> method <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n    <span class=\"pl-c\">// socket.send(url, method);</span>\n    <span class=\"pl-c\">// ...</span>\n  <span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-en\">onReceive</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">response</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-s1\">inspector</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">NodeNetwork</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">responseReceived</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> id<span class=\"pl-kos\">,</span> response <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<h2 dir=\"auto\">Design</h2>\n<h3 dir=\"auto\">Tracking network activities</h3>\n<p dir=\"auto\">Network activities can be captured within <code class=\"notranslate\">diagnostics_channel</code> hooks. This approach enables us to monitor activities in both core modules (<code class=\"notranslate\">http</code>, <code class=\"notranslate\">https</code>) and external libraries (<code class=\"notranslate\">undici</code>) without changing the core implementation.</p>\n<h3 dir=\"auto\">Emit protocol events to DevTools</h3>\n<p dir=\"auto\">Network activities captured in <code class=\"notranslate\">diagnostics_channel</code> are passed to the inspector agent using the <code class=\"notranslate\">inspector.NodeNetwork</code> API as custom <code class=\"notranslate\">NodeNetwork</code> domain objects. The custom <code class=\"notranslate\">NodeNetwork</code> domain extends the standard <code class=\"notranslate\">Network</code> domain by including Node.js-specific events and commands, enabling more granular and relevant tracking of network activities specific to the Node.js environment. It also allows third-party libraries to integrate with Node.js's inspector mechanism.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">NodeNetwork</code> domain will support both client activities (such as a request sent from the client) and server activities (such as a request received by the server).</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"domain NodeNetwork\n  # Fired when a client is about to send HTTP request.\n  event requestWillBeSent\n    parameters\n      RequestId requestId\n      Request request\n      MonotonicTime timestamp\n\n  # Fire when a server receives a HTTP request.\n  event requestReceived\n    parameters\n      RequestId requestId\n      Request request\n      MonotonicTime timestamp\"><pre lang=\"pdl\" class=\"notranslate\"><code class=\"notranslate\">domain NodeNetwork\n  # Fired when a client is about to send HTTP request.\n  event requestWillBeSent\n    parameters\n      RequestId requestId\n      Request request\n      MonotonicTime timestamp\n\n  # Fire when a server receives a HTTP request.\n  event requestReceived\n    parameters\n      RequestId requestId\n      Request request\n      MonotonicTime timestamp\n</code></pre></div>\n<p dir=\"auto\">When <code class=\"notranslate\">NodeNetwork</code> event is sent, Node.js internally sends some of the <code class=\"notranslate\">Network</code> domain events to the devtools frontend so that Chrome DevTools can capture them and show network activities in the network panel.</p>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/22386678/345042377-220f33dd-989e-4f7c-8492-d3776fdb3cf7.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjMxODcxOTIsIm5iZiI6MTcyMzE4Njg5MiwicGF0aCI6Ii8yMjM4NjY3OC8zNDUwNDIzNzctMjIwZjMzZGQtOTg5ZS00ZjdjLTg0OTItZDM3NzZmZGIzY2Y3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODA5VDA3MDEzMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWVkZGI0ZjQ4NjdhNTdhNWRjYWFkZjkyOWM5OTI1ZWRiMDE2OTE0YTE1YjViMzZjZjZkZDliMjdiM2I1ZDdmYTQmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.HDaGgp3LX6sZ-FUKUV1UOkXGqTV8NaSO37JXTP-TPeQ\"><img src=\"https://private-user-images.githubusercontent.com/22386678/345042377-220f33dd-989e-4f7c-8492-d3776fdb3cf7.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjMxODcxOTIsIm5iZiI6MTcyMzE4Njg5MiwicGF0aCI6Ii8yMjM4NjY3OC8zNDUwNDIzNzctMjIwZjMzZGQtOTg5ZS00ZjdjLTg0OTItZDM3NzZmZGIzY2Y3LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODA5VDA3MDEzMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWVkZGI0ZjQ4NjdhNTdhNWRjYWFkZjkyOWM5OTI1ZWRiMDE2OTE0YTE1YjViMzZjZjZkZDliMjdiM2I1ZDdmYTQmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.HDaGgp3LX6sZ-FUKUV1UOkXGqTV8NaSO37JXTP-TPeQ\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Demo</h2>\n<p dir=\"auto\">Currenlty, the Node-specific DevTools Frontend lacks a network tab. Therefore, you'll need to use the Chrome DevTools Frontend, accessible via <code class=\"notranslate\">devtools://devtools/bundled/inspector.html</code>. Below is a simple demonstration:</p>\n<ol dir=\"auto\">\n<li>Start Node.js with the inspector and wait for a connection:</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"$ ./node --inspect-wait --experimental-network-inspection -e &quot;require('https').get('https://nodejs.org/en', (res) =&gt; { console.log(res.statusCode); })&quot;\nDebugger listening on ws://127.0.0.1:9229/&lt;inspector-websocket-id&gt;\nFor help, see: https://nodejs.org/en/docs/inspector\"><pre class=\"notranslate\"><code class=\"notranslate\">$ ./node --inspect-wait --experimental-network-inspection -e \"require('https').get('https://nodejs.org/en', (res) =&gt; { console.log(res.statusCode); })\"\nDebugger listening on ws://127.0.0.1:9229/&lt;inspector-websocket-id&gt;\nFor help, see: https://nodejs.org/en/docs/inspector\n</code></pre></div>\n<ol start=\"2\" dir=\"auto\">\n<li>Open the Chrome DevTools Frontend and connect to the Node.js inspector</li>\n</ol>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"devtools://devtools/bundled/inspector.html?ws=127.0.0.1:9229/&lt;inspector-websocket-id&gt;\"><pre class=\"notranslate\"><code class=\"notranslate\">devtools://devtools/bundled/inspector.html?ws=127.0.0.1:9229/&lt;inspector-websocket-id&gt;\n</code></pre></div>\n<ol start=\"3\" dir=\"auto\">\n<li>Navigate to the network tab to observe network activity.</li>\n</ol>\n<p dir=\"auto\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://private-user-images.githubusercontent.com/22386678/345669191-2da93524-53f5-495d-af0a-64c0079a53b4.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjMxODcxOTIsIm5iZiI6MTcyMzE4Njg5MiwicGF0aCI6Ii8yMjM4NjY3OC8zNDU2NjkxOTEtMmRhOTM1MjQtNTNmNS00OTVkLWFmMGEtNjRjMDA3OWE1M2I0LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODA5VDA3MDEzMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWIyYjQ5NTE2MTVmYmFiYjAzMzJmOWVhOWZkZGY3YjE1OWJmYzM0YTJiMTZiNzk1NTRkMjI4ZjM4NTFkZmQzOGYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.MQXfoPD-1d48hdyBsaKJr6tJgKqh8TAaN8jCnWOvOkw\"><img src=\"https://private-user-images.githubusercontent.com/22386678/345669191-2da93524-53f5-495d-af0a-64c0079a53b4.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MjMxODcxOTIsIm5iZiI6MTcyMzE4Njg5MiwicGF0aCI6Ii8yMjM4NjY3OC8zNDU2NjkxOTEtMmRhOTM1MjQtNTNmNS00OTVkLWFmMGEtNjRjMDA3OWE1M2I0LnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA4MDklMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwODA5VDA3MDEzMlomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPWIyYjQ5NTE2MTVmYmFiYjAzMzJmOWVhOWZkZGY3YjE1OWJmYzM0YTJiMTZiNzk1NTRkMjI4ZjM4NTFkZmQzOGYmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.MQXfoPD-1d48hdyBsaKJr6tJgKqh8TAaN8jCnWOvOkw\" alt=\"image\" style=\"max-width: 100%;\"></a></p>\n<h2 dir=\"auto\">Network activity sources</h2>\n<p dir=\"auto\">These APIs can be supported once each <code class=\"notranslate\">diagnostics_channel</code> provides sufficient hook timing and resources.</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">http</code> module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> <code class=\"notranslate\">https</code> module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <code class=\"notranslate\">http2</code> module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> WebSocket (I haven't tried it yet)</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> fetch API (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2119411231\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/undici/issues/2701\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/undici/pull/2701/hovercard\" href=\"https://github.com/nodejs/undici/pull/2701\">nodejs/undici#2701</a> needs to be done)</li>\n</ul>\n<h2 dir=\"auto\">Scope of this PR</h2>\n<p dir=\"auto\">This PR aims to provide a minimal implementation for network inspection, focusing on delivering the fundamental functionalities. The tasks accomplished in this PR include:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> implementing a network activity tracking mechanism with <code class=\"notranslate\">diagnositcs_channel</code>, targeting <code class=\"notranslate\">http</code> and <code class=\"notranslate\">https</code> GET requests.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> integrating the tracking mechanism with the inspector agent.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Implementing agents for the <code class=\"notranslate\">NodeNetwork</code> domain.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Implementing agents for the <code class=\"notranslate\">Network</code> domain.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Testing</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Documentation</li>\n</ul>\n<h2 dir=\"auto\">Future work</h2>\n<p dir=\"auto\">To fully support the Network domain of the CDP, several tasks remain:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Complete implementation for all network domain events as specified in the <a href=\"https://chromedevtools.github.io/devtools-protocol/tot/Network/\" rel=\"nofollow\">https://chromedevtools.github.io/devtools-protocol/tot/Network/</a>\n<ul class=\"contains-task-list\">\n<li>CDP is primarily designed for browsers, but we aim to support as many relevant features as possible in Node.js</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <a href=\"https://chromedevtools.github.io/devtools-protocol/tot/Network/#event-loadingFailed\" rel=\"nofollow\"><code class=\"notranslate\">Network.loadingFailed</code></a></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> request url</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> request headers</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> request timing</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> response method</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> status code</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> response headers</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> ...</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Add a network tab on the Node-specific DevTools frontend\n<ul dir=\"auto\">\n<li>Collaborate with the Chrome DevTools team to achieve this.</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Support client activities</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> Support server activities</li>\n</ul>\n<h2 dir=\"auto\">Limitations and Challenges</h2>\n<ul dir=\"auto\">\n<li>Response body inspection (<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2375385860\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/53593\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/53593/hovercard?comment_id=1658039637&amp;comment_type=review_comment\" href=\"https://github.com/nodejs/node/pull/53593#discussion_r1658039637\">#53593 (comment)</a>)</li>\n<li>Non-inspection features (e.g., header/request/response modification, network condition emulation, etc.)</li>\n</ul>\n<p dir=\"auto\">cc @nodejs/inspector <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/eugeneo/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/eugeneo\">@eugeneo</a></p>",
            "url": "https://github.com/nodejs/node/pull/53593",
            "title": "inspector: add initial support for network inspection",
            "date_modified": "2024-08-09T01:04:44.000Z",
            "date_published": "2024-06-26T13:38:40.000Z",
            "author": {
                "name": "cola119",
                "url": "https://github.com/cola119"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/38299977?u=88aefc5a0e292a8e7147d1941c70fcc8a4153da6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #53508.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2361591788\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/53508\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/53508/hovercard\" href=\"https://github.com/nodejs/node/issues/53508\">#53508</a><br>\n<span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #51222.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2049170307\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/51222\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/51222/hovercard\" href=\"https://github.com/nodejs/node/issues/51222\">#51222</a></p>\n<p dir=\"auto\">This Pull Request introduces two new command-line interface flags to Node.js:</p>\n<ul dir=\"auto\">\n<li><strong><code class=\"notranslate\">--test-coverage-include</code></strong>: Allows users to specify glob patterns to include specific files in the coverage report.</li>\n<li><strong><code class=\"notranslate\">--test-coverage-exclude</code></strong>: Allows users to specify glob patterns to exclude specific files from the coverage report.</li>\n</ul>\n<p dir=\"auto\">Notable change text, if any:</p>\n<div class=\"highlight highlight-text-md notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"\nIndividual file patterns can now be excluded or exclusively included in coverage reports:\n\n- To exclude a specific pattern, use `--test-coverage-exclude`. For example:\n  ```bash\n  node --experimental-test-coverage --test-coverage-exclude=**/*.test.js .\n  ```\n  This command excludes all files ending with `.test.js` from the coverage report.\n\n- To include only files that match a specific pattern, use `--test-coverage-include`. For example:\n  ```bash\n  node --experimental-test-coverage --test-coverage-include=src/**/*.js .\n  ```\n  This command includes only `.js` files located in the `src` directory and its subdirectories in the coverage report.\n\nBoth options can be specified multiple times to match multiple glob patterns. If both options are used in unison, files will need to abide by both guidelines.\"><pre class=\"notranslate\">Individual file patterns can now be excluded or exclusively included in coverage reports:\n\n<span class=\"pl-v\">-</span> To exclude a specific pattern, use <span class=\"pl-s\">`</span><span class=\"pl-c1\">--test-coverage-exclude</span><span class=\"pl-s\">`</span>. For example:\n  <span class=\"pl-s\">```</span><span class=\"pl-en\">bash</span>\n  node --experimental-test-coverage --test-coverage-exclude=<span class=\"pl-k\">**</span>/<span class=\"pl-k\">*</span>.test.js <span class=\"pl-c1\">.</span>\n  <span class=\"pl-s\">```</span>\n  This command excludes all files ending with <span class=\"pl-s\">`</span><span class=\"pl-c1\">.test.js</span><span class=\"pl-s\">`</span> from the coverage report.\n\n<span class=\"pl-v\">-</span> To include only files that match a specific pattern, use <span class=\"pl-s\">`</span><span class=\"pl-c1\">--test-coverage-include</span><span class=\"pl-s\">`</span>. For example:\n  <span class=\"pl-s\">```</span><span class=\"pl-en\">bash</span>\n  node --experimental-test-coverage --test-coverage-include=src/<span class=\"pl-k\">**</span>/<span class=\"pl-k\">*</span>.js <span class=\"pl-c1\">.</span>\n  <span class=\"pl-s\">```</span>\n  This command includes only <span class=\"pl-s\">`</span><span class=\"pl-c1\">.js</span><span class=\"pl-s\">`</span> files located in the <span class=\"pl-s\">`</span><span class=\"pl-c1\">src</span><span class=\"pl-s\">`</span> directory and its subdirectories in the coverage report.\n\nBoth options can be specified multiple times to match multiple glob patterns. If both options are used in unison, files will need to abide by both guidelines.</pre></div>",
            "url": "https://github.com/nodejs/node/pull/53553",
            "title": "test_runner: support glob matching coverage files",
            "date_modified": "2024-07-28T06:53:17.000Z",
            "date_published": "2024-06-22T23:45:30.000Z",
            "author": {
                "name": "RedYetiDev",
                "url": "https://github.com/RedYetiDev"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/201101?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This PR adds two new API to <code class=\"notranslate\">worker_threads</code> that allow for cross-thread communication via <code class=\"notranslate\">MessagePort</code>s.</p>\n<p dir=\"auto\">A thread can invoke <code class=\"notranslate\">worker.connect</code> to start a new connection to another thread. This method is blocking. Upon success, the return value is a <code class=\"notranslate\">MessagePort</code> which can be used to exchange messages.</p>\n<p dir=\"auto\">The core idea is that a thread willing to accept connections from other thread uses <code class=\"notranslate\">worker.setConnectionsListener</code> to install a callback that it is invoked with a thread id, a port and (optional) data each time another thread attempts a connection.<br>\nThe listener can return <code class=\"notranslate\">true</code> to accept the connection. Any other return value will result in the connection being refused.<br>\nBy default, if a thread has no listener associated, the connection will be refused.</p>\n<h2 dir=\"auto\">Notable Change Text</h2>\n<p dir=\"auto\">A new set of experimental APIs has been added to <code class=\"notranslate\">worker_threads</code>: <code class=\"notranslate\">connect</code> and <code class=\"notranslate\">setConnectionsListener</code>. These APIs aim to simplify 1-1 inter-thread communication in Node.js</p>\n<p dir=\"auto\">Every thread (including the main one) can start a connection to any another thread (including the main one) using the <code class=\"notranslate\">connect</code> API and providing the target <code class=\"notranslate\">threadId</code>.<br>\nIf the connection is successful, the call will return a <code class=\"notranslate\">MessagePort</code> that can be used for the communication.</p>\n<p dir=\"auto\">A thread can opt-in to receive incoming connections by calling the <code class=\"notranslate\">setConnectionsListener</code> API. The listener will be invoked for each connection attempt and must return <code class=\"notranslate\">true</code> to accept the connection. A thread without a connection listener will refused any connection by default.</p>",
            "url": "https://github.com/nodejs/node/pull/53488",
            "title": "worker: add connect and setConnectionsListener",
            "date_modified": "2024-07-08T07:39:55.000Z",
            "date_published": "2024-06-17T13:17:50.000Z",
            "author": {
                "name": "ShogunPanda",
                "url": "https://github.com/ShogunPanda"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This was previously calling the enable function by mistake. As a result, when profiling using Chrome DevTools, the async hooks won't be turned off properly after receiving Debugger.setAsyncCallStackDepth with depth 0.</p>\n",
            "url": "https://github.com/nodejs/node/pull/53473",
            "title": "inspector: fix disable async hooks on Debugger.setAsyncCallStackDepth",
            "date_modified": "2024-06-18T16:02:28.000Z",
            "date_published": "2024-06-16T15:58:01.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/38299977?u=88aefc5a0e292a8e7147d1941c70fcc8a4153da6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #52779.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2273643155\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/52779\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/52779/hovercard\" href=\"https://github.com/nodejs/node/issues/52779\">#52779</a></p>\n<p dir=\"auto\">This PR adds a new function: <code class=\"notranslate\">path.matchesGlob(path, pattern)</code>. It checks whether a glob (<code class=\"notranslate\">pattern</code>) matches the input path (<code class=\"notranslate\">path</code>).</p>\n<p dir=\"auto\">Notable change text, if you'd like to include it:</p>\n<div class=\"highlight highlight-text-md notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"Glob patterns can now be tested against individual paths via the `path.matchesGlob(path, pattern)` method.\"><pre class=\"notranslate\">Glob patterns can now be tested against individual paths via the <span class=\"pl-s\">`</span><span class=\"pl-c1\">path.matchesGlob(path, pattern)</span><span class=\"pl-s\">`</span> method.</pre></div>",
            "url": "https://github.com/nodejs/node/pull/52881",
            "title": "path: add `matchesGlob` method",
            "date_modified": "2024-07-28T06:49:30.000Z",
            "date_published": "2024-05-07T20:58:29.000Z",
            "author": {
                "name": "RedYetiDev",
                "url": "https://github.com/RedYetiDev"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><code class=\"notranslate\">process.getBuiltinModule(id)</code> provides a way to load built-in modules<br>\nin a globally available function. ES Modules that need to support<br>\nother environments can use it to conditionally load a Node.js built-in<br>\nwhen it is run in Node.js, without having to deal with the resolution<br>\nerror that can be thrown by <code class=\"notranslate\">import</code> in a non-Node.js environment or<br>\nhaving to use dynamic <code class=\"notranslate\">import()</code> which either turns the module into<br>\nan asynchronous module, or turns a synchronous API into an asynchronous one.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"if (globalThis.process?.getBuiltinModule) {\n  // Run in Node.js, use the Node.js fs module.\n  const fs = globalThis.process.getBuiltinModule('fs');\n  // If `require()` is needed to load user-modules, use createRequire()\n  const module = globalThis.process.getBuiltinModule('module');\n  const require = module.createRequire(import.meta.url);\n  const foo = require('foo');\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">globalThis</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">process</span><span class=\"pl-kos\">?.</span><span class=\"pl-c1\">getBuiltinModule</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// Run in Node.js, use the Node.js fs module.</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">fs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">globalThis</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getBuiltinModule</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'fs'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-c\">// If `require()` is needed to load user-modules, use createRequire()</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">module</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">globalThis</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">process</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">getBuiltinModule</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'module'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">require</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">module</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">createRequire</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">import</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">meta</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">url</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">foo</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">require</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'foo'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">If <code class=\"notranslate\">id</code> specifies a built-in module available in the current Node.js process,<br>\n<code class=\"notranslate\">process.getBuiltinModule(id)</code> method returns the corresponding built-in<br>\nmodule. If <code class=\"notranslate\">id</code> does not correspond to any built-in module, <code class=\"notranslate\">undefined</code><br>\nis returned.</p>\n<p dir=\"auto\"><code class=\"notranslate\">process.getBuiltinModule(id)</code> accepts built-in module IDs that are recognized<br>\nby <code class=\"notranslate\">module.isBuiltin(id)</code>.</p>\n<p dir=\"auto\">The references returned by <code class=\"notranslate\">process.getBuiltinModule(id)</code> always point to<br>\nthe built-in module corresponding to <code class=\"notranslate\">id</code> even if users modify<br>\n<code class=\"notranslate\">require.cache</code> so that <code class=\"notranslate\">require(id)</code> returns something else.</p>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #52599.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2253465122\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/52599\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/52599/hovercard\" href=\"https://github.com/nodejs/node/issues/52599\">#52599</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/52762",
            "title": "process: add process.getBuiltinModule(id)",
            "date_modified": "2024-06-18T17:17:41.000Z",
            "date_published": "2024-04-30T16:54:58.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/36735501?u=8e93f809522831771aab98cbb2a67c5e67e673d5&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">We are moving all the deprecated utils function to End Of Life</p>",
            "url": "https://github.com/nodejs/node/pull/52744",
            "title": "util: move deprecated utils to eol",
            "date_modified": "2024-05-06T09:38:12.000Z",
            "date_published": "2024-04-29T07:47:36.000Z",
            "author": {
                "name": "marco-ippolito",
                "url": "https://github.com/marco-ippolito"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/26234614?u=5edcb211e86232b06e6d6133439f9490f9f5d689&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1606023653\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/security-wg/issues/898\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/security-wg/issues/898/hovercard\" href=\"https://github.com/nodejs/security-wg/issues/898\">nodejs/security-wg#898</a></p>\n<p dir=\"auto\">With this PR, we throw access denied asynchronously for async APIs.</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"fs.readFile('restricted-file.md', (error) =&gt; {\n  // error is ERR_ACCESS_DENIED\n})\"><pre class=\"notranslate\"><span class=\"pl-s1\">fs</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">readFile</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'restricted-file.md'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">error</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// error is ERR_ACCESS_DENIED</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span></pre></div>\n<p dir=\"auto\">cc/ @nodejs/security-wg</p>",
            "url": "https://github.com/nodejs/node/pull/52730",
            "title": "src,permission: throw async errors on async APIs",
            "date_modified": "2024-04-30T02:19:57.000Z",
            "date_published": "2024-04-28T02:17:16.000Z",
            "author": {
                "name": "RafaelGSS",
                "url": "https://github.com/RafaelGSS"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/26234614?u=5edcb211e86232b06e6d6133439f9490f9f5d689&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2250041689\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/52575\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/52575/hovercard\" href=\"https://github.com/nodejs/node/issues/52575\">#52575</a></p>\n<hr>\n<p dir=\"auto\"><strong>Summary</strong>: We are dropping the <code class=\"notranslate\">--experimental-policy</code> feature from Node.js.</p>",
            "url": "https://github.com/nodejs/node/pull/52583",
            "title": "lib,src: remove --experimental-policy",
            "date_modified": "2024-07-19T10:04:28.000Z",
            "date_published": "2024-04-18T20:59:54.000Z",
            "author": {
                "name": "RafaelGSS",
                "url": "https://github.com/RafaelGSS"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is the initial PR for implementing the idea proposed in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1659280442\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47472\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47472/hovercard\" href=\"https://github.com/nodejs/node/issues/47472\">#47472</a>. It takes inspiration from ccache, the <a href=\"https://www.npmjs.com/package/v8-compile-cache\" rel=\"nofollow\">v8-compile-cache npm package</a> (but faster, supports ESM and replaces CJS loader moneky-patching in user land) and <a href=\"https://docs.google.com/document/d/1HY4jVB3mCoYWADaZgmRxFmC2vm8qFKUzdC4NZN5oVZA/view#heading=h.ijtb4m8g3w00\" rel=\"nofollow\">v8 code caching in Blink</a>. The first commit is backported from <a href=\"https://chromium-review.googlesource.com/c/v8/v8/+/5401780\" rel=\"nofollow\">https://chromium-review.googlesource.com/c/v8/v8/+/5401780</a> which has already landed in the upstream (this is required for import() to work in deserialized code). For more motivation and background of this PR, check out <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1659280442\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47472\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47472/hovercard\" href=\"https://github.com/nodejs/node/issues/47472\">#47472</a></p>\n<p dir=\"auto\">Local numbers:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"❯ hyperfine &quot;./out/Release/node test/fixtures/snapshot/typescript.js&quot; --warmup 5\nBenchmark 1: ./out/Release/node test/fixtures/snapshot/typescript.js\n  Time (mean ± σ):     124.3 ms ±  13.2 ms    [User: 109.6 ms, System: 11.6 ms]\n  Range (min … max):   116.1 ms … 170.2 ms    21 runs\n\n❯ export NODE_COMPILE_CACHE=/tmp/.node_compile_cache\n❯ hyperfine &quot;./out/Release/node test/fixtures/snapshot/typescript.js&quot; --warmup 5\nBenchmark 1: ./out/Release/node test/fixtures/snapshot/typescript.js\n  Time (mean ± σ):      72.3 ms ±   3.2 ms    [User: 62.3 ms, System: 10.2 ms]\n  Range (min … max):    70.5 ms …  87.2 ms    40 runs\"><pre class=\"notranslate\"><code class=\"notranslate\">❯ hyperfine \"./out/Release/node test/fixtures/snapshot/typescript.js\" --warmup 5\nBenchmark 1: ./out/Release/node test/fixtures/snapshot/typescript.js\n  Time (mean ± σ):     124.3 ms ±  13.2 ms    [User: 109.6 ms, System: 11.6 ms]\n  Range (min … max):   116.1 ms … 170.2 ms    21 runs\n\n❯ export NODE_COMPILE_CACHE=/tmp/.node_compile_cache\n❯ hyperfine \"./out/Release/node test/fixtures/snapshot/typescript.js\" --warmup 5\nBenchmark 1: ./out/Release/node test/fixtures/snapshot/typescript.js\n  Time (mean ± σ):      72.3 ms ±   3.2 ms    [User: 62.3 ms, System: 10.2 ms]\n  Range (min … max):    70.5 ms …  87.2 ms    40 runs\n</code></pre></div>\n<p dir=\"auto\">There are more numbers from folks trying on an earlier iteration of this work (although this branch now hashes the code and the cache as an extra check, but crc32 should be fast enough that it's not too big of an overhead). For example from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1659280442\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47472\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47472/hovercard?comment_id=2027786716&amp;comment_type=issue_comment\" href=\"https://github.com/nodejs/node/issues/47472#issuecomment-2027786716\">#47472 (comment)</a> <code class=\"notranslate\">tsc --version</code> can go from ~90ms to ~40ms, <code class=\"notranslate\">yarn --version</code> can go from ~190ms to ~135ms, from <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1659280442\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47472\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47472/hovercard?comment_id=2027820327&amp;comment_type=issue_comment\" href=\"https://github.com/nodejs/node/issues/47472#issuecomment-2027820327\">#47472 (comment)</a> <code class=\"notranslate\">npm run echo</code> with a <code class=\"notranslate\">ncc</code>-bundled npm may go from  ~150ms to ~110ms</p>\n<hr>\n<h3 dir=\"auto\">summary</h3>\n<p dir=\"auto\">This patch implements automatic on-disk code caching that can be enabled<br>\nvia an environment variable NODE_COMPILE_CACHE.</p>\n<p dir=\"auto\">When set, whenever Node.js compiles a CommonJS or a ECMAScript Module,<br>\nit will use on-disk <a href=\"https://v8.dev/blog/code-caching-for-devs\" rel=\"nofollow\">V8 code cache</a> persisted in the specified directory<br>\nto speed up the compilation. This may slow down the first load of a<br>\nmodule graph, but subsequent loads of the same module graph may get<br>\na significant speedup if the contents of the modules do not change.<br>\nLocally, this speeds up loading of test/fixtures/snapshot/typescript.js<br>\nfrom ~130ms to ~80ms.</p>\n<p dir=\"auto\">To clean up the generated code cache, simply remove the directory.<br>\nIt will be recreated the next time the same directory is used for<br>\n<code class=\"notranslate\">NODE_COMPILE_CACHE</code>.</p>\n<p dir=\"auto\">Compilation cache generated by one version of Node.js may not be used<br>\nby a different version of Node.js. Cache generated by different versions<br>\nof Node.js will be stored separately if the same directory is used<br>\nto persist the cache, so they can co-exist.</p>\n<p dir=\"auto\">Caveat: currently when using this with V8 JavaScript code coverage, the<br>\ncoverage being collected by V8 may be less precise in functions that are<br>\ndeserialized from the code cache. It's recommended to turn this off when<br>\nrunning tests to generate precise coverage.</p>\n<p dir=\"auto\">Implementation details:</p>\n<p dir=\"auto\">There is one cache file per module on disk. The directory layout<br>\nis:</p>\n<ul dir=\"auto\">\n<li>Compile cache directory (from NODE_COMPILE_CACHE)\n<ul dir=\"auto\">\n<li>8b23c8fe: CRC32 hash of CachedDataVersionTag + NODE_VERESION</li>\n<li>2ea3424d:\n<ul dir=\"auto\">\n<li>10860e5a: CRC32 hash of filename + module type</li>\n<li>431e9adc: ...</li>\n<li>...</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p dir=\"auto\">Inside the cache file, there is a header followed by the actual<br>\ncache content:</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"[uint32_t] code size\n[uint32_t] code hash\n[uint32_t] cache size\n[uint32_t] cache hash\n... compile cache content ...\"><pre class=\"notranslate\"><code class=\"notranslate\">[uint32_t] code size\n[uint32_t] code hash\n[uint32_t] cache size\n[uint32_t] cache hash\n... compile cache content ...\n</code></pre></div>\n<p dir=\"auto\">When reading the cache file, we'll also check if the code size<br>\nand code hash match the code that the module loader is loading<br>\nand whether the cache size and cache hash match the file content<br>\nread. If they don't match, or if V8 rejects the cache passed,<br>\nwe'll ignore the mismatch cache, and regenerate the cache after<br>\ncompilation succeeds and rewrite it to disk.</p>\n<p dir=\"auto\">There are still a bunch of TODOs for this feature, some of them are documented as TODO comments. In addition we can look into idle-time code cache serialization/writing which is also done by Blink to reduce the impact on first load. But this should be good enough as an initial iteration.</p>\n<p dir=\"auto\">Note: why CRC32? Because we already have it in the dependencies (in <code class=\"notranslate\">zlib.h</code>), it's fast and can avoid enough collisions for this use case. We do have some existing hashing functions available via openssl but those won't be available on no-crypto builds. We can revisit if CRC32 turns out to be inadequate for this feature. We can also revisit the directory structure or use an actual db, but for now the file I/O cost doesn't really show up when I profile it locally. The remaining bottleneck is the repeated UTF8 encoding, which I plan to get rid of in a follow-up (because it needs to dance with monkey-patching).</p>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1659280442\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47472\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47472/hovercard\" href=\"https://github.com/nodejs/node/issues/47472\">#47472</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/52535",
            "title": "module: implement NODE_COMPILE_CACHE for automatic on-disk code caching",
            "date_modified": "2024-05-23T09:23:17.000Z",
            "date_published": "2024-04-15T05:42:39.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/38299977?u=88aefc5a0e292a8e7147d1941c70fcc8a4153da6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #52508.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2240830287\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/52508\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/52508/hovercard\" href=\"https://github.com/nodejs/node/issues/52508\">#52508</a></p>\n<p dir=\"auto\">This PR introduces a new CLI flag, <code class=\"notranslate\">--test-skip-pattern</code>.</p>\n<blockquote>\n<p dir=\"auto\">\"A regular expression that configures the test runner to only execute tests whose name don't match the provided pattern.\"</p>\n</blockquote>",
            "url": "https://github.com/nodejs/node/pull/52529",
            "title": "test_runner: add --test-skip-pattern cli option",
            "date_modified": "2024-05-02T07:28:05.000Z",
            "date_published": "2024-04-14T16:59:21.000Z",
            "author": {
                "name": "RedYetiDev",
                "url": "https://github.com/RedYetiDev"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/201101?v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This PR doc-only deprecates the <code class=\"notranslate\">verbatim</code> option in <code class=\"notranslate\">dns.lookup</code> and <code class=\"notranslate\">dnsPromise.lookup</code> in favor to a new <code class=\"notranslate\">order</code> option, a string which supports the <code class=\"notranslate\">verbatim</code> (default), <code class=\"notranslate\">ipv4first</code> and <code class=\"notranslate\">ipv6first</code> values.</p>\n<p dir=\"auto\">I made it a tri-state string so that <code class=\"notranslate\">ipv6first</code> and be specified as well to solve issues like in the one linked below.</p>\n<p dir=\"auto\">The <code class=\"notranslate\">verbatim</code> option is still present but <code class=\"notranslate\">order</code> takes precedence over it.<br>\n<span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #52216.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2207445030\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/52216\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/52216/hovercard\" href=\"https://github.com/nodejs/node/issues/52216\">#52216</a>.</p>",
            "url": "https://github.com/nodejs/node/pull/52492",
            "title": "dns: add order option and support ipv6first",
            "date_modified": "2024-07-29T10:34:40.000Z",
            "date_published": "2024-04-12T09:16:23.000Z",
            "author": {
                "name": "ShogunPanda",
                "url": "https://github.com/ShogunPanda"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1935246?u=440932d4aed022e31a2140e1825c0167b7a12357&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><blockquote>\n<p dir=\"auto\">The work is mostly done by <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/lemire/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/lemire\">@lemire</a>.</p>\n</blockquote>\n<p dir=\"auto\">Suggested changes improves the performance of base64 and base64url operations.</p>\n<h2 dir=\"auto\">Benchmarks</h2>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                                confidence improvement accuracy (*)   (**)  (***)\nbuffers/buffer-base64-decode-wrapped.js n=32 linesCount=524288 charsPerLine=76        ***    196.05 %       ±2.25% ±3.03% ±4.01%\nbuffers/buffer-base64-decode.js size=8388608 n=32                                     ***    218.27 %       ±3.45% ±4.65% ±6.16%\nbuffers/buffer-base64-encode.js n=32 len=67108864                                     ***      2.95 %       ±0.67% ±0.89% ±1.16%\nbuffers/buffer-base64url-decode.js size=8388608 n=32                                  ***    218.32 %       ±4.34% ±5.84% ±7.74%\nbuffers/buffer-base64url-encode.js n=32 len=67108864                                  ***    246.27 %       ±2.68% ±3.61% ±4.79%\n\nBe aware that when doing many comparisons the risk of a false-positive result increases.\nIn this case, there are 5 comparisons, you can thus expect the following amount of false-positive results:\n  0.25 false positives, when considering a   5% risk acceptance (*, **, ***),\n  0.05 false positives, when considering a   1% risk acceptance (**, ***),\n  0.01 false positives, when considering a 0.1% risk acceptance (***)\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                                confidence improvement accuracy (*)   (**)  (***)\nbuffers/buffer-base64-decode-wrapped.js n=32 linesCount=524288 charsPerLine=76        ***    196.05 %       ±2.25% ±3.03% ±4.01%\nbuffers/buffer-base64-decode.js size=8388608 n=32                                     ***    218.27 %       ±3.45% ±4.65% ±6.16%\nbuffers/buffer-base64-encode.js n=32 len=67108864                                     ***      2.95 %       ±0.67% ±0.89% ±1.16%\nbuffers/buffer-base64url-decode.js size=8388608 n=32                                  ***    218.32 %       ±4.34% ±5.84% ±7.74%\nbuffers/buffer-base64url-encode.js n=32 len=67108864                                  ***    246.27 %       ±2.68% ±3.61% ±4.79%\n\nBe aware that when doing many comparisons the risk of a false-positive result increases.\nIn this case, there are 5 comparisons, you can thus expect the following amount of false-positive results:\n  0.25 false positives, when considering a   5% risk acceptance (*, **, ***),\n  0.05 false positives, when considering a   1% risk acceptance (**, ***),\n  0.01 false positives, when considering a 0.1% risk acceptance (***)\n</code></pre></div>",
            "url": "https://github.com/nodejs/node/pull/52428",
            "title": "buffer: improve `base64` and `base64url` performance",
            "date_modified": "2024-04-12T02:50:27.000Z",
            "date_published": "2024-04-08T18:07:00.000Z",
            "author": {
                "name": "anonrig",
                "url": "https://github.com/anonrig"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/16746759?u=60fb76d4d645e86d42b147f009f2be0836a7317c&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><h1 dir=\"auto\">Benchmarks</h1>\n<p dir=\"auto\">even thought the following issue <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2198840296\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/build/issues/3657\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/build/issues/3657/hovercard?comment_id=204153499&amp;comment_type=issue_comment\" href=\"https://github.com/nodejs/build/issues/3657#issuecomment-204153499\">nodejs/build#3657 (comment)</a>, I ran 3 times to make sure it's consistent and it is</p>\n<h2 dir=\"auto\"><code class=\"notranslate\">AbortSignal.abort()</code> creation</h2>\n<p dir=\"auto\"><a href=\"https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1508/console\" rel=\"nofollow\">Benchmark URL 1</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                              confidence improvement accuracy (*)    (**)   (***)\nabort_controller/abort-signal-static-abort.js kind='default-reason' n=5000000        ***     76.76 %       ±0.46%  ±0.62%  ±0.80%\nabort_controller/abort-signal-static-abort.js kind='same-reason' n=5000000           ***   2166.62 %      ±11.82% ±15.93% ±21.15%\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                              confidence improvement accuracy (*)    (**)   (***)\nabort_controller/abort-signal-static-abort.js kind='default-reason' n=5000000        ***     76.76 %       ±0.46%  ±0.62%  ±0.80%\nabort_controller/abort-signal-static-abort.js kind='same-reason' n=5000000           ***   2166.62 %      ±11.82% ±15.93% ±21.15%\n</code></pre></div>\n<p dir=\"auto\"><a href=\"https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1516/console\" rel=\"nofollow\">Benchmark URL 2</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                              confidence improvement accuracy (*)    (**)   (***)\nabort_controller/abort-signal-static-abort.js kind='default-reason' n=5000000        ***     75.92 %       ±0.68%  ±0.90%  ±1.18%\nabort_controller/abort-signal-static-abort.js kind='same-reason' n=5000000           ***   2191.80 %      ±10.63% ±14.32% ±19.01%\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                              confidence improvement accuracy (*)    (**)   (***)\nabort_controller/abort-signal-static-abort.js kind='default-reason' n=5000000        ***     75.92 %       ±0.68%  ±0.90%  ±1.18%\nabort_controller/abort-signal-static-abort.js kind='same-reason' n=5000000           ***   2191.80 %      ±10.63% ±14.32% ±19.01%\n</code></pre></div>\n<p dir=\"auto\"><a href=\"https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1518/console\" rel=\"nofollow\">Benchmark URL 3</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                              confidence improvement accuracy (*)    (**)   (***)\nabort_controller/abort-signal-static-abort.js kind='default-reason' n=5000000        ***     75.79 %       ±0.45%  ±0.60%  ±0.79%\nabort_controller/abort-signal-static-abort.js kind='same-reason' n=5000000           ***   2192.39 %      ±26.46% ±35.66% ±47.34%\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                              confidence improvement accuracy (*)    (**)   (***)\nabort_controller/abort-signal-static-abort.js kind='default-reason' n=5000000        ***     75.79 %       ±0.45%  ±0.60%  ±0.79%\nabort_controller/abort-signal-static-abort.js kind='same-reason' n=5000000           ***   2192.39 %      ±26.46% ±35.66% ±47.34%\n</code></pre></div>\n<h2 dir=\"auto\">Test runner Benchmark</h2>\n<p dir=\"auto\">My original intent was to improve this so this is why I ran this</p>\n<p dir=\"auto\"><a href=\"https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1507/console\" rel=\"nofollow\">Benchmark URL</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                                                     confidence improvement accuracy (*)   (**)   (***)\ntest_runner/global-concurrent-tests.js type='async' n=100                                                           3.46 %       ±4.37% ±5.81%  ±7.57%\ntest_runner/global-concurrent-tests.js type='async' n=1000                                                 ***      5.92 %       ±2.26% ±3.03%  ±3.97%\ntest_runner/global-concurrent-tests.js type='async' n=10000                                                ***     15.70 %       ±0.55% ±0.73%  ±0.96%\ntest_runner/global-concurrent-tests.js type='sync' n=100                                                    **      3.89 %       ±2.47% ±3.29%  ±4.29%\ntest_runner/global-concurrent-tests.js type='sync' n=1000                                                  ***      5.00 %       ±1.82% ±2.44%  ±3.21%\ntest_runner/global-concurrent-tests.js type='sync' n=10000                                                 ***     15.41 %       ±0.39% ±0.52%  ±0.68%\ntest_runner/global-sequential-tests.js type='async' n=100                                                           6.22 %       ±7.36% ±9.81% ±12.78%\ntest_runner/global-sequential-tests.js type='async' n=1000                                                          2.51 %       ±5.83% ±7.77% ±10.12%\ntest_runner/global-sequential-tests.js type='async' n=10000                                                         0.00 %       ±2.77% ±3.68%  ±4.79%\ntest_runner/global-sequential-tests.js type='sync' n=100                                                            1.06 %       ±4.42% ±5.90%  ±7.70%\ntest_runner/global-sequential-tests.js type='sync' n=1000                                                           0.13 %       ±3.39% ±4.51%  ±5.88%\ntest_runner/global-sequential-tests.js type='sync' n=10000                                                         -3.01 %       ±3.11% ±4.14%  ±5.39%\ntest_runner/suite-tests.js concurrency='no' testType='async' testsPerSuite=10 numberOfSuites=10            ***      5.77 %       ±2.99% ±4.01%  ±5.27%\ntest_runner/suite-tests.js concurrency='no' testType='async' testsPerSuite=10 numberOfSuites=100           ***     12.06 %       ±0.71% ±0.94%  ±1.23%\ntest_runner/suite-tests.js concurrency='no' testType='async' testsPerSuite=100 numberOfSuites=10           ***      9.29 %       ±1.05% ±1.40%  ±1.83%\ntest_runner/suite-tests.js concurrency='no' testType='async' testsPerSuite=100 numberOfSuites=100          ***     15.06 %       ±0.38% ±0.50%  ±0.65%\ntest_runner/suite-tests.js concurrency='no' testType='async' testsPerSuite=1000 numberOfSuites=10          ***     16.90 %       ±1.59% ±2.15%  ±2.84%\ntest_runner/suite-tests.js concurrency='no' testType='async' testsPerSuite=1000 numberOfSuites=100         ***     17.62 %       ±1.01% ±1.35%  ±1.79%\ntest_runner/suite-tests.js concurrency='no' testType='sync' testsPerSuite=10 numberOfSuites=10                      3.59 %       ±4.91% ±6.54%  ±8.51%\ntest_runner/suite-tests.js concurrency='no' testType='sync' testsPerSuite=10 numberOfSuites=100            ***     11.88 %       ±0.78% ±1.04%  ±1.36%\ntest_runner/suite-tests.js concurrency='no' testType='sync' testsPerSuite=100 numberOfSuites=10            ***     10.44 %       ±1.64% ±2.20%  ±2.89%\ntest_runner/suite-tests.js concurrency='no' testType='sync' testsPerSuite=100 numberOfSuites=100           ***     15.72 %       ±0.51% ±0.68%  ±0.88%\ntest_runner/suite-tests.js concurrency='no' testType='sync' testsPerSuite=1000 numberOfSuites=10           ***     18.30 %       ±1.72% ±2.32%  ±3.07%\ntest_runner/suite-tests.js concurrency='no' testType='sync' testsPerSuite=1000 numberOfSuites=100          ***     17.40 %       ±1.26% ±1.70%  ±2.25%\ntest_runner/suite-tests.js concurrency='yes' testType='async' testsPerSuite=10 numberOfSuites=10             *      4.00 %       ±3.31% ±4.41%  ±5.74%\ntest_runner/suite-tests.js concurrency='yes' testType='async' testsPerSuite=10 numberOfSuites=100          ***     10.96 %       ±0.66% ±0.87%  ±1.14%\ntest_runner/suite-tests.js concurrency='yes' testType='async' testsPerSuite=100 numberOfSuites=10          ***      9.11 %       ±0.79% ±1.05%  ±1.37%\ntest_runner/suite-tests.js concurrency='yes' testType='async' testsPerSuite=100 numberOfSuites=100         ***     16.58 %       ±0.42% ±0.56%  ±0.73%\ntest_runner/suite-tests.js concurrency='yes' testType='async' testsPerSuite=1000 numberOfSuites=10         ***     16.72 %       ±0.40% ±0.53%  ±0.70%\ntest_runner/suite-tests.js concurrency='yes' testType='async' testsPerSuite=1000 numberOfSuites=100        ***     15.42 %       ±0.19% ±0.26%  ±0.33%\ntest_runner/suite-tests.js concurrency='yes' testType='sync' testsPerSuite=10 numberOfSuites=10            ***      6.09 %       ±1.99% ±2.65%  ±3.47%\ntest_runner/suite-tests.js concurrency='yes' testType='sync' testsPerSuite=10 numberOfSuites=100           ***      9.95 %       ±1.28% ±1.71%  ±2.22%\ntest_runner/suite-tests.js concurrency='yes' testType='sync' testsPerSuite=100 numberOfSuites=10           ***      9.46 %       ±1.58% ±2.10%  ±2.73%\ntest_runner/suite-tests.js concurrency='yes' testType='sync' testsPerSuite=100 numberOfSuites=100          ***     16.19 %       ±0.47% ±0.63%  ±0.81%\ntest_runner/suite-tests.js concurrency='yes' testType='sync' testsPerSuite=1000 numberOfSuites=10          ***     17.06 %       ±0.25% ±0.33%  ±0.43%\ntest_runner/suite-tests.js concurrency='yes' testType='sync' testsPerSuite=1000 numberOfSuites=100         ***     15.00 %       ±0.17% ±0.23%  ±0.30%\n\nBe aware that when doing many comparisons the risk of a false-positive\nresult increases. In this case, there are 36 comparisons, you can thus\nexpect the following amount of false-positive results:\n1.80 false positives, when considering a   5% risk acceptance (*, **, ***),\n0.36 false positives, when considering a   1% risk acceptance (**, ***),\n0.04 false positives, when considering a 0.1% risk acceptance (***)\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                                                     confidence improvement accuracy (*)   (**)   (***)\ntest_runner/global-concurrent-tests.js type='async' n=100                                                           3.46 %       ±4.37% ±5.81%  ±7.57%\ntest_runner/global-concurrent-tests.js type='async' n=1000                                                 ***      5.92 %       ±2.26% ±3.03%  ±3.97%\ntest_runner/global-concurrent-tests.js type='async' n=10000                                                ***     15.70 %       ±0.55% ±0.73%  ±0.96%\ntest_runner/global-concurrent-tests.js type='sync' n=100                                                    **      3.89 %       ±2.47% ±3.29%  ±4.29%\ntest_runner/global-concurrent-tests.js type='sync' n=1000                                                  ***      5.00 %       ±1.82% ±2.44%  ±3.21%\ntest_runner/global-concurrent-tests.js type='sync' n=10000                                                 ***     15.41 %       ±0.39% ±0.52%  ±0.68%\ntest_runner/global-sequential-tests.js type='async' n=100                                                           6.22 %       ±7.36% ±9.81% ±12.78%\ntest_runner/global-sequential-tests.js type='async' n=1000                                                          2.51 %       ±5.83% ±7.77% ±10.12%\ntest_runner/global-sequential-tests.js type='async' n=10000                                                         0.00 %       ±2.77% ±3.68%  ±4.79%\ntest_runner/global-sequential-tests.js type='sync' n=100                                                            1.06 %       ±4.42% ±5.90%  ±7.70%\ntest_runner/global-sequential-tests.js type='sync' n=1000                                                           0.13 %       ±3.39% ±4.51%  ±5.88%\ntest_runner/global-sequential-tests.js type='sync' n=10000                                                         -3.01 %       ±3.11% ±4.14%  ±5.39%\ntest_runner/suite-tests.js concurrency='no' testType='async' testsPerSuite=10 numberOfSuites=10            ***      5.77 %       ±2.99% ±4.01%  ±5.27%\ntest_runner/suite-tests.js concurrency='no' testType='async' testsPerSuite=10 numberOfSuites=100           ***     12.06 %       ±0.71% ±0.94%  ±1.23%\ntest_runner/suite-tests.js concurrency='no' testType='async' testsPerSuite=100 numberOfSuites=10           ***      9.29 %       ±1.05% ±1.40%  ±1.83%\ntest_runner/suite-tests.js concurrency='no' testType='async' testsPerSuite=100 numberOfSuites=100          ***     15.06 %       ±0.38% ±0.50%  ±0.65%\ntest_runner/suite-tests.js concurrency='no' testType='async' testsPerSuite=1000 numberOfSuites=10          ***     16.90 %       ±1.59% ±2.15%  ±2.84%\ntest_runner/suite-tests.js concurrency='no' testType='async' testsPerSuite=1000 numberOfSuites=100         ***     17.62 %       ±1.01% ±1.35%  ±1.79%\ntest_runner/suite-tests.js concurrency='no' testType='sync' testsPerSuite=10 numberOfSuites=10                      3.59 %       ±4.91% ±6.54%  ±8.51%\ntest_runner/suite-tests.js concurrency='no' testType='sync' testsPerSuite=10 numberOfSuites=100            ***     11.88 %       ±0.78% ±1.04%  ±1.36%\ntest_runner/suite-tests.js concurrency='no' testType='sync' testsPerSuite=100 numberOfSuites=10            ***     10.44 %       ±1.64% ±2.20%  ±2.89%\ntest_runner/suite-tests.js concurrency='no' testType='sync' testsPerSuite=100 numberOfSuites=100           ***     15.72 %       ±0.51% ±0.68%  ±0.88%\ntest_runner/suite-tests.js concurrency='no' testType='sync' testsPerSuite=1000 numberOfSuites=10           ***     18.30 %       ±1.72% ±2.32%  ±3.07%\ntest_runner/suite-tests.js concurrency='no' testType='sync' testsPerSuite=1000 numberOfSuites=100          ***     17.40 %       ±1.26% ±1.70%  ±2.25%\ntest_runner/suite-tests.js concurrency='yes' testType='async' testsPerSuite=10 numberOfSuites=10             *      4.00 %       ±3.31% ±4.41%  ±5.74%\ntest_runner/suite-tests.js concurrency='yes' testType='async' testsPerSuite=10 numberOfSuites=100          ***     10.96 %       ±0.66% ±0.87%  ±1.14%\ntest_runner/suite-tests.js concurrency='yes' testType='async' testsPerSuite=100 numberOfSuites=10          ***      9.11 %       ±0.79% ±1.05%  ±1.37%\ntest_runner/suite-tests.js concurrency='yes' testType='async' testsPerSuite=100 numberOfSuites=100         ***     16.58 %       ±0.42% ±0.56%  ±0.73%\ntest_runner/suite-tests.js concurrency='yes' testType='async' testsPerSuite=1000 numberOfSuites=10         ***     16.72 %       ±0.40% ±0.53%  ±0.70%\ntest_runner/suite-tests.js concurrency='yes' testType='async' testsPerSuite=1000 numberOfSuites=100        ***     15.42 %       ±0.19% ±0.26%  ±0.33%\ntest_runner/suite-tests.js concurrency='yes' testType='sync' testsPerSuite=10 numberOfSuites=10            ***      6.09 %       ±1.99% ±2.65%  ±3.47%\ntest_runner/suite-tests.js concurrency='yes' testType='sync' testsPerSuite=10 numberOfSuites=100           ***      9.95 %       ±1.28% ±1.71%  ±2.22%\ntest_runner/suite-tests.js concurrency='yes' testType='sync' testsPerSuite=100 numberOfSuites=10           ***      9.46 %       ±1.58% ±2.10%  ±2.73%\ntest_runner/suite-tests.js concurrency='yes' testType='sync' testsPerSuite=100 numberOfSuites=100          ***     16.19 %       ±0.47% ±0.63%  ±0.81%\ntest_runner/suite-tests.js concurrency='yes' testType='sync' testsPerSuite=1000 numberOfSuites=10          ***     17.06 %       ±0.25% ±0.33%  ±0.43%\ntest_runner/suite-tests.js concurrency='yes' testType='sync' testsPerSuite=1000 numberOfSuites=100         ***     15.00 %       ±0.17% ±0.23%  ±0.30%\n\nBe aware that when doing many comparisons the risk of a false-positive\nresult increases. In this case, there are 36 comparisons, you can thus\nexpect the following amount of false-positive results:\n1.80 false positives, when considering a   5% risk acceptance (*, **, ***),\n0.36 false positives, when considering a   1% risk acceptance (**, ***),\n0.04 false positives, when considering a 0.1% risk acceptance (***)\n</code></pre></div>",
            "url": "https://github.com/nodejs/node/pull/52408",
            "title": "lib: improve perf of `AbortSignal` creation",
            "date_modified": "2024-04-17T20:00:52.000Z",
            "date_published": "2024-04-07T19:32:29.000Z",
            "author": {
                "name": "rluvaton",
                "url": "https://github.com/rluvaton"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3109072?u=a2f71b4e0a61161b88f81b2ed09682f3379d1d60&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This introduces a doc-only deprecation of using GCM authentication tags that are shorter than the cipher's block size, unless the user specified the <code class=\"notranslate\">authTagLength</code> option.</p>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"2220954203\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/52327\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/52327/hovercard\" href=\"https://github.com/nodejs/node/issues/52327\">#52327</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/52345",
            "title": "crypto: deprecate implicitly shortened GCM tags",
            "date_modified": "2024-04-10T08:16:37.000Z",
            "date_published": "2024-04-03T13:58:29.000Z",
            "author": {
                "name": "tniessen",
                "url": "https://github.com/tniessen"
            }
        }
    ]
}