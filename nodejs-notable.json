{
    "version": "https://jsonfeed.org/version/1",
    "title": "Node.js notable changes",
    "home_page_url": "https://azu.github.io/github-search-rss/nodejs-notable.json",
    "feed_url": "https://azu.github.io/github-search-rss/nodejs-notable.json",
    "description": "Node.js notable changes on GitHub",
    "items": [
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1935246?u=440932d4aed022e31a2140e1825c0167b7a12357&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">From now on, you can pass multiple <code class=\"notranslate\">--env-file</code> arguments. Each valid config file will<br>\noverride any pre-existing declarations made in previous config file.</p>\n<p dir=\"auto\">Example:</p>\n<div class=\"highlight highlight-source-shell notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"node --env-file=.env --env-file=.development.env index.js\"><pre class=\"notranslate\">node --env-file=.env --env-file=.development.env index.js</pre></div>\n<p dir=\"auto\">Ref: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1848712274\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49148\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/49148/hovercard\" href=\"https://github.com/nodejs/node/issues/49148\">#49148</a></p>",
            "url": "https://github.com/nodejs/node/pull/49542",
            "title": "src: support multiple `--env-file` declarations",
            "date_modified": "2023-09-10T03:44:39.000Z",
            "date_published": "2023-09-07T18:20:29.000Z",
            "author": {
                "name": "anonrig",
                "url": "https://github.com/anonrig"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18269663?u=0c9e9c1f0a4d40e2b3f46d18f0e6721f9125411a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is an automated update of root-certificates to 3.93.</p>\n<p dir=\"auto\">Notable change:<br>\nRoot certificates added:</p>\n<ul dir=\"auto\">\n<li>Sectigo Public Server Authentication Root E46</li>\n<li>Sectigo Public Server Authentication Root R46</li>\n<li>SSL.com TLS RSA Root CA 2022</li>\n<li>SSL.com TLS ECC Root CA 2022</li>\n<li>Atos TrustedRoot Root CA ECC TLS 2021</li>\n<li>Atos TrustedRoot Root CA RSA TLS 2021</li>\n</ul>\n<p dir=\"auto\">Root certificates removed:</p>\n<ul dir=\"auto\">\n<li>Hongkong Post Root CA 1</li>\n<li>E-Tugra Certification Authority</li>\n<li>E-Tugra Global Root CA RSA v3</li>\n<li>E-Tugra Global Root CA ECC v3</li>\n</ul>",
            "url": "https://github.com/nodejs/node/pull/49341",
            "title": "crypto: update root-certificates to 3.93",
            "date_modified": "2023-08-29T15:44:59.000Z",
            "date_published": "2023-08-27T00:22:48.000Z",
            "author": {
                "name": "nodejs-github-bot",
                "url": "https://github.com/nodejs-github-bot"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/3012099?u=b5d31a5d6b688ed6823b52a3fcc91c2f506f4fd3&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This PR removes the <code class=\"notranslate\">globalPreload</code> module customization hook. It is no longer needed now that its functionality is provided by the <code class=\"notranslate\">register</code> API paired with the <code class=\"notranslate\">initialize</code> hook. You can see examples of refactoring from <code class=\"notranslate\">globalPreload</code> to <code class=\"notranslate\">register</code> / <code class=\"notranslate\">initialize</code> in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1878893727\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49465\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49465/hovercard\" href=\"https://github.com/nodejs/node/pull/49465\">#49465</a> and in some of the updated tests in this PR.</p>\n<p dir=\"auto\">Besides removing the hook itself, the <code class=\"notranslate\">test-esm-loader-hooks.mjs</code> test <code class=\"notranslate\">describe('globalPreload'</code> block and <code class=\"notranslate\">test-esm-loader-side-effect.mjs</code> were removed. These were testing parts of <code class=\"notranslate\">globalPreload</code>, like that its communications ports work, that we already have separate tests for covering the superseding equivalent in <code class=\"notranslate\">register</code> / <code class=\"notranslate\">initialize</code>; or they were testing things that we don’t need tests for outside of the <code class=\"notranslate\">globalPreload</code> context, such that global variables declared in a preload script are accessible on the main thread. (The new API calls <code class=\"notranslate\">register</code> from the main thread, and global variables can be declared there, and we don’t need a test that global variables declared on the main thread can be read on the main thread.)</p>\n<p dir=\"auto\">This PR completes the <a href=\"https://github.com/nodejs/loaders#milestone-2-stability\">loaders roadmap Milestone 2</a>.</p>\n<h3 dir=\"auto\">Notable changes</h3>\n<h4 dir=\"auto\">Module customization hook <code class=\"notranslate\">globalPreload</code> removed; use <code class=\"notranslate\">register</code> and <code class=\"notranslate\">initialize</code> instead</h4>\n<p dir=\"auto\">The module customization hook <code class=\"notranslate\">globalPreload</code> has been removed. Instead, use <a href=\"https://nodejs.org/api/module.html#moduleregister\" rel=\"nofollow\"><code class=\"notranslate\">register</code></a> to send data from the application thread to the customization hooks, and the <a href=\"https://nodejs.org/api/module.html#initialize\" rel=\"nofollow\"><code class=\"notranslate\">initialize</code></a> hook to establish a communications channel between the threads.</p>",
            "url": "https://github.com/nodejs/node/pull/49144",
            "title": "esm: remove `globalPreload` hook (superseded by `initialize`)",
            "date_modified": "2023-09-11T03:23:42.000Z",
            "date_published": "2023-08-13T17:04:53.000Z",
            "author": {
                "name": "JakobJingleheimer",
                "url": "https://github.com/JakobJingleheimer"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/43477095?u=520c93b926f357e71202130c45627289ef817bb6&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Breaking change: Support for a single comma separates list for allow-fs-* flags is removed.</p>\n<p dir=\"auto\">This means that</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"--alow-fs-read=/path/to/file.txt,/other/file/path.txt\"><pre class=\"notranslate\"><code class=\"notranslate\">--alow-fs-read=/path/to/file.txt,/other/file/path.txt\n</code></pre></div>\n<p dir=\"auto\">Will be interpreted as a single file.</p>\n<p dir=\"auto\">When using a single flag and including commas in said flag a warning will be emitted explaining the change.</p>\n<p dir=\"auto\">Instead now multiple flags can be passed to allow multiple paths.</p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"--allow-fs-read=/path/to/file.txt --allow-fs-read=/other/file/path.txt\"><pre class=\"notranslate\"><code class=\"notranslate\">--allow-fs-read=/path/to/file.txt --allow-fs-read=/other/file/path.txt\n</code></pre></div>\n<p dir=\"auto\">Will allow access to both paths.</p>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #1039.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1773489419\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/security-wg/issues/1039\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/security-wg/issues/1039/hovercard\" href=\"https://github.com/nodejs/security-wg/issues/1039\">nodejs/security-wg#1039</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/49047",
            "title": "src,permission: add multiple allow-fs-* flags",
            "date_modified": "2023-08-21T16:22:49.000Z",
            "date_published": "2023-08-06T21:18:13.000Z",
            "author": {
                "name": "Ceres6",
                "url": "https://github.com/Ceres6"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/598730?u=62984c4f4ede922870c5cc2dbdf498926c7c0f9e&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Unflags <code class=\"notranslate\">import.meta.resolve</code> making the second <code class=\"notranslate\">parentURL</code> argument still gated behind the same <code class=\"notranslate\">--experimental-import-meta-resolve</code> flag so that existing users would retain backwards compatibility, while the default behaviour becomes standards compliant.</p>\n<p dir=\"auto\">If we can combine this approach with supporting <code class=\"notranslate\">file:///</code> URLs in <code class=\"notranslate\">fetch</code>, that would be a powerful new approach for cross-platform asset loading - <code class=\"notranslate\">await (await fetch(import.meta.resolve('./asset.bin'))).arrayBuffer()</code> which hopefully in turn bundlers should also be able to support better too.</p>\n<p dir=\"auto\">//cc @nodejs/modules</p>",
            "url": "https://github.com/nodejs/node/pull/49028",
            "title": "esm: unflag import.meta.resolve",
            "date_modified": "2023-08-13T14:55:49.000Z",
            "date_published": "2023-08-05T17:43:26.000Z",
            "author": {
                "name": "guybedford",
                "url": "https://github.com/guybedford"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1935246?u=440932d4aed022e31a2140e1825c0167b7a12357&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><blockquote>\n<p dir=\"auto\">Follow-ups in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1848712274\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49148\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/49148/hovercard\" href=\"https://github.com/nodejs/node/issues/49148\">#49148</a></p>\n</blockquote>\n<h2 dir=\"auto\">Follow-up from the comments:</h2>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/cjihrig/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/cjihrig\">@cjihrig</a>:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Using a custom path instead of .env file in the current working directory.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> The option to augment vs. overwrite the existing process.env with the values from the .env file. If we support augmenting, what happens on conflict (overwrite, don’t overwrite, throw, etc.)?</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <del>Programmatic API</del>.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <del>The ability to put the loaded values in an object other than process.env.</del></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <del>Multiline values.</del></li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Comments in the .env files.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> <del>Variable expansion.</del></li>\n</ul>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/KhafraDev/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/KhafraDev\">@KhafraDev</a></p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> regarding testing and validation, you can take dotenv’s test suite <a href=\"https://github.com/motdotla/dotenv/tree/master/tests\">https://github.com/motdotla/dotenv/tree/master/tests</a></li>\n</ul>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/GeoffreyBooth/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/GeoffreyBooth\">@GeoffreyBooth</a></p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> the flag should be –env-file [path-to-file] so like –env-file .env or –env-file .env.development or whatever.</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> fix and support windows newline character</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> Support <code class=\"notranslate\">NODE_OPTIONS</code></li>\n</ul>\n<h2 dir=\"auto\">Missing features</h2>\n<p dir=\"auto\">The following features are not implemented in this current context. And can be implemented in a separate PR.</p>\n<ul dir=\"auto\">\n<li>Respect newline character in values with <code class=\"notranslate\">\"</code></li>\n<li>Multiline values</li>\n<li>Variable expansion</li>\n<li>Incremental env support (.env.development overrides .env on NODE_ENV=development)</li>\n</ul>\n<p dir=\"auto\">Ref: <a href=\"https://github.com/orgs/nodejs/discussions/44975\">https://github.com/orgs/nodejs/discussions/44975</a></p>",
            "url": "https://github.com/nodejs/node/pull/48890",
            "title": "src: add built-in `.env` file support",
            "date_modified": "2023-09-06T11:10:01.000Z",
            "date_published": "2023-07-23T04:18:28.000Z",
            "author": {
                "name": "anonrig",
                "url": "https://github.com/anonrig"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67366097?u=61689a08b94862d67a9ebb69b8f9b94ae07e9ca9&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>",
            "url": "https://github.com/nodejs/node/pull/48765",
            "title": "inspector: open add `SymbolDispose`",
            "date_modified": "2023-07-16T09:47:00.000Z",
            "date_published": "2023-07-14T07:43:18.000Z",
            "author": {
                "name": "atlowChemi",
                "url": "https://github.com/atlowChemi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1935246?u=440932d4aed022e31a2140e1825c0167b7a12357&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This pull request improves the performance of <code class=\"notranslate\">fs.readFileSync</code> for UTF-8 encoding.</p>\n<p dir=\"auto\">Benchmark CI: <a href=\"https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1346\" rel=\"nofollow\">https://ci.nodejs.org/view/Node.js%20benchmark/job/benchmark-node-micro-benchmarks/1346</a></p>\n<div class=\"snippet-clipboard-content notranslate position-relative overflow-auto\" data-snippet-clipboard-copy-content=\"                                                                  confidence improvement accuracy (*)   (**)   (***)\nfs/readFileSync.js n=600 path='existing' encoding='undefined'                    -2.98 %       ±3.46% ±4.61%  ±6.00%\nfs/readFileSync.js n=600 path='existing' encoding='utf8'                 ***     72.60 %       ±6.46% ±8.64% ±11.32%\nfs/readFileSync.js n=600 path='non-existing' encoding='undefined'                -1.16 %       ±2.29% ±3.05%  ±3.97%\nfs/readFileSync.js n=600 path='non-existing' encoding='utf8'                      2.02 %       ±3.05% ±4.06%  ±5.28%\n\nBe aware that when doing many comparisons the risk of a false-positive\nresult increases. In this case, there are 4 comparisons, you can thus\nexpect the following amount of false-positive results:\n  0.20 false positives, when considering a   5% risk acceptance (*, **, ***),\n  0.04 false positives, when considering a   1% risk acceptance (**, ***),\n  0.00 false positives, when considering a 0.1% risk acceptance (***)\"><pre class=\"notranslate\"><code class=\"notranslate\">                                                                  confidence improvement accuracy (*)   (**)   (***)\nfs/readFileSync.js n=600 path='existing' encoding='undefined'                    -2.98 %       ±3.46% ±4.61%  ±6.00%\nfs/readFileSync.js n=600 path='existing' encoding='utf8'                 ***     72.60 %       ±6.46% ±8.64% ±11.32%\nfs/readFileSync.js n=600 path='non-existing' encoding='undefined'                -1.16 %       ±2.29% ±3.05%  ±3.97%\nfs/readFileSync.js n=600 path='non-existing' encoding='utf8'                      2.02 %       ±3.05% ±4.06%  ±5.28%\n\nBe aware that when doing many comparisons the risk of a false-positive\nresult increases. In this case, there are 4 comparisons, you can thus\nexpect the following amount of false-positive results:\n  0.20 false positives, when considering a   5% risk acceptance (*, **, ***),\n  0.04 false positives, when considering a   1% risk acceptance (**, ***),\n  0.00 false positives, when considering a 0.1% risk acceptance (***)\n</code></pre></div>",
            "url": "https://github.com/nodejs/node/pull/48658",
            "title": "fs: add a fast-path for readFileSync utf-8",
            "date_modified": "2023-09-12T01:18:03.000Z",
            "date_published": "2023-07-05T15:37:45.000Z",
            "author": {
                "name": "anonrig",
                "url": "https://github.com/anonrig"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/67366097?u=61689a08b94862d67a9ebb69b8f9b94ae07e9ca9&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">I am not sure this is the correct way to expose such a util, <del>and I still need to add docs and UT</del>, just wanted to get some feedback first 🙂</p>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1773498025\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/48550\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/48550/hovercard?comment_id=1612702494&amp;comment_type=issue_comment\" href=\"https://github.com/nodejs/node/pull/48550#issuecomment-1612702494\">#48550 (comment)</a></p>\n<p dir=\"auto\"><a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/mcollina/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/mcollina\">@mcollina</a> <a class=\"user-mention notranslate\" data-hovercard-type=\"user\" data-hovercard-url=\"/users/benjamingr/hovercard\" data-octo-click=\"hovercard-link-click\" data-octo-dimensions=\"link_type:self\" href=\"https://github.com/benjamingr\">@benjamingr</a> CC</p>\n",
            "url": "https://github.com/nodejs/node/pull/48596",
            "title": "events: allow safely adding listener to abortSignal",
            "date_modified": "2023-07-06T16:48:18.000Z",
            "date_published": "2023-06-29T10:24:01.000Z",
            "author": {
                "name": "atlowChemi",
                "url": "https://github.com/atlowChemi"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8221854?u=656e1eb9ee161eedbd253bebb625d523b191a8a3&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Both TypeScript and Bable already support <code class=\"notranslate\">using</code> (<a href=\"https://github.com/tc39/proposal-explicit-resource-management\">explicit resource management proposal</a>),<br>\nadding this to node will be convenient</p>\n<p dir=\"auto\">Co-authored-by: Benjamin Gruenbaum <a href=\"mailto:benjamingr@gmail.com\">benjamingr@gmail.com</a></p>",
            "url": "https://github.com/nodejs/node/pull/48518",
            "title": "fs, stream: add initial `Symbol.dispose` and `Symbol.asyncDispose` support",
            "date_modified": "2023-09-11T13:59:47.000Z",
            "date_published": "2023-06-22T09:10:40.000Z",
            "author": {
                "name": "MoLow",
                "url": "https://github.com/MoLow"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/4299420?u=d7eb2cf3db5f2a4df73a8f719c2e9e3d648e4e43&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This PR (hopefully) fixes a bunch of memory leaks &amp; use-after-free surrounding <code class=\"notranslate\">vm.Script</code>, <code class=\"notranslate\">vm.compileFunction</code>, <code class=\"notranslate\">vm.SyntheticModule</code> and <code class=\"notranslate\">vm.SourceTextModule</code> when dynamic import is used (see the issues referenced below) and makes it possible for people to upgrade from older versions of Node.js.</p>\n<p dir=\"auto\">This cannot land as-is on v20.x as it depends on <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1880869824\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49491\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49491/hovercard\" href=\"https://github.com/nodejs/node/pull/49491\">#49491</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1875121662\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/49419\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/49419/hovercard\" href=\"https://github.com/nodejs/node/pull/49419\">#49419</a> which break the ABI on v20x. If this proves to fix the issues in the wild without causing regressions, we'll need to do an exceptional breakage of ABI on v20.x to backport it (hopefully before it goes LTS and before v21.x is cut). It might be already too late to break the ABI on v18.x, however.</p>\n<h4 dir=\"auto\">module: use symbol in WeakMap to manage host defined options</h4>\n<p dir=\"auto\">Previously when managing the importModuleDynamically callback of<br>\nvm.compileFunction(), we use an ID number as the host defined option<br>\nand maintain a per-Environment ID -&gt; CompiledFnEntry map to retain<br>\nthe top-level referrer function returned by vm.compileFunction() in<br>\norder to pass it back to the callback, but it would leak because with<br>\nhow we used v8::Persistent to maintain this reference, V8 would not<br>\nbe able to understand the cycle and would just think that the<br>\nCompiledFnEntry was supposed to live forever. We made an attempt<br>\nto make that reference known to V8 by making the CompiledFnEntry weak<br>\nand using a private symbol to make CompiledFnEntry strongly<br>\nreferences the top-level referrer function in<br>\n<a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1595732057\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/46785\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/46785/hovercard\" href=\"https://github.com/nodejs/node/pull/46785\">#46785</a>, but that turned out to be<br>\nunsound, because the there's no guarantee that the top-level function<br>\nmust be alive while import() can still be initiated from that<br>\nfunction, since V8 could discard the top-level function and only keep<br>\ninner functions alive, so relying on the top-level function to keep<br>\nthe CompiledFnEntry alive could result in use-after-free which caused<br>\na revert of that fix.</p>\n<p dir=\"auto\">With this patch we use a symbol in the host defined options instead of<br>\na number, because with the stage-3 symbol-as-weakmap-keys proposal<br>\nwe could directly use that symbol to keep the referrer alive using a<br>\nWeakMap. As a bonus this also keeps the other kinds of referrers<br>\nalive as long as import() can still be initiated from that<br>\nScript/Module, so this also fixes the long-standing crash caused by<br>\nvm.Script being GC'ed too early when its importModuleDynamically<br>\ncallback still needs it.</p>\n<h4 dir=\"auto\">module: fix leak of vm.SyntheticModule</h4>\n<p dir=\"auto\">Previously we maintain a strong persistent reference to the<br>\nModuleWrap to retrieve the ID-to-ModuleWrap mapping from<br>\nthe HostImportModuleDynamicallyCallback using the number ID<br>\nstored in the host-defined options. As a result the ModuleWrap<br>\nwould be kept alive until the Environment is shut down, which<br>\nwould be a leak for user code. With the new symbol-based<br>\nhost-defined option we can just get the ModuleWrap from the<br>\nJS-land WeakMap so there's now no need to maintain this<br>\nstrong reference. This would at least fix the leak for<br>\nvm.SyntheticModule. vm.SourceTextModule is still leaking<br>\ndue to the strong persistent reference to the v8::Module.</p>\n<h4 dir=\"auto\">module: fix the leak in SourceTextModule and ContextifySript</h4>\n<p dir=\"auto\">Replace the persistent handles to v8::Module and<br>\nv8::UnboundScript with an internal reference that V8's GC is<br>\naware of to fix the leaks.</p>\n<p dir=\"auto\">Refs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1335517586\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/44211\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/44211/hovercard\" href=\"https://github.com/nodejs/node/issues/44211\">#44211</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1147212720\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/42080\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/42080/hovercard\" href=\"https://github.com/nodejs/node/issues/42080\">#42080</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1624228307\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47096\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47096/hovercard\" href=\"https://github.com/nodejs/node/issues/47096\">#47096</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1248078522\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/43205\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/43205/hovercard\" href=\"https://github.com/nodejs/node/issues/43205\">#43205</a><br>\nRefs: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"892413466\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/38695\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/38695/hovercard\" href=\"https://github.com/nodejs/node/issues/38695\">#38695</a></p>\n",
            "url": "https://github.com/nodejs/node/pull/48510",
            "title": "module: use symbol in weakmap to maintain lifetime of modules' host defined options",
            "date_modified": "2023-09-14T19:28:00.000Z",
            "date_published": "2023-06-21T16:01:05.000Z",
            "author": {
                "name": "joyeecheung",
                "url": "https://github.com/joyeecheung"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18269663?u=0c9e9c1f0a4d40e2b3f46d18f0e6721f9125411a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is an automated update of root-certificates to 3.90.</p>",
            "url": "https://github.com/nodejs/node/pull/48416",
            "title": "crypto: update root-certificates to 3.90",
            "date_modified": "2023-08-24T12:36:44.000Z",
            "date_published": "2023-06-11T00:29:15.000Z",
            "author": {
                "name": "nodejs-github-bot",
                "url": "https://github.com/nodejs-github-bot"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8500303?u=50e30202b089c2c9bd355d8f86eae6ebcda67ffd&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">Node-API version 9 promotes the following Node-API into stable:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">node_api_throw_syntax_error</code></li>\n<li><code class=\"notranslate\">node_api_create_syntax_error</code></li>\n<li><code class=\"notranslate\">node_api_symbol_for</code></li>\n<li><code class=\"notranslate\">node_api_get_module_file_name</code></li>\n</ul>\n<p dir=\"auto\">Runtime behavior changes introduced in <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1707725672\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47975\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/47975/hovercard\" href=\"https://github.com/nodejs/node/pull/47975\">#47975</a> and <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1708514946\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47986\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/47986/hovercard\" href=\"https://github.com/nodejs/node/pull/47986\">#47986</a> are still left experimental since they landed just in the past month and not backported to all LTS lines.</p>\n<p dir=\"auto\">/cc @nodejs/node-api-implementer</p>",
            "url": "https://github.com/nodejs/node/pull/48151",
            "title": "node-api: define version 9",
            "date_modified": "2023-06-02T15:09:39.000Z",
            "date_published": "2023-05-24T10:52:21.000Z",
            "author": {
                "name": "legendecas",
                "url": "https://github.com/legendecas"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/1084056?u=67d7d93b07701371573e69af932ddc1f5c17fce8&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\"><del>Still I need to add the list of notable changes and bugs this fixes, but let's see how the CI goes.</del></p>\n<h2 dir=\"auto\">Notable changes</h2>\n<ul dir=\"auto\">\n<li>linux: introduce io_uring support <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1665308925\" data-permission-text=\"Title is private\" data-url=\"https://github.com/libuv/libuv/issues/3952\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/libuv/libuv/pull/3952/hovercard\" href=\"https://github.com/libuv/libuv/pull/3952\">libuv/libuv#3952</a></li>\n<li>src: add new metrics APIs <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1373706051\" data-permission-text=\"Title is private\" data-url=\"https://github.com/libuv/libuv/issues/3749\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/libuv/libuv/pull/3749/hovercard\" href=\"https://github.com/libuv/libuv/pull/3749\">libuv/libuv#3749</a></li>\n<li>unix,win: give thread pool threads an 8 MB stack <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1407340585\" data-permission-text=\"Title is private\" data-url=\"https://github.com/libuv/libuv/issues/3787\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/libuv/libuv/pull/3787/hovercard\" href=\"https://github.com/libuv/libuv/pull/3787\">libuv/libuv#3787</a></li>\n<li>win,unix: change execution order of timers <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1628086284\" data-permission-text=\"Title is private\" data-url=\"https://github.com/libuv/libuv/issues/3927\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/libuv/libuv/pull/3927/hovercard\" href=\"https://github.com/libuv/libuv/pull/3927\">libuv/libuv#3927</a></li>\n</ul>\n<h2 dir=\"auto\">Fixes</h2>\n<ul dir=\"auto\">\n<li><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #43931.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1313260849\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/43931\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/43931/hovercard\" href=\"https://github.com/nodejs/node/issues/43931\">#43931</a></li>\n<li><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #42496.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1182585807\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/42496\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/42496/hovercard\" href=\"https://github.com/nodejs/node/issues/42496\">#42496</a></li>\n<li><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #47715.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1683451725\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47715\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47715/hovercard\" href=\"https://github.com/nodejs/node/issues/47715\">#47715</a></li>\n<li><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #47259.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1640865919\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47259\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47259/hovercard\" href=\"https://github.com/nodejs/node/issues/47259\">#47259</a></li>\n<li><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #47241.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1638491428\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47241\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47241/hovercard\" href=\"https://github.com/nodejs/node/issues/47241\">#47241</a></li>\n</ul>",
            "url": "https://github.com/nodejs/node/pull/48078",
            "title": "deps: upgrade to libuv 1.45.0",
            "date_modified": "2023-09-11T14:03:48.000Z",
            "date_published": "2023-05-19T11:57:47.000Z",
            "author": {
                "name": "santigimeno",
                "url": "https://github.com/santigimeno"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/403268?u=ee621ccb994518b40e8bbf43ae2cf49ff09bcace&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is an example toy loader that supports HTTP[S]. This code <em>should</em> work (in a simplistic way):</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export async function load(url, context, nextLoad) {\n  if (url.startsWith('http://') || url.startsWith('https://')) {\n    const response = await fetch(url, {redirect: 'follow'})\n    const source = await response.text()\n\n    return {shortCircuit: true, format: 'module',source}\n  }\n  return await nextLoad(url, context)\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">load</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">url</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">context</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">nextLoad</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">url</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">startsWith</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'http://'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s1\">url</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">startsWith</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">response</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-en\">fetch</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">url</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">redirect</span>: <span class=\"pl-s\">'follow'</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-k\">const</span> <span class=\"pl-s1\">source</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">response</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">text</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>\n\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span><span class=\"pl-c1\">shortCircuit</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">format</span>: <span class=\"pl-s\">'module'</span><span class=\"pl-kos\">,</span>source<span class=\"pl-kos\">}</span>\n  <span class=\"pl-kos\">}</span>\n  <span class=\"pl-k\">return</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">nextLoad</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">url</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Unfortunately, this won't work. If you use it, you will get an <code class=\"notranslate\">ERR_UNSUPPORTED_ESM_URL_SCHEME</code> because the default Node.js resolver doesn't support HTTPS, and throws on unknown schemes. So unfortunately I had to write that this loader needs a resolver, even though the only thing it does is support loading HTTPS. And the resolver I had to wrote was non-trivial, and IIUC replicates some of what the default resolver does:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"export async function resolve(specifier, context, nextResolve) {\n  if (isBareSpecifier(specifier))\n    return await nextResolve(specifier, context)\n\n  const url = new URL(specifier, context.parentURL).href\n\n  if (url.startsWith('http://') || url.startsWith('https://'))\n    return {url, shortCircuit: true}\n\n  return await nextResolve(specifier, context)\n}\"><pre class=\"notranslate\"><span class=\"pl-k\">export</span> <span class=\"pl-k\">async</span> <span class=\"pl-k\">function</span> <span class=\"pl-en\">resolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">specifier</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">context</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">nextResolve</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-en\">isBareSpecifier</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">specifier</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">nextResolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">specifier</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">url</span> <span class=\"pl-c1\">=</span> <span class=\"pl-k\">new</span> <span class=\"pl-c1\">URL</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">specifier</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">context</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">parentURL</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">href</span>\n\n  <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">url</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">startsWith</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'http://'</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">||</span> <span class=\"pl-s1\">url</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">startsWith</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n    <span class=\"pl-k\">return</span> <span class=\"pl-kos\">{</span>url<span class=\"pl-kos\">,</span> <span class=\"pl-c1\">shortCircuit</span>: <span class=\"pl-c1\">true</span><span class=\"pl-kos\">}</span>\n\n  <span class=\"pl-k\">return</span> <span class=\"pl-k\">await</span> <span class=\"pl-s1\">nextResolve</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">specifier</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">Thinking about it more, I realized that the only reason I need to write this resolver is that Node.js doesn't recognize the HTTP scheme <em>in its resolver</em>. But if Node.js would have not recognized the scheme in the <em>loader</em>, then I wouldn't have needed to write this resolver <em>at all</em>.</p>\n<p dir=\"auto\">So my point is this: <strong>both checks for unknown scheme and unknown file extension should move from the default Node.js <em>resolver</em> to the default Node.js <em>loader</em></strong>. This will obviate the need for some loaders to implement a <code class=\"notranslate\">resolve</code> which mostly replicates the Node.js logic, just for the sake of avoiding these exceptions.</p>\n<p dir=\"auto\">This PR implements exactly that.</p>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #138.\">Fixes</span> <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1684476758\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/loaders/issues/138\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/loaders/issues/138/hovercard\" href=\"https://github.com/nodejs/loaders/issues/138\">nodejs/loaders#138</a></p>\n\n<p dir=\"auto\">Notable change:</p>\n<p dir=\"auto\">The ESM loader no longer throws on unknown protocol/file extension in the resolve phase, so <code class=\"notranslate\">import.meta.resolve</code> behavior matches the behavior of other runtimes. This change is potentially for loader hooks authors that rely on the old behavior.</p>",
            "url": "https://github.com/nodejs/node/pull/47824",
            "title": "module: change default resolver to not throw on unknown scheme",
            "date_modified": "2023-05-19T16:27:09.000Z",
            "date_published": "2023-05-02T16:52:04.000Z",
            "author": {
                "name": "giltayar",
                "url": "https://github.com/giltayar"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8060102?u=760da5b2df4aee15a706e239ea1d03cbf2f2262c&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This PR introduces a new FakeTimers API for the native Node.js test runner.</p>\n<p dir=\"auto\"><strong>I'm opening it for review as I've implemented all features for this initial version (it's still missing docs but I think we can start moving forward while I write them)</strong></p>\n<h2 dir=\"auto\">Backlog</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - accept a list of \"Which timers/things do I mock?\"</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - add an experimental warning</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - tests</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - 100% code coverage</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - docs</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - be part of the mock module</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - works with globals</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - works with require(\"timers/promises\")</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - works with require(\"timers\")</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - have a <code class=\"notranslate\">.reset</code> function to clear the state</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - have a <code class=\"notranslate\">.releaseAllTimers</code> function to trigger all functions</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - <code class=\"notranslate\">.reset</code> calls itself after an <code class=\"notranslate\">.it</code> test</li>\n</ul>\n<h3 dir=\"auto\">API:</h3>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - globals\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - setTimeout</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - clearTimeout</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - setInterval</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - clearInterval</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - timers\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - setTimeout</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - clearTimeout</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - setInterval</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - clearInterval</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - timers/promises\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - setTimeout</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\" checked=\"\"> - setInterval</li>\n</ul>\n</li>\n</ul>\n<p dir=\"auto\">For the next version:</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> - Date.now</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> - performance.now</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> - scheduler.wait</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> - queueMicrotask/process.nextTick</li>\n<li class=\"task-list-item\"><input type=\"checkbox\" id=\"\" disabled=\"\" class=\"task-list-item-checkbox\"> - add tests for <a href=\"https://github.com/sinonjs/fake-timers/blob/main/test/fake-timers-test.js\">edge cases</a></li>\n</ul>\n<h2 dir=\"auto\">MockTimers Design API</h2>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"MockTimers.enable(['setInterval', 'setTimeout' ]) // enable fake timers\nMockTimers.reset()  // clean up to the original state\nMockTimers.tick(100) // advance in time by 100ms\nMockTimers.runAll() // release all timers\"><pre class=\"notranslate\"><span class=\"pl-v\">MockTimers</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">enable</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'setInterval'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'setTimeout'</span> <span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// enable fake timers</span>\n<span class=\"pl-v\">MockTimers</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">reset</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span>  <span class=\"pl-c\">// clean up to the original state</span>\n<span class=\"pl-v\">MockTimers</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">tick</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">100</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// advance in time by 100ms</span>\n<span class=\"pl-v\">MockTimers</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">runAll</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// release all timers</span></pre></div>\n<p dir=\"auto\">Usage example:</p>\n<div class=\"highlight highlight-source-js notranslate position-relative overflow-auto\" dir=\"auto\" data-snippet-clipboard-copy-content=\"import assert from 'node:assert';\nimport { test } from 'node:test';\n\ntest('mocks setTimeout to be executed synchronously without having to actually wait for it', (context) =&gt; {\n  const fn = context.mock.fn();\n  context.mock.timers.enable(['setTimeout']);\n  const nineSecs = 9000;\n  setTimeout(fn, nineSecs);\n\n  const threeSeconds = 3000;\n  context.mock.timers.tick(threeSeconds);\n  context.mock.timers.tick(threeSeconds);\n  context.mock.timers.tick(threeSeconds);\n\n  assert.strictEqual(fn.mock.callCount(), 1);\n});\n\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s1\">assert</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'node:assert'</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">test</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'node:test'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'mocks setTimeout to be executed synchronously without having to actually wait for it'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">context</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">fn</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">context</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">fn</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-s1\">context</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">timers</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">enable</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'setTimeout'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">nineSecs</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">9000</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-en\">setTimeout</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fn</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">nineSecs</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">const</span> <span class=\"pl-s1\">threeSeconds</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">3000</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-s1\">context</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">timers</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">tick</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">threeSeconds</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-s1\">context</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">timers</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">tick</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">threeSeconds</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-s1\">context</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">timers</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">tick</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">threeSeconds</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-s1\">assert</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">strictEqual</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">fn</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">mock</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">callCount</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n",
            "url": "https://github.com/nodejs/node/pull/47775",
            "title": "test_runner: introduces a new MockTimers API ",
            "date_modified": "2023-09-10T04:25:48.000Z",
            "date_published": "2023-04-28T22:18:28.000Z",
            "author": {
                "name": "ErickWendel",
                "url": "https://github.com/ErickWendel"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/5355921?u=609129e6c550cfc6beb27503b5ba163140277ee9&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/>\n<p dir=\"auto\">Issue: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1659497554\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47480\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47480/hovercard\" href=\"https://github.com/nodejs/node/issues/47480\">#47480</a></p>\n<p dir=\"auto\">An exception with the code <code class=\"notranslate\">ERR_HTTP_BODY_NOT_ALLOWED</code> is thrown if an attempt is made to write to the body of a response when the HTTP spec does not allow the response to contain content.</p>\n<ul dir=\"auto\">\n<li>Request method is <code class=\"notranslate\">HEAD</code></li>\n<li>Response status is <code class=\"notranslate\">204</code> or <code class=\"notranslate\">304</code></li>\n</ul>\n<p dir=\"auto\">For release notes:</p>\n<p dir=\"auto\">An error is thrown if when writing to an HTTP response which does not allow contents.</p>",
            "url": "https://github.com/nodejs/node/pull/47732",
            "title": "http: prevent writing to the body when not allowed by HTTP spec",
            "date_modified": "2023-05-25T18:31:28.000Z",
            "date_published": "2023-04-26T17:38:27.000Z",
            "author": {
                "name": "gerrard00",
                "url": "https://github.com/gerrard00"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/2512748?u=4d3b96c531c7d0ae8b192a48105b6f4554152a2a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This commit adds support for combining code coverage reports in the test runner. This allows coverage to be collected for child processes, and by extension, the test runner CLI.</p>\n<p dir=\"auto\"><span class=\"issue-keyword tooltipped tooltipped-se\" aria-label=\"This pull request closes issue #47669.\">Fixes</span>: <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1679504850\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47669\" data-hovercard-type=\"issue\" data-hovercard-url=\"/nodejs/node/issues/47669/hovercard\" href=\"https://github.com/nodejs/node/issues/47669\">#47669</a></p>\n<p dir=\"auto\">Notable change text:</p>\n<p dir=\"auto\">Code coverage obtained from multiple processes via <code class=\"notranslate\">--experimental-test-coverage</code> can now be combined into a single report. This allows code coverage to be used with <code class=\"notranslate\">--test</code>.</p>\n",
            "url": "https://github.com/nodejs/node/pull/47686",
            "title": "test_runner: support combining coverage reports",
            "date_modified": "2023-04-28T13:22:10.000Z",
            "date_published": "2023-04-23T14:48:07.000Z",
            "author": {
                "name": "cjihrig",
                "url": "https://github.com/cjihrig"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/18269663?u=0c9e9c1f0a4d40e2b3f46d18f0e6721f9125411a&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">This is an automated update of root-certificates to 3.89.</p>\n<p dir=\"auto\">For release notes:</p>\n<blockquote>\n<p dir=\"auto\">Update root certificates to NSS 3.89. Certificates removed:</p>\n<ul dir=\"auto\">\n<li>Network Solutions Certificate Authority</li>\n<li>EC-ACC</li>\n<li>Staat der Nederlanden EV Root CA</li>\n</ul>\n</blockquote>",
            "url": "https://github.com/nodejs/node/pull/47659",
            "title": "crypto: update root-certificates to 3.89",
            "date_modified": "2023-08-24T12:36:34.000Z",
            "date_published": "2023-04-21T11:40:00.000Z",
            "author": {
                "name": "nodejs-github-bot",
                "url": "https://github.com/nodejs-github-bot"
            }
        },
        {
            "content_html": "<img src=\"https://avatars.githubusercontent.com/u/8221854?u=656e1eb9ee161eedbd253bebb625d523b191a8a3&v=4\" width=\"64\" height=\"64\" alt=\"\"/><br/><p dir=\"auto\">a followup for <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1661470717\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47499\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/47499/hovercard\" href=\"https://github.com/nodejs/node/pull/47499\">#47499</a><br>\nthis includes a lean implementation of <a href=\"https://github.com/isaacs/node-glob\">https://github.com/isaacs/node-glob</a> on top of minimatch (added at <a class=\"issue-link js-issue-link\" data-error-text=\"Failed to load title\" data-id=\"1661470717\" data-permission-text=\"Title is private\" data-url=\"https://github.com/nodejs/node/issues/47499\" data-hovercard-type=\"pull_request\" data-hovercard-url=\"/nodejs/node/pull/47499/hovercard\" href=\"https://github.com/nodejs/node/pull/47499\">#47499</a>)</p>\n<p dir=\"auto\">this is marked as \n<a id=\"label-e6c186\" href=\"https://github.com/nodejs/node/labels/semver-major\" data-name=\"semver-major\" style=\"--label-r:251;--label-g:202;--label-b:4;--label-h:48;--label-s:96;--label-l:50;\" data-view-component=\"true\" class=\"IssueLabel hx_IssueLabel Label--inline\">\n  semver-major</a>\n  <tool-tip id=\"tooltip-8b258084-5eb6-42f6-99a9-8b985b7f4dd1\" for=\"label-e6c186\" popover=\"manual\" data-direction=\"s\" data-type=\"description\" data-view-component=\"true\" class=\"sr-only position-absolute\">PRs that contain breaking changes and should be released in the next major version.</tool-tip>\n since a couple of edge cases will produce a different list of tests such as file names containing <code class=\"notranslate\">*</code></p>",
            "url": "https://github.com/nodejs/node/pull/47653",
            "title": "test_runner: support passing globs",
            "date_modified": "2023-08-25T08:35:31.000Z",
            "date_published": "2023-04-21T00:07:09.000Z",
            "author": {
                "name": "MoLow",
                "url": "https://github.com/MoLow"
            }
        }
    ]
}